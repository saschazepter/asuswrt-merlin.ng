<?xml version="1.0"?>
<xmlMandatorySingleRootNode copyright="Broadcom Ltd., 2006-2018"  warning="This file is auto-generated.  Edits to this file will be lost!" >





<object name="Device." shortObjectName="Dev2DeviceObject" specSource="TR181" profile="Device2_Baseline:1" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="common" multiCompObj="true" oid="1000" lockZone="0" />
  <description source="TRx">The top-level object for a Device.</description>

  <parameter name="RootDataModelVersion" type="string" specSource="TR181" profile="Device2_Baseline:3" requirements="R" supportLevel="ReadOnly" defaultValue="2.15" maxLength="32" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Root data model version, e.g. 2.4.  For a vendor-defined root data model, this is the standard Broadband Forum model on which the vendor defined model is based.  Possible patters: 2\.\d+</description>

  <parameter name="InterfaceStackNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_Baseline:1" requirements="R" supportLevel="ReadOnly" defaultValue="0" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The number of entries in the InterfaceStack table.</description>




<object name="Device.X_BROADCOM_COM_AppCfg." shortObjectName="AppCfgObject" specSource="Broadcom" profile="Unspecified" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="common" multiCompObj="true" oid="3130" lockZone="7" />
  <description source="BROADCOM">This object has child objects which contain defines for individual applications.</description>




<object name="Device.X_BROADCOM_COM_AppCfg.BcmMsgdCfg." shortObjectName="BcmMsgdCfgObject" specSource="Broadcom" profile="Unspecified" supportLevel="Present" hideObjectFromAcs="true" bbfProtocol="common" oid="3339" lockZone="0" />
  <description source="BROADCOM">This objects contains config parameters for the BCM msgd (BDK message router).</description>

  <parameter name="LoggingLevel" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="Error" validValuesArray="LoggingLevelValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="BROADCOM">BCM uLog Level for this app.&#10;Enumeration of:&#10;&quot;Error&quot;&#10;&quot;Notice&quot;&#10;&quot;Debug&quot;&#10;</description>

  <parameter name="LoggingDestinationMask" type="unsignedInt" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="1" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="BROADCOM">Bitmask of where the BCM uLog message go (1=Std Error, 2=Syslog)</description>




<object name="Device.X_BROADCOM_COM_AppCfg.UspMdCfg." shortObjectName="UspMdCfgObject" specSource="Broadcom" profile="X_BROADCOM_COM_USP:1" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="common" oid="3333" lockZone="3" />
  <description source="BROADCOM">This objects contains config parameters for the usp_md app.</description>

  <parameter name="LoggingLevel" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="Error" validValuesArray="LoggingLevelValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="BROADCOM">BCM uLog Level for this app.&#10;Enumeration of:&#10;&quot;Error&quot;&#10;&quot;Notice&quot;&#10;&quot;Debug&quot;&#10;</description>

  <parameter name="LoggingDestinationMask" type="unsignedInt" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="1" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="BROADCOM">Bitmask of where the BCM uLog message go (1=Std Error, 2=Syslog)</description>




<object name="Device.X_BROADCOM_COM_AppCfg.ObuspaCfg." shortObjectName="ObuspaCfgObject" specSource="Broadcom" profile="X_BROADCOM_COM_USP:1" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="common" oid="3334" lockZone="3" />
  <description source="BROADCOM">This objects contains config parameters for the obuspa app.</description>

  <parameter name="LoggingLevel" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="Error" validValuesArray="LoggingLevelValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="BROADCOM">BCM uLog Level for this app.&#10;Enumeration of:&#10;&quot;Error&quot;&#10;&quot;Notice&quot;&#10;&quot;Debug&quot;&#10;</description>

  <parameter name="LoggingDestinationMask" type="unsignedInt" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="1" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="BROADCOM">Bitmask of where the BCM uLog message go (1=Std Error, 2=Syslog)</description>

  <parameter name="ProtocolTrace" type="boolean" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="BROADCOM">Toggle Obuspa protocol trace</description>




<object name="Device.LocalAgent." shortObjectName="Dev2LocalagentObject" specSource="TR181" profile="Device2_LocalAgent:1" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="usp" oid="1350" lockZone="3" />
  <description source="TRx">This object contains general information about the USP Agent itself.  For information related to the Device that hosts the Agent, please reference the DeviceInfo object.         NOTE: The Vendor Log File table (DeviceInfo.VendorLogFile) details are located on the DeviceInfo object. </description>

  <parameter name="EndpointID" type="string" specSource="TR181" profile="Device2_LocalAgent:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The unique USP identifier for this USP Agent. </description>

  <parameter name="SoftwareVersion" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" maxLength="64" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The current USP Agent software version; not the version of the overall device firmware, which is located in DeviceInfo.SoftwareVersion. To allow version comparisons, this element SHOULD be in the form of dot-delimited integers, where each successive integer represents  a more minor category of variation.  For example, 3.0.21 where the components mean: Major.Minor.Build. </description>

  <parameter name="UpTime" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Time in seconds since the USP Agent was last restarted (either via a reset of the software or reboot of the underlying device). </description>

  <parameter name="SupportedProtocols" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Comma-separated list (at least 1 items) of strings. USP Message Transfer Protocols supported by this USP Agent.  The USP Agent MUST support at least one Protocol.  Each list item is an enumeration of: CoAP (This value was DEPRECATED in 2.15 because the CoAP MTP was deprecated in USP 1.2), WebSocket, STOMP, MQTT</description>

  <parameter name="SupportedFingerprintAlgorithms" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Comma-separated list of strings, each entry is an algorithm for calculating firgerprints that is supported by the Agent. Each list item is an enumeration of SHA-1, SHA-224, SHA-256, SHA-384, SHA-512 </description>

  <parameter name="AdvertisedDeviceSubtypes" type="string" specSource="TR181" profile="Device2_LocalAgent:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Comma-separted list of strings, each entry is a subtype component of the service type that is advertised for the device using mDNS as defined in RFC6762 </description>

  <parameter name="MaxSubscriptionChangeAdoptionTime" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" minValue="5" maxValue="4294967295" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The acceptable amount of time in seconds between the alteration of the Agent's Subscriptions (e.g. updated subscription, new subscription, removed subscription, etc.) and the notifications related to those subscriptions being delivered. For example, if this parameter is set to 30 seconds, then once a Subscription has been updated, the Agent has 30 seconds before it needs to start delivering notifications based on the updated version of the Subscription (instead of the old version of the Subscription). </description>

  <parameter name="X_BROADCOM_COM_DualStackPreference" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="IPv4" validValuesArray="uspDualStackValues" hideParameterFromAcs="true" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="usp" />
  <description source="BROADCOM">This parameter specifies the preference of layer 3 protocol for local agent. </description>

  <parameter name="MTPNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_LocalAgent:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The number of entries in the MTP table. </description>

  <parameter name="ControllerNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_Controllers:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The number of entries in the Controller table. </description>

  <parameter name="SubscriptionNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_Subscriptions:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The number of entries in the Subscription table. </description>

  <parameter name="RequestNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The number of entries in the Request table. </description>

  <parameter name="CertificateNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The numbe of entries in the Certificate table. </description>




<object name="Device.LocalAgent.MTP.{i}." shortObjectName="Dev2LocalagentMtpObject" specSource="TR181" profile="Device2_LocalAgent:1" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="usp" oid="1351" lockZone="3" />
  <description source="TRx">Each instance of this table represents a MTP used by the local Agent. At most one entry in this table can exist with a given value for Alias. On creation of a new table entry, the Agent MUST choose an initial value for Alias such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therfore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Device2_LocalAgent:1" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-agent-mtp" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="usp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constaints MUST be enforced: MUST NOT be empty. MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Enable/Disable this MTP instance. If this MTP instance is to be disabled and currently used for communication with the requesting controller, the agent has to send the request response first, before disabling it. </description>

  <parameter name="Status" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" validValuesArray="uspMtpStatusValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The current operational state of the MTP instance. Enumeration of: Up, Down (when this MTP instance cannot establish communication), Error (when this MTP instance is misconfigured, OPTIONAL). </description>

  <parameter name="Protocol" type="string" specSource="TR181" profile="Device2_LocalAgent:1" requirements="W" supportLevel="ReadWrite" defaultValue="WebSocket" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The value MUST be a member of the list reported by the Device.Local.Agent.SupportedProtocols parameter. The Message Transport Protocol (MTP) to be used for communications by a USP Endpoint. </description>

  <parameter name="EnableMDNS" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">This parameter, when true, enables the advertisement of DNS-SD services defined for this MTP instance using mDNS as defined in RFC6762. This parameter cannot be set to true if there are multiple MTP instances with the same value of the Protocol parameter. When true, the hostname advertised in the SRV record MUST be a Fully Qualified Domain Name (FQDN). The interfaces that advertise these DNS-SD services are restriced to the set of interfaces associated with this MTP instance and the interfaces defined by the DNS.SD.AdvertisedInterfaces parameter. </description>




<object name="Device.LocalAgent.MTP.{i}.CoAP." shortObjectName="Dev2LocalagentMtpCoapObject" specSource="TR181" profile="Device2_CoAPAgent:1" requirements="P" supportLevel="NotSupported" hideObjectFromAcs="false" bbfProtocol="usp" oid="1352" lockZone="3" />
  <description source="TRx">If the USP Endpoint uses the CoAP Message Transport Protocol (MTP), then this object contains CoAP specific configuration parameters. </description>

  <parameter name="Interfaces" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Comma-separated list of strings. Each list item MUST be the Path Name of the IP.Interface object instance that this server will use as its host address to receive USP messages. If the referenced object is deleted, the corresponding item MUST be removed from the list. An empty string will bind this server to all interfaces for this device. </description>

  <parameter name="Port" type="unsignedInt" specSource="TR181" profile="Device2_CoAPAgent:1" requirements="W" supportLevel="ReadWrite" defaultValue="5683" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The port number used by the CoAP Server to receive USP messages. </description>

  <parameter name="Path" type="string" specSource="TR181" profile="Device2_CoAPAgent:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The path that is used by the CoAP Server in order to receive USP messages. </description>

  <parameter name="IsEncrypted" type="boolean" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">This parameter represents whether or not communications that utilize this CoAP object instance are encrypted. </description>

  <parameter name="EnableEncryption" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">When true, encryption is used for this MTP instance. </description>




<object name="Device.LocalAgent.MTP.{i}.STOMP." shortObjectName="Dev2LocalagentMtpStompObject" specSource="TR181" profile="Device2_STOMPAgent:1" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="usp" oid="1353" lockZone="3" />
  <description source="TRx">If the USP Endpoint uses the STOMP Message Transport Protocol (MTP), then this object contains STOMP Client specific configuration parameters related to how the Agent communicates with the STOMP Server. </description>

  <parameter name="Reference" type="string" specSource="TR181" profile="Device2_STOMPAgent:1" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The value MUST be the Path Name of a row in the STOMP.Connection table. If the referenced object is deleted, the parameter value MUST be set to an empty string. A reference to the STOMP Connection used by this Agent when communicating via the STOMP MTP. </description>

  <parameter name="Destination" type="string" specSource="TR181" profile="Device2_STOMPAgent:1" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The STOMP destination where the Agent will be listening to incoming USP messages. </description>

  <parameter name="DestinationFromServer" type="string" specSource="TR181" profile="Device2_STOMPAgent:1" requirements="R" supportLevel="ReadOnly" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The STOMP destination contained in the subscribe-dest header of the CONNECTED STOMP Frame. If the Agent doesn't receive a subscribe-dest header in the CONNECTED STOMP Frame, then the value of this Parameter is empty. If this parameter's value is not empty then this is the STOMP destination address for this Agent, but if the value is empty the Destination Parameter contains the STOMP destination address for this Agent. </description>




<object name="Device.LocalAgent.MTP.{i}.WebSocket." shortObjectName="Dev2LocalagentMtpWebsocketObject" specSource="TR181" profile="Device2_WebSocketAgent:1" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="usp" oid="1354" lockZone="3" />
  <description source="TRx">If the USP Endpoint uses the WebSocket Message Transport Protocol (MTP) as a WebSocket server, then this object contains WebSocket specific configuration parameters. </description>

  <parameter name="Interfaces" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Comma-separated list of strings. Each list item MUST be the Path Name of the IP.Interface object instance that this server will use as its host address to receive USP messages. An empty string will bind this server to all interfaces for this device. </description>

  <parameter name="Port" type="unsignedInt" specSource="TR181" profile="Device2_WebSocketAgent:1" requirements="W" supportLevel="ReadWrite" defaultValue="5683" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The port number used by the WebSocket Server to receive USP messages. </description>

  <parameter name="Path" type="string" specSource="TR181" profile="Device2_WebSocketAgent:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The path that is used by the WebSocket Server in order to receive USP messages. </description>

  <parameter name="EnableEncryption" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">When true, encryption MUST be used for all connections to this MTP instance. </description>




<object name="Device.LocalAgent.MTP.{i}.MQTT." shortObjectName="Dev2LocalagentMtpMqttObject" specSource="TR181" profile="Device2_MQTTAgent:1" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="usp" oid="1355" lockZone="3" />
  <description source="TRx">If the USP Endpoint uses the MQTT Message Transport Protocol (MTP), then this object contains MQTT Client specific configuration parameters related to how the Agent communicates with the MQTT broker. </description>

  <parameter name="Reference" type="string" specSource="TR181" profile="Device2_MQTTAgent:1" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The value MUST be the Path Name of a row in the MQTT.Client table. A reference to the MQTT Client used by this Agent when communicating via the MQTT MTP. </description>

  <parameter name="ResponseTopicConfigured" type="string" specSource="TR181" profile="Device2_MQTTAgent:1" requirements="W" supportLevel="ReadWrite" maxLength="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The Agent's configured "reply to" topic. When MQTT 5.0 is being used, this value is put in the PUBLISH Response Topic property for all PUBLISH packets with a USP Record, if no Response Information (value recorded in ResponseTopicDiscovered) is included in the CONNACK. When MQTT 3.1.1 is being used, this value is put at the end of the PUBLISH Topic Name property (as specified in [Section "MQTT Binding"/TR-369]. If the value of ResponseTopicConfigured is not a subset (wildcarded or precise match) of any of the Reference MQTT.Client.{i}.Subscription.{i}.Topic values the Agent MUST subscribe to this Topic. The value MUST NOT contain any wild card characters ("+", "#"). </description>

  <parameter name="ResponseTopicDiscovered" type="string" specSource="TR181" profile="Device2_MQTTAgent:1" requirements="R" supportLevel="ReadOnly" maxLength="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Duplicate of Reference MQTT.Client.{i}.ResponseInformation. This is the value of the CONNACK Response Information property supplied by a MQTT 5.0 server and is used by a MQTT 5.0 client as the basis for the PUBLISH Response Topic property for all PUBLISH packets that expect a response. If a value is received from the MQTT 5.0 server, it will be used instead of any value configured in ResponseTopicConfigured. </description>

  <parameter name="PublishQoS" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" minValue="0" maxValue="2" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The Agent MUST use this QoS value when sending a USP Record on this MTP. If the referenced MQTT Client uses MQTT 5.0 and the MQTT server only indicates support for a QoS value in the CONNACK Maximum QoS property lower than this QoS value, the Agent MUST use the highest QoS value that is supported by the server. </description>




<object name="Device.LocalAgent.Controller.{i}." shortObjectName="Dev2LocalagentControllerObject" specSource="TR181" profile="Device2_Controllers:1" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="usp" oid="1356" lockZone="3" />
  <description source="TRx">Each instance of this table represents a USP Controller that has access to this USP Agent. At most one entry in this table can exist with a given value for EndpointID, or with a given value for Alias. On creation of a new table entry, the Agent MUST choose an initial value for Alias sucah that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's bee assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Device2_Controllers:1" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-controller" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="usp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constaints MUST be enforced: MUST NOT be empty. MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned. </description>

  <parameter name="EndpointID" type="string" specSource="TR181" profile="Device2_Controllers:1" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="usp" />
    <description source="TRx">The unique USP identifier for this USP Controller. </description>

  <parameter name="ControllerCode" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="128" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Information about the configuration state of an Agent as it pertains to the Controller instance. This is not information related to an operator's installation or usage of the protocol, that information is maintained in ProvisioningCode. This parameter could be used in scenarios where the Controller needs to perform some kind of initialization or periodic configuration monitoring. For example, a Controller might perform some initial configuration of an Agent on first contact (perhaps to configure the Subscriptions).  The Controller could inspect this parameter to determine the current state of the Agent's configuration, allowing the Controller to streamline the configuration process. </description>

  <parameter name="ProvisioningCode" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="64" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Identifying information which MAY be used by the Controller instance to determine Controller instance specific customization and provisioning parameters. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_Controllers:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Enable/Disable this Controller instance.  When false, messages (notifications) are not sent to the remote endpoint represented by this Controller instance. </description>

  <parameter name="AssignedRole" type="string" specSource="TR181" profile="Device2_Controllers:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Eeach list item MUST be the Path Name of a row in the Device.LocalAgent.ControllerTrust.Role table. If the referenced object is deleted, the corresponding item MUST be removed from the list. Comma-separated list of strings, each entry is a Role that has been assigned to this Controller instance by means other than the LocalAgent.ControllerTrust.Credential.{i}.Role parameter. </description>

  <parameter name="InheritedRole" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Each list item MUST be the Path Name of a row in the Device.LocalAgent.ControllerTrust.Role table. If the referenced object is deleted, the corresponding item MUST be removed from the list. Comma-separated list of strings, each entry is a Role that has been assigned to this Controller instance from the LocalAgent.ControllerTrust.Credential.{i}.Role parameter associated with the CA credential (LocalAgent.ControllerTrust.Credential.{i}.Credential) used to validate the Controller certificate. </description>

  <parameter name="Credential" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The value MUST be the Path Name of a row in the Certificate table. If the referenced object is deleted, the parameter value MUST be set to an empty string.  Comma-separated list of strings, the set of certificates from Certificate.{i} that a Controller can present for use in authenticating the identity of this Controller instance. </description>

  <parameter name="PeriodicNotifInterval" type="unsignedInt" specSource="TR181" profile="Device2_Controllers:1" requirements="W" supportLevel="ReadWrite" defaultValue="10" minValue="1" maxValue="4294967295" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">If a Periodic Event Notification Subscription instance is associated with this USP Controller, then this is the duration in seconds of the interval for which the USP Agent MUST attempt to issue a Periodic Notification to the USP Controller. </description>

  <parameter name="PeriodicNotifTime" type="dateTime" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="0001-01-01T00:00:00Z" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">If a Periodic Event Notification Subscription instance is associated with this USP Controller, then this is an absolute time reference in UTC to determine when the USP Agent will issue a Periodic Notification. Each Periodic Notification MUST occur at this reference time plus or minus an integer multiple of the PeriodicNotifInterval. PeriodicNotifTime is used only to set the phase of the Periodic Event Notifications. The actual value of PeriodicNotifTime can be arbitrarily far into the  past or future. For example, if PeriodicNotifInterval is 86400 (a day) and if PeriodicNotifTime is set to UTC midnight on some day (in the past,  present, or future) then Periodic Notifications will be sent every day at UTC midnight. These MUST begin on the very next midnight, even if PeriodicNotifTime refers to a day in the future. The Unknown Time value defined in [Section 3.2/TR-106a2] indicates that no particular time reference is specified.  That is, the USP Agent MAY locally choose the time reference, and needs only to adhere to the specified PeriodicNotifInterval.   If absolute time is not available to the USP Agent, its Periodic Notification behavior MUST be the same as if the PeriodicNotifTime parameter was set to the Unknown Time value. </description>

  <parameter name="USPNotifRetryMinimumWaitInterval" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="5" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">This parameter is related to the retry mechanism for Notifications.    Configures the first retry wait interval, in seconds, as specified in [Section "Responses to Notifications and Notification Retry"/TR-369]. A value of 5 corresponds to the default behavior. The USP Agent MUST use a random value between USPNotifRetryMinimumWaitInterval and (USPNotifRetryMinimumWaitInterval * USPNotifRetryIntervalMultiplier / 1000) as the first retry wait interval.  Other values in the retry pattern MUST be calculated using this value as a starting point. </description>

  <parameter name="USPNotifRetryIntervalMultiplier" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="2000" minValue="1000" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">This parameter is related to the retry mechanism for Notifications.   Configures the retry interval multiplier as specified in [Section "Responses to Notifications and Notification Retry"/TR-369].This value is expressed in units of 0.001.  Hence the values of the multiplier range between 1.000 and 65.535. A value of 2000 corresponds to the default behavior.The USP Agent MUST use a random value between USPNotifRetryMinimumWaitInterval and (USPNotifRetryMinimumWaitInterval * USPNotifRetryIntervalMultiplier / 1000) as the first retry wait interval.  Other values in the retry pattern MUST be calculated using this value as a  starting point. </description>

  <parameter name="BootParameterNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The number of entries in the BootParameter table. </description>

  <parameter name="MTPNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_Controllers:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The number of entries in the MTP table. </description>




<object name="Device.LocalAgent.Controller.{i}.MTP.{i}." shortObjectName="Dev2LocalagentControllerMtpObject" specSource="TR181" profile="Device2_Controllers:1" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="usp" oid="1357" lockZone="3" />
  <description source="TRx">Each instance of this table represents a MTP used by this Controller. At most one entry in this table can exist with a given value for Alias, or with a given value for Protocol. On creation of a new table entry, the Agent MUST choose an initial value for Alias such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Device2_Controllers:1" requirements="W" supportLevel="ReadWrite" maxLength="64" hideParameterFromAcs="false" uniqueKey="true" bbfProtocol="usp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constaints MUST be enforced: MUST NOT be empty. MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_Controllers:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Enable/Disable this MTP instance. If this MTP instance is to be disabled and currently used for communication with the requesting controller, the agent has to send the request response first, before disabling it. </description>

  <parameter name="Protocol" type="string" specSource="TR181" profile="Device2_Controllers:1" requirements="W" supportLevel="ReadWrite" defaultValue="WebSocket" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="usp" />
    <description source="TRx">The value MUST be a member of the list reported by the Device.LocalAgent.SupportedProtocols parameter. The Message Transport Protocol (MTP) to be used for communications by a USP Endpoint. </description>




<object name="Device.LocalAgent.Controller.{i}.MTP.{i}.CoAP." shortObjectName="Dev2LocalagentControllerMtpCoapObject" specSource="TR181" profile="Device2_CoAPController:1" requirements="P" supportLevel="NotSupported" hideObjectFromAcs="false" bbfProtocol="usp" oid="1358" lockZone="3" />
  <description source="TRx">If the USP Endpoint uses the CoAP Message Transport Protocol (MTP), then this object contains CoAP specific configuration parameters. </description>

  <parameter name="Host" type="string" specSource="TR181" profile="Device2_CoAPController:1" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The hostname or IP Address of the Controller's CoAP server. </description>

  <parameter name="Port" type="unsignedInt" specSource="TR181" profile="Device2_CoAPController:1" requirements="W" supportLevel="ReadWrite" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The port number used by the Controller's CoAP Server to receive USP messages. </description>

  <parameter name="Path" type="string" specSource="TR181" profile="Device2_CoAPController:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The path that is used by the Controller's CoAP Server in order to receive USP messages. </description>

  <parameter name="EnableEncryption" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">When true, encryption is used as specified in [Section "MTP Message Encryption"/TR-369]. </description>




<object name="Device.LocalAgent.Controller.{i}.MTP.{i}.STOMP." shortObjectName="Dev2LocalagentControllerMtpStompObject" specSource="TR181" profile="Device2_STOMPController:1" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="usp" oid="1359" lockZone="3" />
  <description source="TRx">If the USP Endpoint uses the STOMP Message Transport Protocol (MTP), then this object contains STOMP Client specific configuration parameters related to how this Controller communicates with the STOMP Server. </description>

  <parameter name="Reference" type="string" specSource="TR181" profile="Device2_STOMPController:1" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The value MUST be the Path Name of a row in the STOMP.Connection table. If the referenced object is deleted, the parameter value MUST be set to an empty string. A reference to the STOMP Connection used by this Controller when communicating via the STOMP MTP. </description>

  <parameter name="Destination" type="string" specSource="TR181" profile="Device2_STOMPController:1" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The STOMP destination where the Controller will be listening to incoming USP messages. </description>




<object name="Device.LocalAgent.Controller.{i}.MTP.{i}.WebSocket." shortObjectName="Dev2LocalagentControllerMtpWebsocketObject" specSource="TR181" profile="Device2_WebSocketController:1" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="usp" oid="1360" lockZone="3" />
  <description source="TRx">If the USP Endpoint uses the WebSocket Message Transport Protocol (MTP) as a WebSocket client, then this object contains WebSocket specific configuration parameters. </description>

  <parameter name="Host" type="string" specSource="TR181" profile="Device2_WebSocketController:1" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The hostname or IP Address of the Controller's WebSocket server. </description>

  <parameter name="Port" type="unsignedInt" specSource="TR181" profile="Device2_WebSocketController:1" requirements="W" supportLevel="ReadWrite" defaultValue="5683" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The port number used by the Controller's WebSocket server to receive USP messages. </description>

  <parameter name="Path" type="string" specSource="TR181" profile="Device2_WebSocketController:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The path that is used by the Controller's WebSocket server in order to receive USP messages. </description>

  <parameter name="EnableEncryption" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">When true, encryption MUST be used for this MTP instance. </description>

  <parameter name="KeepAliveInterval" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" minValue="1" maxValue="4294967295" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The duration in seconds between when WebSocket ping control frames are transmitted by the Agent to the WebSocket server for the USP Controller. </description>

  <parameter name="CurrentRetryCount" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The current retry count of the session. When zero (0), the session is not in a retry state. </description>

  <parameter name="SessionRetryMinimumWaitInterval" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="5" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Configures the first retry wait interval, in seconds, as specified in [Section "WebSocket Session Retry"/TR-369]. The USP Agent MUST use a random value between SessionRetryMinimumWaitInterval and (SessionRetryMinimumWaitInterval * SessionRetryIntervalMultiplier / 1000) as the first retry wait interval. Other values in the retry pattern MUST be calculated using this value as a starting point. </description>

  <parameter name="SessionRetryIntervalMultiplier" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="2000" minValue="1000" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Configures the retry interval multiplier as specified in [Section "WebSocket Session Retry"/TR-369]. This value is expressed in units of 0.001. Hence the values of the multiplier range between 1.000 and 65.535. The USP Agent MUST use a random value between SessionRetryMinimumWaitInterval and (SessionRetryMinimumWaitInterval * SessionRetryIntervalMultiplier / 1000) as the first retry wait interval. Other values in the retry pattern MUST be calculated using this value as a starting point. </description>




<object name="Device.LocalAgent.Controller.{i}.MTP.{i}.MQTT." shortObjectName="Dev2LocalagentControllerMtpMqttObject" specSource="TR181" profile="Device2_MQTTController:1" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="usp" oid="1361" lockZone="3" />
  <description source="TRx">If the USP Endpoint uses the MQTT Message Transport Protocol (MTP), then this object contains MQTT Client specific configuration parameters related to how this Controller communicates with the MQTT broker. </description>

  <parameter name="Reference" type="string" specSource="TR181" profile="Device2_MQTTController:1" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The value MUST be the Path Name of a row in the MQTT.Client table. A reference to the MQTT Client used by this Controller when communicating via the MQTT MTP. </description>

  <parameter name="Topic" type="string" specSource="TR181" profile="Device2_MQTTController:1" requirements="W" supportLevel="ReadWrite" maxLength="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The topic name the USP Controller has subscribed to, to be used for Notify messages send by the USP Agent. </description>

  <parameter name="PublishRetainResponse" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">If set to true the Agent MUST set the RETAIN flag in MQTT PUBLISH messages carrying a USP Response Message to 1, unless the MQTT server sent Retain Available = 0 (MQTT 5.0) in its CONNACK (in which case, the Agent MUST set the RETAIN flag to 0). </description>

  <parameter name="PublishRetainNotify" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">If set to true the Agent MUST set the RETAIN flag in MQTT PUBLISH messages carrying a USP Notify Message to 1, unless the MQTT server sent Retain Available = 0 (MQTT 5.0) in its CONNACK (in which case, the Agent MUST set the RETAIN flag to 0). </description>




<object name="Device.LocalAgent.Controller.{i}.TransferCompletePolicy." shortObjectName="Dev2LocalagentControllerTransfercompletepolicyObject" specSource="TR181" profile="Unspecified" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="usp" oid="1362" lockZone="3" />
  <description source="TRx">The policy defined in this object determines the conditions under which the USP Agent notifies a USP Controller, that has an appropriate Subscription, of the completion of file transfers. </description>

  <parameter name="ResultTypeFilter" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" validValuesArray="uspTransferResultValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Indicates the transfer results that MUST be included when the USP Agent notifies a USP Controller of file transfers. Transfer results omitted from this list MUST NOT be included when the USP Agent notifies a USP Controller. Enumeration of: Success (The autonomous file transfer completed successfully; i.e., the TransferComplete! event's TransferComplete!.FaultCode was zero), or Failure (The autonomous file transfer did not complete successfully; i.e., the TransferComplete! event's TransferComplete!.FaultCode was non-zero), or Both (Success and Failure)  </description>




<object name="Device.LocalAgent.Controller.{i}.BootParameter.{i}." shortObjectName="Dev2LocalagentControllerBootparameterObject" specSource="TR181" profile="Unspecified" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="usp" oid="1363" lockZone="3" />
  <description source="TRx">This table provides the Controller with the ability to dictate the Parameters that are delivered via Boot! events. Any Parameter (identified by ParameterName) contained in this table MUST be included within the param_map element of the Boot! event. At most one entry in this table can exist with a given value for ParameterName, or with a given value for Alias. On creation of a new table entry, the Agent MUST choose an initial value for Alias such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-bootparam" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="usp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constaints MUST be enforced: MUST NOT be empty. MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_Reboot:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Enables or disables this BootParameter. </description>

  <parameter name="ParameterName" type="string" specSource="TR181" profile="Device2_Reboot:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="usp" />
    <description source="TRx">A pattern that describes the Parameter(s) to be included in the param_map element of a Boot! event. Specifically, patterns with wildcards (an "*" character) in place of Instance Identifiers are allowed. If the pattern does not match any existing Parameters at the time that the Agent is creating the Boot! event, then this BootParameter instance is not included in the param_map of the Boot! event. </description>




<object name="Device.LocalAgent.Controller.{i}.E2ESession." shortObjectName="Dev2LocalagentControllerE2esessionObject" specSource="TR181" profile="Unspecified" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="usp" oid="1364" lockZone="3" />
  <description source="TRx">The E2ESession object represents the End to End (E2E) Session Context functionality for this Controller.{i} object instance. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Enable/Disable this E2ESession instance. When true, Session Context is used when exchanging USP Records with the remote endpoint represented by this Controller.{i} object instance. When false, Session Context is not used when exchanging USP Records with the remote endpoint represented by this Controller.{i} object instance. This parameter was DEPRECATED in 2.15 because it is replaced by SessionMode.</description>

  <parameter name="SessionMode" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="Forbid" validValuesArray="uspE2ESessionModeValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The desired usage mode of an End-to-End Session Context with this particular Controller. Enumeration of: Require (A Session Context MUST be used and no USP Messages are allowed to be exchanged prior to establishment. Setting the parameter to Require MUST result in the establishment of a Session Context), Allow (A Session Context MAY be used but is not required. When setting the parameter to Allow, the Agent MUST NOT initiate Session Context but MUST perpetuate any existing Session Context or Controller-initiated Session Context), Forbid (A Session Context MUST NOT be used. Setting the parameter to Forbid MUST result in the immediate termination of any established Session Context) </description>

  <parameter name="Status" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" validValuesArray="uspE2ESessionStatusValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The current status of the Session Context. Enumeration of: Up, Negotiating (A new Session Context is being negotiated (i.e., a USP Record with sequence_id of 1 and session_id not previously used with this remote endpoint was sent and response has not yet been received), OPTIONAL), Down </description>

  <parameter name="SessionExpiration" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="0" minValue="0" maxValue="4294967295" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The duration in seconds in which the current Session Context will expire since the last session-related activity (e.g., Message sent or received, Session Context start or restart). A value of 0 means session expiration is disabled. </description>

  <parameter name="SessionRetryMinimumWaitInterval" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="5" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Configures the first retry wait interval, in seconds, as specified in [Section "Failure Handling in the Session Context"/TR-369]. A value of 5 corresponds to the default behavior that is described in [TR-369]. The USP Agent MUST use a random value between SessionRetryMinimumWaitInterval and (SessionRetryMinimumWaitInterval * SessionRetryIntervalMultiplier / 1000) as the first retry wait interval. Other values in the retry pattern MUST be calculated using this value as a starting point. </description>

  <parameter name="SessionRetryIntervalMultiplier" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="2000" minValue="1000" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Configures the retry interval multiplier as specified in [Section "Failure Handling in the Session Context"/TR-369]. This value is expressed in units of 0.001. Hence the values of the multiplier range between 1.000 and 65.535. A value of 2000 corresponds to the default behavior that is described in [TR-369]. The USP Agent MUST use a random value between SessionRetryMinimumWaitInterval and (SessionRetryMinimumWaitInterval * SessionRetryIntervalMultiplier / 1000) as the first retry wait interval. Other values in the retry pattern MUST be calculated using this value as a starting point. </description>

  <parameter name="CurrentRetryCount" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The current retry count of the Session Context. When zero (0), the Session Context is not in a retry state. </description>

  <parameter name="SegmentedPayloadChunkSize" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="0" minValue="0" maxValue="0" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The maximum size, in bytes, of the Record (payload(s) and headers) that can be transmitted to the remote endpoint. The smallest size, which can be configured is 512 bytes. A value of 0 means that the segmentation function is effectively disabled. </description>

  <parameter name="MaxRetransmitTries" type="int" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="0" minValue="-1" maxValue="10" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The maximum times that a USP Endpoint attempts to retransmit the requested USP Record to the remote endpoint. If the maximum tries is met for any requested USP Record, the USP Endpoint will restart the E2E Session. A value of -1 means that the USP Endpoint will always attempt to retransmit the requested USP Record. A value of 0 means that the USP Endpoint will not attempt to retransmit the requested USP Record and will restart the E2E Session. </description>

  <parameter name="PayloadSecurity" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="TLS" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The security mechanism to use when exchanging the payload of the Record with the remote endpoint. </description>




<object name="Device.LocalAgent.Subscription.{i}." shortObjectName="Dev2LocalagentSubscriptionObject" specSource="TR181" profile="Device2_Subscriptions:1" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="usp" oid="1365" lockZone="3" />
  <description source="TRx">A Subscription dictates how a USP Agent issues USP Notification Messages to a USP Controller. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Device2_Subscriptions:1" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-subscription" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="usp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_Subscriptions:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Enables/disables this Subscription. A disabled entry MUST NOT be processed by the USP Agent. </description>

  <parameter name="Recipient" type="string" specSource="TR181" profile="Device2_Subscriptions:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="true" bbfProtocol="usp" />
    <description source="TRx">The value MUST be the Path Name of the Controller instance that will receive the Notification associated with this Subscription. If the referenced object is deleted, this instance MUST also be deleted (so the parameter value will never be an empty string). The value of this parameter is automatically populated by the USP Agent upon Subscription creation using the reference to the USP Controller that created the instance. </description>

  <parameter name="ID" type="string" specSource="TR181" profile="Device2_Subscriptions:1" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-subid" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="usp" />
    <description source="TRx">Unique identifier of the Subscription itself, which is specific to the USP Controller that creates the instance of the Subscription. This value is also populated in the subscription_id element of every Notification message sent from a USP Agent to a USP Controller. </description>

  <parameter name="CreationDate" type="dateTime" specSource="TR181" profile="Device2_Subscriptions:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The date and time when this instance of Subscription was created. This is internally used by the TimeToLive parameter to determine the expiration of this Subscription instance. The value of this parameter is automatically populated by the USP Agent upon Subscription creation. </description>

  <parameter name="NotifType" type="string" specSource="TR181" profile="Device2_Subscriptions:1" requirements="W" supportLevel="ReadWrite" validValuesArray="uspNotifyTypeValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Type of Notification message that will be sent to the USP Controller specified by Recipient when this Subscription is triggered. Enumeration of: ValueChange, ObjectCreation, ObjectDeletion, OperationComplete, or Event. </description>

  <parameter name="ReferenceList" type="string" specSource="TR181" profile="Device2_Subscriptions:1" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Comma-separated list of strings (maximum item length 256). Each entry in the list is a Path Name, Search Path, Command reference, or Event reference that determines the element(s) of the data model that the Subscription is applicable to. Different values of the NotifType parameter will cause the Subscription to interact with ReferenceList differently. For example, an instance of Subscription with ValueChange will utilize the value of this parameter differently than an instance with Event. Once the value of the ReferenceList is written, the value cannot be changed as the Subscription instance is considered to be immutable. If the value of a non-empty ReferenceList parameter needs to change, the Subscription instance MUST be deleted and a new Subscription instance created.The following bullet points describe what is allowed as a value of ReferenceList based on the different values of the NotifType parameter: ValueChange: may be either a Path Name or Search Path; if an Object Path (one type of Path Name) then it is treated like a filter match such that all supported parameters in all objects below this point will be relevant for the subscription. - ObjectCreation: may be either a Path Name or Search Path as long as it only refers to a Multi-Instance Object; only the referenced Multi-Instance Objects will be relevant for the subscription. - ObjectDeletion: may be either a Path Name or Search Path as long as it only refers to instances of a Multi-Instance Object; only the referenced instances (wildcard references all instances over time) of the Multi-Instance Objects will be relevant for the subscription. = OperationComplete: may be either a Path Name, Search Path, or Command reference; if an Object Path (one type of Path Name) then it is treated like a filter match such that all supported data model commands in all objects below this point will be relevant for the subscription. - Event: may be either a Path Name, Search Path, or Event reference; if an Object Path (one type of Path Name) then it is treated like a filter match such that all supported Events in all objects below this point will be relevant for the subscription. </description>

  <parameter name="Persistent" type="boolean" specSource="TR181" profile="Device2_Subscriptions:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Determines whether or not this Subscription remains after the USP Agent is restarted (either via a reset of the software or reboot of the underlying device). If true, this Subscription stays in existence until either a Delete message removes it or the TimeToLive parameter expires. If false, this Subscription is automatically removed by the USP Agent whenever it is restarted. </description>

  <parameter name="TimeToLive" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="0" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Specifies the duration of time (in seconds) that this Subscription remains in existence. After TimeToLive has expired, this Subscription instance is automatically removed by the USP Agent. If the value of TimeToLive is 0, then this parameter is ignored and this Subscription stays in existence until either a Delete message removes it or the Persistent parameter determines that it needs to be removed. If the value of TimeToLive is greater than 0, then this parameter determines the length of time (from Subscription creation) until it will be automatically removed by the USP Agent (unless the Persistent parameter is false and the USP Agent is restarted, in which case it will be removed before the TimeToLive expiration). NOTE: This paramater does not count down as time moves forward; it will always read back with the same value that it was last set to. If the USP Agent is incapable of maintaining absolute time then TimeToLive will automatically expire if the USP Agent is restarted (either via a reset of the software or reboot of the underlying device) before TimeToLive expiration. </description>

  <parameter name="NotifRetry" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Specifies whether or not the USP Agent attempts to re-deliver the Notification in the event that it could not be delivered to the USP Controller. When NotifRetry is true, the USP Agent MUST retry the delivery of the Notification. This implies that the Notification MUST be generated with the "send_resp" flag set to true such that the USP Agent knows when the Notification has been successfully delivered. The retry attempt(s) are performed using the retry algorithm defined in [Section "Responses to Notifications and Notification Retry"/TR-369]. When NotifRetry is false, the USP Agent MUST NOT retry the delivery of the Notification, and SHOULD generate the notification with "send_resp" flag set to false. </description>

  <parameter name="NotifExpiration" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="0" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Specifies the duration of time (in seconds) that the Notification associated with this Subscription will continue to be retried. After NotifExpiration has expired, if the Notification has still not been successfully delivered then the USP Agent MUST stop attempting to re-deliver the Notification. If NotifRetry is set to false then this parameter is ignored. If NotifRetry is set to true and the value of NotifExpiration is 0, then the USP Agent will attempt to re-deliver the Notification until it has been successfully delivered or until the USP Agent is restarted (either via a reset of the software or reboot of the underlying device). If NotifRetry is set to true and the value of NotifExpiration is greater than 0, then the USP Agent will attempt to re-deliver the Notification until either it has been successfully delivered, until the length of time (from the time tha the Notification was initially attempted to be delivered) specified in this parameter expires, or until the USP Agent is restarted (either via a reset of the software or reboot of the underlying device). NOTE: This paramater does not count down as time moves forward; it will always read back with the same value that it was last set to. </description>




<object name="Device.LocalAgent.Request.{i}." shortObjectName="Dev2LocalagentRequestObject" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="MultipleInstances" hideObjectFromAcs="false" bbfProtocol="usp" oid="1366" lockZone="3" />
  <description source="TRx">Request instances are created using USP Operate messages. Only Operate messages with async=true will create a Request instance in the data model. When the command of the Operate completes, then this Request instance is removed from this table. At most one entry in this table can exist with all the same values for Originator, Command and CommandKey, or with a given value for Alias. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="64" hideParameterFromAcs="false" uniqueKey="true" bbfProtocol="usp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned. </description>

  <parameter name="Originator" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="usp" />
    <description source="TRx">The USP Endpoint Identifier that originated the command. </description>

  <parameter name="Command" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="usp" />
    <description source="TRx">The command to be executed. This parameter is a Path Name that addresses a Command in an Object or Object Instance. The command is a result of the evaluation of the command argument of an Operate message. </description>

  <parameter name="CommandKey" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="usp" />
    <description source="TRx">The 'command_key' from the USP 'Operate' message. </description>

  <parameter name="Status" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" validValuesArray="uspRequestStatusValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The operational status of the request to execute the command. Enumeration of: Requested (The command has been requested but is currently not executing), Active (The command is currently executing), Canceling (The command has been requested to be canceled), Canceled (The command has successfully been canceled), Success (The command has successfully been completed its execution), or Error (The command has unsuccessfully completed its execution or has unsuccessfully been canceled). </description>




<object name="Device.LocalAgent.Request.{i}.X_BROADCOM_COM_InputArgs.{i}." shortObjectName="Dev2LocalagentRequestArgsObject" specSource="Broadcom" profile="Unspecified" supportLevel="MultipleInstances" hideObjectFromAcs="true" bbfProtocol="usp" oid="1367" lockZone="3" />
  <description source="BROADCOM">This object saves the input arguments of the request in the case when this request needs to be restarted.  The argument is stored in Name/Value pair(s).</description>

  <parameter name="Name" type="string" specSource="Broadcom" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="true" uniqueKey="false" bbfProtocol="usp" />
    <description source="BROADCOM">The name of the input argument.</description>

  <parameter name="Value" type="string" specSource="Broadcom" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="true" uniqueKey="false" bbfProtocol="usp" />
    <description source="BROADCOM">The value of the input argument.</description>




<object name="Device.LocalAgent.Certificate.{i}." shortObjectName="Dev2LocalagentCertificateObject" specSource="TR181" profile="Unspecified" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="usp" oid="1368" lockZone="3" />
  <description source="TRx">Each instance of this table represents information related to a X.509 certificate (see [RFC5280]) of a Controller or Certificate Authority. Instances are referenced from LocalAgent.Controller.{i}.Credential and LocalAgent.ControllerTrust.Credential.{i}.Credential. At most one entry in this table can exist with the same values for SerialNumber and Issuer, or with a given value for Alias. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="64" hideParameterFromAcs="false" uniqueKey="true" bbfProtocol="usp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Enable/Disable this Certificate instance. </description>

  <parameter name="SerialNumber" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" maxLength="64" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="usp" />
    <description source="TRx">The Serial Number field in an X.509 certificate, see [RFC5280]. </description>

  <parameter name="Issuer" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" maxLength="256" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="usp" />
    <description source="TRx">The Issuer field in an X.509 certificate, see [RFC5280], i.e. the Distinguished Name (DN) of the entity who has signed the certificate. </description>

  <parameter name="X_BROADCOM_COM_AltName" type="string" specSource="Broadcom" profile="Unspecified" requirements="R" supportLevel="ReadOnly" maxLength="256" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The subjectaltName with a type uniformResourceIdentifier field in an X.509 certificate, see [RFC5280]. Its value should be matched with endpoint ID of controller that certificate authorizes. Controller uses it to look for its inherited role. </description>




<object name="Device.LocalAgent.ControllerTrust." shortObjectName="Dev2LocalagentControllertrustObject" specSource="TR181" profile="Device2_ControllerTrust:1" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="usp" oid="1369" lockZone="3" />
  <description source="TRx">This object contains information that an Agent applies when establishing a trust relationship with a Controller. </description>

  <parameter name="UntrustedRole" type="string" specSource="TR181" profile="Device2_ControllerTrust:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Each list item MUST be the Path Name of a row in the Role table. If the referenced object is deleted, the corresponding item MUST be removed from the list. Comma-separated list (up to 1 items) of strings, each entry is a Role that is associated with Controllers whose identity cannot be authenticated. The value of the UntrustedRole parameter is appended to the LocalAgent.Controller.{i}.AssignedRole parameter. In some instances, this policy is set by the Agent and cannot be modified by Controllers. If the Agent does not allow modification of this parameter, the Agent MUST respond with an error to the request to set this parameter. </description>

  <parameter name="BannedRole" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The value MUST be the Path Name of a row in the Role table. If the referenced object is deleted, the parameter value MUST be set to an empty string. The Role that is associated with Controllers indicate banned access. When assigned to a Controller or associated with an entry in the Credential table, this MUST be the only value of the BannedRole parameter of the LocalAgent.Controller.{i}.AssignedRole parameter. The Agent SHOULD refuse to accept USP messages from, or send USP messages to, any Controller that has this Role. </description>

  <parameter name="TOFUAllowed" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">When true, Agent has active policy that allows for self-signed certificates and certificates from unknown Certificate Authorities (CAs) to be trusted on first use (TOFU). </description>

  <parameter name="TOFUInactivityTimer" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Inactivity timer in seconds. This timer is started when trust on first use (TOFU) policy is used to accept a Controller certificate. If no USP Message is received before this timer elapses, the Agent MUST tear down the MTP connection and underlying (D)TLS session. A value of 0 means that the TOFU inactivity timer is effectively disabled. </description>

  <parameter name="RoleNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The number of entries in the Role table. </description>

  <parameter name="CredentialNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The number of entries in the Credential table. </description>

  <parameter name="ChallengeNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_Challenge:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The number of entries in the Challenge table. </description>




<object name="Device.LocalAgent.ControllerTrust.Role.{i}." shortObjectName="Dev2LocalagentControllertrustRoleObject" specSource="TR181" profile="Device2_ControllerTrust:1" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="usp" oid="1370" lockZone="3" />
  <description source="TRx">Each instance of this table represents a Role that can be assigned to or inherited by a Controller via the Controller Trust mechanism. The Role contains a set of permissions that determine how the Controller can interact with the data model. If multiple permission entries associated with this table contain a Target that evaluates to the same instantiated Object/Parameter for multiple Roles, then the permissions to be used are a union of the identified permissions. At most one entry in this table can exist with a given value for Alias, or with a given value for Name. On creation of a new table entry, the Agent MUST choose initial values for Alias and Name such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Device2_ControllerTrust:1" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-role" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="usp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_ControllerTrust:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Enable/Disable this Role instance. </description>

  <parameter name="Name" type="string" specSource="TR181" profile="Device2_ControllerTrust:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="usp" />
    <description source="TRx">The Role assigned to this Role instance. </description>

  <parameter name="PermissionNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_ControllerTrust:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The number of entries in the Permission table. </description>




<object name="Device.LocalAgent.ControllerTrust.Role.{i}.Permission.{i}." shortObjectName="Dev2LocalagentControllertrustRolePermissionObject" specSource="TR181" profile="Device2_ControllerTrust:1" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="usp" oid="1371" lockZone="3" />
  <description source="TRx">Each instance of this table represents the permissions that are extended to a set of Targets for a specified Role. If there are multiple entries in this table for a specific Role where the Targets overlap, the permissions for the entry with the highest value takes priority over all others. At most one entry in this table can exist with a given value for Alias, or with a given value for Order. On creation of a new table entry, the Agent MUST choose an initial value for Alias such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Device2_ControllerTrust:1" requirements="W" supportLevel="ReadWrite" maxLength="64" hideParameterFromAcs="false" uniqueKey="true" bbfProtocol="usp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_ControllerTrust:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Enable/Disable this Permission instance. </description>

  <parameter name="Order" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="0" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="usp" />
    <description source="TRx">The order (relative priority) to use when determining the permissions for overlapping Targets that are contained within the same Role. The larger value of this parameter takes priority over a permission with a smaller value (i.e., 0 has the lowest priority). </description>

  <parameter name="Targets" type="string" specSource="TR181" profile="Device2_ControllerTrust:1" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Comma-separated list of strings, each entry is a target to which the value of the permissions parameters are assigned. When an entry is a value of a Partial Path, the permissions are associated to that Object and any child Object/Parameter. When the value of an entry is an Object instance then the permissions are associated to all Parameters of the Object instance. When an entry is a value of a Search Path as defined in [TR-369] that resolves to zero or more Parameter Paths, then all Parameter Paths that result from the evaluation of the Search Path are subject to the permissions assigned by this Permission instance. </description>

  <parameter name="Param" type="string" specSource="TR181" profile="Device2_ControllerTrust:1" requirements="W" supportLevel="ReadWrite" defaultValue="----" maxLength="4" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The permissions of a Role for the specified Targets. A string of 4 characters where each character represents a permission ("r" for Read, "w" for Write, "x" for Execute", and "n" for Notify). The string is always in the same order (rwxn) and the lack of a permission is signified by a "-" character (e.g., r–n). The following describes the meaning of the permissions for Parameter type of Targets: Read: Grants the capability to read the value of the Parameter via Get and read the meta-information of the Parameter via GetSupportedDM. - Write: Grants the capability to update the value of the Parameter via Add or Set. - Execute: Grants no capabilities; Parameters can not be executed. - Notify: Grants the capability to use this Parameter in the ReferenceList of a ValueChange Subscription. </description>

  <parameter name="Obj" type="string" specSource="TR181" profile="Device2_ControllerTrust:1" requirements="W" supportLevel="ReadWrite" defaultValue="----" maxLength="4" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The permissions of a Role for the specified Targets. A string of 4 characters where each character represents a permission ("r" for Read, "w" for Write, "x" for Execute", and "n" for Notify). The string is always in the same order (rwxn) and the lack of a permission is signified by a "-" character (e.g., r–n). The following describes the meaning of the permissions for Parameter type of Targets: Read: Grants the capability to read the value of the Parameter via Get and read the meta-information of the Parameter via GetSupportedDM. - Write: Grants the capability to update the value of the Parameter via Add or Set. - Execute: Grants no capabilities; Parameters can not be executed. - Notify: Grants the capability to use this Parameter in the ReferenceList of a ValueChange Subscription. </description>

  <parameter name="InstantiatedObj" type="string" specSource="TR181" profile="Device2_ControllerTrust:1" requirements="W" supportLevel="ReadWrite" defaultValue="----" maxLength="4" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The permissions of a Role for the specified Targets. A string of 4 characters where each character represents a permission ("r" for Read, "w" for Write, "x" for Execute", and "n" for Notify). The string is always in the same order (rwxn) and the lack of a permission is signified by a "-" character (e.g., r–n). The following describes the meaning of the permissions for Parameter type of Targets: Read: Grants the capability to read the value of the Parameter via Get and read the meta-information of the Parameter via GetSupportedDM. - Write: Grants the capability to update the value of the Parameter via Add or Set. - Execute: Grants no capabilities; Parameters can not be executed. - Notify: Grants the capability to use this Parameter in the ReferenceList of a ValueChange Subscription. </description>

  <parameter name="CommandEvent" type="string" specSource="TR181" profile="Device2_ControllerTrust:1" requirements="W" supportLevel="ReadWrite" defaultValue="----" maxLength="4" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The permissions of a Role for the specified Targets. A string of 4 characters where each character represents a permission ("r" for Read, "w" for Write, "x" for Execute", and "n" for Notify). The string is always in the same order (rwxn) and the lack of a permission is signified by a "-" character (e.g., r–n). The following describes the meaning of the permissions for Parameter type of Targets: Read: Grants the capability to read the value of the Parameter via Get and read the meta-information of the Parameter via GetSupportedDM. - Write: Grants the capability to update the value of the Parameter via Add or Set. - Execute: Grants no capabilities; Parameters can not be executed. - Notify: Grants the capability to use this Parameter in the ReferenceList of a ValueChange Subscription. </description>




<object name="Device.LocalAgent.ControllerTrust.Credential.{i}." shortObjectName="Dev2LocalagentControllertrustCredentialObject" specSource="TR181" profile="Unspecified" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="usp" oid="1372" lockZone="3" />
  <description source="TRx">Each instance of this table represents a trusted credential. The credential can be that of a certificate authority (CA) for a Controller whose EndpointID is unknown. When a credential is supplied to the Agent by a Controller during authentication, the credentials in this table are used to determine if any of the supplied certificates (including those in the chain of trust) are considered "trusted". If the Controller authenticated via an entry in this table is not previously known to the Agent, the associated Role entry is automatically applied to the Controller. At most one entry in this table can exist with a given value for Alias, or with a given value for Credential. On creation of a new table entry, the Agent MUST choose initial values for Alias and Credential such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="64" hideParameterFromAcs="false" uniqueKey="true" bbfProtocol="usp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Enable/Disable this Credential instance. </description>

  <parameter name="Role" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Each list item MUST be the Path Name of a row in the Role table. If the referenced object is deleted, the corresponding item MUST be removed from the list. Comma-separated list of strings, the (set of) Role(s) applied to a Controller authenticated through this Credential instance. The roles are added to the Controller's current list of Roles by replacing the value of the LocalAgent.Controller.{i}.InheritedRole parameter. If the Controller is already known to the Agent, with an associated Role, this parameter has no impact. </description>

  <parameter name="Credential" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="usp" />
    <description source="TRx">The value MUST be the Path Name of a row in the Certificate table. If the referenced object is deleted, the parameter value MUST be set to an empty string. A reference to the Certificate.{i} instance for use in the authentication of certificates provided by a Controller and authorization of Controllers, and for authentication of certificates used for MTP encryption. </description>

  <parameter name="AllowedUses" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" validValuesArray="uspCredentialAllowedUseValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Identifies what usages the Certificate Authority (CA) authenticated by the associated credential is trusted to authorize. Enumeration of: MTP-only (The CA can only authorize MTP (domain) connectivity, and cannot authenticate Controllers), MTP-and-USP (The CA can authorize MTP (domain) connectivity and authenticate Controllers), or MTP-and-broker (The CA can authorize MTP (domain) connectivity and the presenter of this certificate is trusted to have authenticated the identity of Endpoints whose Records it transmits such that the from_id can be trusted without additional authentication. See ["Authentication and Authorization"/TR-369] for additional description of the Trusted Broker function)  </description>




<object name="Device.LocalAgent.ControllerTrust.Challenge.{i}." shortObjectName="Dev2LocalagentControllertrustChallengeObject" specSource="TR181" profile="Device2_Challenge:1" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="usp" oid="1373" lockZone="3" />
  <description source="TRx">Each instance of this table represents information that is used to challenge a Controller in order to assign a Role to the Controller or to determine the authenticity of a Certificate. The Controller requests a type of challenge from an Agent using the RequestChallenge command. The Agent returns the value of the Instruction for that type of challenge to the Controller which the Controller then provides a third-party. The third-party responds to the Instruction which the Controller then sends to the Agent using the ChallengeResponse command. The Agent verifies the response to the Challenges and executes an implementation specific Agent logic in order to establish trust with the Controller. This could include (but is not limited to): 1. Assignment of roles to the Controller is done by appending the non-duplicate roles of the Role parameter to the value of the LocalAgent.Controller.{i}.AssignedRole parameter. 2. Use the Controller's certificate to which the challenge response was received in order to authenticate the identity of the Controller. At most one entry in this table can exist with a given value for Alias. On creation of a new table entry, the Agent MUST choose an initial value for Alias such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Device2_Challenge:1" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-challenge" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="usp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned.</description>

  <parameter name="Description" type="string" specSource="TR181" profile="Device2_Challenge:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The description of this Challenge instance. </description>

  <parameter name="Role" type="string" specSource="TR181" profile="Device2_Challenge:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Each list item MUST be the Path Name of a row in the Role table. If the referenced object is deleted, the corresponding item MUST be removed from the list. Comma-separated list of strings, the (set of) role(s) appended (non-duplicate values only) to the value of the LocalAgent.Controller.{i}.AssignedRole parameter. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">Enable/Disable this Challenge instance. </description>

  <parameter name="Type" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="Passphrase" validValuesArray="uspChallengeTypeValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The type of challenge that will be verified from the challenge response provided by the third-party through the Controller. Enumeration of: Passphrase (The challenge uses a passphrase the third-party is expected to match). </description>

  <parameter name="Value" type="base64" specSource="TR181" profile="Device2_Challenge:1" requirements="W" supportLevel="ReadWrite" isTr69Password="true" hideParameterFromAcs="false" isConfigPassword="true" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The value of the challenge that is specific to the type of challenge. When read, this parameter returns an empty string, regardless of the actual value. </description>

  <parameter name="ValueType" type="string" specSource="TR181" profile="Device2_Challenge:1" requirements="W" supportLevel="ReadWrite" validValuesArray="uspChallengeValueTypeValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The media type with a format as defined by [RFC6838] of the content of the Value parameter. Enumeration of: text/plain, or image/jpeg. </description>

  <parameter name="Instruction" type="base64" specSource="TR181" profile="Device2_Challenge:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The instruction that is provided to the external party by the Controller requesting the challenge. </description>

  <parameter name="InstructionType" type="string" specSource="TR181" profile="Device2_Challenge:1" requirements="W" supportLevel="ReadWrite" validValuesArray="uspChallengeInstructionTypeValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The media type with a format as defined by [RFC6838] of the content of the Instruction parameter. Enumeration of: text/plain, image/jpeg, or text/html. </description>

  <parameter name="Retries" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The number of times a challenge is retried before the challenge procedure is terminated. </description>

  <parameter name="LockoutPeriod" type="int" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="30" minValue="0" maxValue="2147483647" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="usp" />
    <description source="TRx">The time, in seconds that a Controller that has failed the challenge is locked out (based on the value of the Retries parameter) prior to being provided the challenge again. A value of zero means that a LockoutPeriod doesn't apply and the challenge can be provided indefinitely. </description>




<object name="Device.BulkData." shortObjectName="Dev2BulkDataObject" specSource="TR181" profile="Device2_BulkDataColl:1" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="common" oid="1760" lockZone="3" />
  <description source="TRx">This object provides bulk data collection capabilities and global collection settings that affect the entire device. Bulk Data utilizes various solutions (e.g., IPDR, HTTP) to collect data from devices and transfer the data to a collection server. The IPDR solution is based on a service specification described in {{bibref|TR-232}}. The HTTP solution is based on transfer mechanisms described in {{template|BULK-DATA-HTTP-REF}}. {{template|BULK-DATA-OPT-SOLNS}} The Bulk Data Collection Profiles are measured over a reporting interval (which can be aligned with absolute time) and are made available to the collection server. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_BulkDataColl:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Enables or disables all collection profiles. If {{false}}, bulk data will not be collected or reported. </description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_BulkDataColl:1" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status3eValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Indicates the status of the Bulk Data Collection mechanism. </description>

  <parameter name="MinReportingInterval" type="unsignedInt" specSource="TR181" profile="Device2_BulkDataColl:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Minimum reporting interval in seconds that the CPE is capable of supporting. A value of 0 indicates no minimum reporting interval. </description>

  <parameter name="Protocols" type="string" specSource="TR181" profile="Device2_BulkDataColl:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Comma-separated list of strings.  Represents the IPDR Protocols that this device is capable of supporting. Enumeration of: Streaming File HTTP USPEventNotif</description>

  <parameter name="EncodingTypes" type="string" specSource="TR181" profile="Device2_BulkDataColl:1" requirements="R" supportLevel="ReadOnly" defaultValue="JSON" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Comma-separated list of strings. Represents the IPDR Encoding Types that this device is capable of supporting. Enumeration of: XML XDR CSV JSON</description>

  <parameter name="ParameterWildCardSupported" type="boolean" specSource="TR181" profile="Device2_BulkDataReports:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">When true, the Device supports the use of wildcards to determine the parameters that are reported using a Profile.</description>

  <parameter name="MaxNumberOfProfiles" type="int" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" minValue="-1" maxValue="2147483647" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The maximum number of profiles that can exist at any given time.  Specifically, the maximum number of {{object|Profile.{i}.}} instances that the Controller can create. If the value of this parameter is -1, then it means that the CPE doesn't have a limit to the number of profiles that can exist. </description>

  <parameter name="MaxNumberOfParameterReferences" type="int" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" minValue="-1" maxValue="2147483647" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The maximum number of parameters that can be referenced via the bulk data collection mechanism. Specifically, the maximum number of parameters that can be referenced via {{param|Profile.{i}.Parameter.{i}.Reference}} across all Profile and Parameter instances (including the expansion of partial paths within the Reference parameter). If the value of this parameter is -1, then it means that the CPE doesn't have a limit to the number of parameter that can be referenced via the bulk data collection mechanism. </description>

  <parameter name="ProfileNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_BulkDataColl:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The number of entries in the Profile table.</description>




<object name="Device.BulkData.Profile.{i}." shortObjectName="Dev2BulkDataProfileObject" specSource="TR181" profile="Device2_BulkDataColl:1" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="common" oid="1761" lockZone="3" />
  <description source="TRx">A set of Bulk Data Collection profiles. Each profile represents a bulk data report, including its own timing configuration, communications configuration, and set of parameters. This allows the Controller to configure multiple reports to be generated at different times for different sets of data. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_BulkDataColl:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Enables or disables this specific bulk data profile. If {{false}}, this profile will not be collected or reported. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Device2_BulkDataColl:1" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-bulkdata-profile" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="common" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.</description>

  <parameter name="Name" type="string" specSource="TR181" profile="Device2_BulkDataReports:1" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The name of the profile. </description>

  <parameter name="Controller" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">{{reference|the {{object|Device.LocalAgent.Controller.}} instance that created or last updated this {{object}}}} The value of this parameter is automatically populated by the USP Agent upon {{object}} creation using the reference to the USP Controller that created the instance. The value of this parameter is automatically updated by the USP Agent upon {{object}} alteration using the reference to the USP Controller that changed the instance. </description>

  <parameter name="NumberOfRetainedFailedReports" type="int" specSource="TR181" profile="Device2_BulkDataReports:1" requirements="W" supportLevel="ReadWrite" defaultValue="0" minValue="-1" maxValue="2147483647" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The number of failed reports to be retained and transmitted (in addition to the current report) at the end of the current reporting interval. If the value of the {{param|EncodingType}} parameter is modified any outstanding failed reports are deleted. If the CPE cannot retain the number of failed reports from previous reporting intervals while transmitting the report of the current reporting interval, then the oldest failed reports are deleted until the CPE is able to transmit the report from the current reporting interval. A value of 0 indicates that failed reports are not to be retained for transmission in the next reporting interval. A value of -1 indicates that the CPE will retain as many failed reports as possible. </description>

  <parameter name="Protocol" type="string" specSource="TR181" profile="Device2_BulkDataColl:1" requirements="W" supportLevel="ReadWrite" defaultValue="File" validValuesArray="ipdrProtocolValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The Bulk Data Protocol being used for this collection profile. </description>

  <parameter name="EncodingType" type="string" specSource="TR181" profile="Device2_BulkDataColl:1" requirements="W" supportLevel="ReadWrite" defaultValue="JSON" validValuesArray="ipdrEncodingValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The Bulk Data encoding type being used for this collection profile. </description>

  <parameter name="ReportingInterval" type="unsignedInt" specSource="TR181" profile="Device2_BulkDataColl:1" requirements="W" supportLevel="ReadWrite" defaultValue="86400" minValue="1" maxValue="4294967295" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The reporting interval in {{units}}. Each report is generated based on this interval and {{param|TimeReference}}. The CPE MAY reject a request to set {{param}} to less than {{param|#.MinReportingInterval}}. Reporting intervals MUST begin every {{param}} {{units}}. If {{param}} is changed while collection is enabled, the first reporting interval begins immediately. For example, if {{param}} is 86400 (a day) and if {{param|TimeReference}} is set to UTC midnight on some day (in the past, present, or future) then the CPE will generate (and transmit, if the {{param|Protocol}} parameter is set to {{enum|Streaming|#.Protocols}}) its report at midnight every 24 hours. </description>

  <parameter name="TimeReference" type="dateTime" specSource="TR181" profile="Device2_BulkDataColl:1" requirements="W" supportLevel="ReadWrite" defaultValue="0001-01-01T00:00:00Z" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">An absolute time reference in UTC to determine when will be transmitted. Each reporting interval MUST complete at this reference time plus or minus an integer multiple of {{param|ReportingInterval}}, unless unable to due to higher prioritized operations. {{param}} is used only to set the "phase" of the reporting intervals. The actual value of {{param}} can be arbitrarily far into the past or future. If {{param}} is changed while collection of bulk data is enabled, the first reporting interval begins immediately. The Unknown Time value as defined in {{bibref|TR-106}} indicates that no particular time reference is specified. That is, the CPE MAY locally choose the time reference, and is required only to adhere to the specified reporting intervals. If absolute time is not available to the CPE, its reporting interval behavior MUST be the same as if the {{param}} parameter was set to the Unknown Time value. For example, if {{param|ReportingInterval}} is 86400 (a day) and if {{param}} is set to UTC midnight on some day (in the past, present, or future) then the CPE will generate (and transmit, if in a "ITPush" mode) its report at midnight every 24 hours. Note that, if {{param}} is set to a time other than the Unknown Time, the first reporting interval (which has to begin immediately) will almost certainly be shorter than {{param|ReportingInterval}}). This is why {{param}} is defined in terms of when reporting intervals complete rather than start. </description>

  <parameter name="StreamingHost" type="string" specSource="TR181" profile="Device2_BulkDataStreaming:1" requirements="W" supportLevel="NotSupported" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">This is the host name or IP Address of the IPDR Collector to be used by the CPE to stream bulk data records if this collection profile is configured for the IPDR Streaming Protocol {{bibref|IPDR-SP}} (the {{param|Protocol}} parameter has a value of {{enum|Streaming|#.Protocols}}). </description>

  <parameter name="StreamingPort" type="unsignedInt" specSource="TR181" profile="Device2_BulkDataStreaming:1" requirements="W" supportLevel="NotSupported" defaultValue="4737" minValue="0" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">This is the port number of the IPDR Collector to be used by the CPE to stream bulk data records if this collection profile is configured for the IPDR Streaming Protocol {{bibref|IPDR-SP}} (the {{param|Protocol}} parameter has a value of {{enum|Streaming|#.Protocols}}). </description>

  <parameter name="StreamingSessionID" type="unsignedInt" specSource="TR181" profile="Device2_BulkDataStreaming:1" requirements="W" supportLevel="NotSupported" minValue="48" maxValue="90" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">This is the unique identification of an IPDR Session to be used when this collection profile is configured for the IPDR Streaming Protocol {{bibref|IPDR-SP}} (the {{param|Protocol}} parameter has a value of {{enum|Streaming|#.Protocols}}). A Controller MUST NOT configure multiple IPDR Streaming Protocol collection profiles with the same {{param}}. Doing so MUST cause the CPE to fail the SetParameterValues. Within the IPDR Streaming Protocol specification the Session ID has a type of a single 'char', but we are restricting the range even further (ASCII values of '0' - '9' and 'A' - 'Z'. </description>

  <parameter name="FileTransferURL" type="string" specSource="TR181" profile="Device2_BulkDataFileTransfer:1" requirements="W" supportLevel="NotSupported" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">This is the {{datatype}} within the CPE that is used by an IPDR Collector to retrieve the IPDRDocs when this collection profile is configured for the IPDR File Transfer Protocol {{bibref|IPDR-FTP}} (the {{param|Protocol}} parameter has a value of {{enum|File|#.Protocols}}). </description>

  <parameter name="FileTransferUsername" type="string" specSource="TR181" profile="Device2_BulkDataFileTransfer:1" requirements="W" supportLevel="NotSupported" maxLength="64" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Username used for authentication of the {{param|FileTransferURL}}. This is the {{param}} that the IPDR Collector uses to access the CPE when this collection profile is configured for the IPDR File Transfer Protocol {{bibref|IPDR-FTP}} (the {{param|Protocol}} parameter has a value of {{enum|File|#.Protocols}}). </description>

  <parameter name="FileTransferPassword" type="string" specSource="TR181" profile="Device2_BulkDataFileTransfer:1" requirements="W" supportLevel="NotSupported" defaultValue="" maxLength="64" isTr69Password="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Password used for authentication of the {{param|FileTransferURL}}. This is the {{param}} that the IPDR Collector uses to access the CPE when this collection profile is configured for the IPDR File Transfer Protocol {{bibref|IPDR-FTP}} (the {{param|Protocol}} parameter has a value of {{enum|File|#.Protocols}}). </description>

  <parameter name="ControlFileFormat" type="string" specSource="TR181" profile="Device2_BulkDataFileTransfer:1" requirements="W" supportLevel="NotSupported" maxLength="128" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">If this collection profile is configured for the IPDR File Transfer Protocol {{bibref|IPDR-FTP}} (the {{param|Protocol}} parameter has a value of {{enum|File|#.Protocols}}) then the control file names will be of the following format: :&lt;ControlFilePrefix&gt;_&lt;ControlFilePolicy&gt;.&lt;ControlFileSuffix&gt;Where the following rules apply: * ControlFilePrefix MUST NOT contain an underscore '_' or any other character not suitable for a file name.* ControlFilePolicy MUST contain one or more 'N' characters, where the number of 'N' characters denotes the number of digits in the sequence number, including leading zeros as necessary to match the number of 'N' characters.  * ControlFileSuffix is a file extension.For example, BulkData_NNNN.log where &quot;BulkData&quot; would be the prefix, &quot;NNNN&quot; would be the policy, and &quot;log&quot; would be the suffix.  Files adhering to this file format would look like: BulkData_0000.log, BulkData_0001.log, etc. </description>

  <parameter name="ParameterNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_BulkDataColl:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The number of entries in the Parameter table. </description>




<object name="Device.BulkData.Profile.{i}.Parameter.{i}." shortObjectName="Dev2BulkDataProfileParamObject" specSource="TR181" profile="Device2_BulkDataColl:1" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="common" oid="1762" lockZone="3" />
  <description source="TRx">Bulk data parameter table. Each entry in this table represents a parameter (or set of parameters if a partial path is provided) to be collected and reported. </description>

  <parameter name="Name" type="string" specSource="TR181" profile="Device2_BulkDataReports:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="64" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Name of the parameter in the report body. If the value of this parameter is {{empty}}, then the value of the {{param|Reference}} parameter is used as the name. When the value {{param|Reference}} parameter contains wildcards and/or partial parameter names, the rules for determining the value of this parameter are specified in {{template|BULK-DATA-WILD-REF}}. </description>

  <parameter name="Reference" type="string" specSource="TR181" profile="Device2_BulkDataColl:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Represents the parameter(s) that are part of this Bulk Data collection profile. In the case where a partial parameter path is specified all sub-objects and contained parameters will be part of the bulk data collected and reported.  If the path name refers to an object then it MUST end with a '.'. </description>




<object name="Device.BulkData.Profile.{i}.CSVEncoding." shortObjectName="Dev2BulkDataProfileCsvEncodingObject" specSource="TR181" profile="Device2_BulkDataCSVEncoding:1" requirements="PC" supportLevel="NotSupported" hideObjectFromAcs="false" bbfProtocol="common" oid="1763" lockZone="3" />
  <description source="TRx">This object defines the properties to be used when the Profile object's EncodingType parameter value is CSV. </description>

  <parameter name="FieldSeparator" type="string" specSource="TR181" profile="Device2_BulkDataCSVEncoding:1" requirements="W" supportLevel="ReadWrite" defaultValue="," hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Field separator to use when encoding CSV data. </description>

  <parameter name="RowSeparator" type="string" specSource="TR181" profile="Device2_BulkDataCSVEncoding:1" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Row separator to use when encoding CSV data. </description>

  <parameter name="EscapeCharacter" type="string" specSource="TR181" profile="Device2_BulkDataCSVEncoding:1" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Escape character to use when encoding CSV data. </description>

  <parameter name="ReportFormat" type="string" specSource="TR181" profile="Device2_BulkDataCSVEncoding:1" requirements="W" supportLevel="ReadWrite" defaultValue="" validValuesArray="CSVReportFormatValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">This parameter describes the formatting used for reports defined by this profile as described in [Annex A.2.4/TR-369]. &#10;
    Note: This parameter is encoded as a token in the BBF-Report-Format header field and MUST NOT include spaces or other characters excluded from token characters defined in [RFC2616]. Enumeration of: &#10;
       ParameterPerRow (Reports are formatted with each parameter formatted as a row entry) &#10;
       ParameterPerColumn (Reports are formatted with each parameter formatted as a column entry) &#10; </description>

  <parameter name="RowTimestamp" type="string" specSource="TR181" profile="Device2_BulkDataCSVEncoding:1" requirements="W" supportLevel="ReadWrite" defaultValue="Unix-Epoch" validValuesArray="ReportTimestampValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The format of the timestamp to use for data inserted into the row. Enumeration of: &#10;
       Unix-Epoch (Timestamp is inserted using the UNIX epoch time (milliseconds since Jan 1, 1970 UTC) timestamp format. If the CPE is unable to acquire a time, then the time that has elapsed since the last reboot of the device is used) &#10;
       ISO-8601 (Timestamp is inserted using the ISO-8601 timestamp format) &#10;
       None (Timestamp is not inserted in the row) &#10; </description>




<object name="Device.BulkData.Profile.{i}.JSONEncoding." shortObjectName="Dev2BulkDataProfileJsonEncodingObject" specSource="TR181" profile="Device2_BulkDataJSONEncoding:1" requirements="PC" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="common" oid="1764" lockZone="3" />
  <description source="TRx">This object defines the properties to be used when the {{object|##.Profile}} object's {{param|#.EncodingType}} parameter value is {{enum|JSON|##.EncodingTypes}}. </description>

  <parameter name="ReportFormat" type="string" specSource="TR181" profile="Device2_BulkDataJSONEncoding:1" requirements="W" supportLevel="ReadWrite" defaultValue="NameValuePair" validValuesArray="ReportFormatValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">This parameter describes the formatting used for the report as described in {{template|BULK-DATA-JSON-REF}}. Note: This parameter is encoded as a token in the BBF-Report-Format header field and MUST NOT include spaces or other characters excluded from token characters defined in {{bibref|RFC2616}}. </description>

  <parameter name="ReportTimestamp" type="string" specSource="TR181" profile="Device2_BulkDataJSONEncoding:1" requirements="W" supportLevel="ReadWrite" defaultValue="Unix-Epoch" validValuesArray="ReportTimestampValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The format of timestamp to use for the JSON Object named "CollectionTime" as described in {{template|BULK-DATA-JSON-REF}}. </description>




<object name="Device.BulkData.Profile.{i}.HTTP." shortObjectName="Dev2BulkDataProfileHttpObject" specSource="TR181" profile="Device2_BulkDataHTTP:1" requirements="PC" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="common" oid="1765" lockZone="3" />
  <description source="TRx">This object defines the properties to be used when transporting bulk data using the HTTP/HTTPS protocol. This object is used when the {{param|#.Protocol}} parameter has a value of {{enum|HTTP|##.Protocols}}. For authentication purposes the CPE MUST support HTTP Basic and Digest Access Authentication as defined in {{bibref|RFC2616}}. </description>

  <parameter name="URL" type="string" specSource="TR181" profile="Device2_BulkDataHTTP:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="1024" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The URL for the collection server to receive the Bulk Data transmitted by the CPE. </description>

  <parameter name="Username" type="string" specSource="TR181" profile="Device2_BulkDataHTTP:1" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Username used to authenticate the CPE when making a connection to the collection server. </description>

  <parameter name="Password" type="string" specSource="TR181" profile="Device2_BulkDataHTTP:1" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Password used to authenticate the CPE when making a connection to the collection server. </description>

  <parameter name="CompressionsSupported" type="string" specSource="TR181" profile="Device2_BulkDataHTTP:1" requirements="W" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Comma-separated list of strings. Indicates the HTTP Compression mechanism(s) supported by this CPE for the purposes of transferring bulk data. </description>

  <parameter name="Compression" type="string" specSource="TR181" profile="Device2_BulkDataHTTP:1" requirements="W" supportLevel="ReadWrite" defaultValue="None" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The value of this parameter represents the HTTP Compression mechanism to be used by the CPE when transferring data to the collection server. </description>

  <parameter name="MethodsSupported" type="string" specSource="TR181" profile="Device2_BulkDataHTTP:1" requirements="W" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Comma-separated list of strings. Indicates the HTTP method(s) supported by this CPE for the purposes of transferring bulk data. </description>

  <parameter name="Method" type="string" specSource="TR181" profile="Device2_BulkDataHTTP:1" requirements="W" supportLevel="ReadWrite" defaultValue="POST" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The value of this parameter represents the HTTP method to be used by the CPE when transferring data to the collection server. </description>

  <parameter name="UseDateHeader" type="boolean" specSource="TR181" profile="Device2_BulkDataHTTP:1" requirements="W" supportLevel="ReadWrite" defaultValue="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">When {{true}}, the CPE encodes the HTTP Date Header {{bibref|RFC2616|Section 14.18}} in the HTTP client request. </description>

  <parameter name="RetryEnable" type="boolean" specSource="TR181" profile="Device2_BulkDataHTTP:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">When {{true}}, the CPE retries unsuccessful attempts to transfer data. </description>

  <parameter name="RetryMinimumWaitInterval" type="unsignedInt" specSource="TR181" profile="Device2_BulkDataHTTP:1" requirements="W" supportLevel="ReadWrite" defaultValue="5" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Configures the data transfer retry wait interval, in seconds, as specified in {{template|BULK-DATA-HTTP-RETRY-REF}}. The device MUST use a random value between {{param}} and ({{param}} * {{param|RetryIntervalMultiplier}} / 1000) as the first retry wait interval. Other values in the retry pattern MUST be calculated using this value as a starting point. </description>

  <parameter name="RetryIntervalMultiplier" type="unsignedInt" specSource="TR181" profile="Device2_BulkDataHTTP:1" requirements="W" supportLevel="ReadWrite" defaultValue="2000" minValue="1000" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Configures the retry interval multiplier as specified in {{template|BULK-DATA-HTTP-RETRY-REF}}. This value is expressed in units of 0.001. Hence the values of the multiplier range between 1.000 and 65.535. The device MUST use a random value between {{param|RetryMinimumWaitInterval}} and ({{param|RetryMinimumWaitInterval}} * {{param}} / 1000) as the first retry wait interval. Other values in the retry pattern MUST be calculated using this value as a starting point. </description>

  <parameter name="RequestURIParameterNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_BulkDataHTTP:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The number of entries in the RequestURIParameter table.</description>




<object name="Device.BulkData.Profile.{i}.HTTP.RequestURIParameter.{i}." shortObjectName="Dev2BulkDataHttpReqURIParamObject" specSource="TR181" profile="Device2_BulkDataHTTP:1" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="common" oid="1766" lockZone="3" />
  <description source="TRx">This object represents an instance of a parameter to be used in the report header used as part of the HTTP Request-URI transmitted by the CPE to the collection server using the Request-URI in addition to the parameters required by {{template|BULK-DATA-HTTP-QUERY-REF}}. </description>

  <parameter name="Name" type="string" specSource="TR181" profile="Device2_BulkDataHTTP:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="64" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Name of the Request-URI parameter. If Name is an empty string, the name of the Request-URI parameter is the value of Reference. </description>

  <parameter name="Reference" type="string" specSource="TR181" profile="Device2_BulkDataHTTP:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The value MUST be the path name of a parameter to be used as the Request-URI parameter. If the value of this parameter is empty, then this object is not encoded in the report header. </description>




<object name="Device.STOMP." shortObjectName="Dev2StompObject" specSource="TR181" profile="Device2_STOMPConn:1" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="common" oid="1930" lockZone="3" />
  <description source="TRx">The STOMP represents the STOMP capabilities of the device as described in [TR-369]. </description>

  <parameter name="ConnectionNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_STOMPConn:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The number of entries in the Connection table. </description>




<object name="Device.STOMP.Connection.{i}." shortObjectName="Dev2StompConnectionObject" specSource="TR181" profile="Device2_STOMPConn:1" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="common" oid="1931" lockZone="3" />
  <description source="TRx">The Connection represents a STOMP connection between the Agent and a STOMP server. At most one entry in this table can exist with all the same values for Host, Username and VirtualHost, or with a given value for Alias. On creation of a new table entry, the Agent MUST choose initial values for Host, Username and Alias such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Device2_STOMPConn:1" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-stomp" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="common" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_STOMPConn:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Enables or disables this Connection. This parameter is based on ifAdminStatus from [RFC2863]. </description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_STOMPConn:1" requirements="R" supportLevel="ReadOnly" validValuesArray="stompConnectionStatusValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The current operational state of this Connection (see [Section 4.2.2/TR-181i2]). Enumeration of: Enabled, Disabled, Unknown, Connecting, ServerNotPresent, Error_Misconfigured, Error_AuthenticationFailure, or Error (OPTIONAL). When Enable is false then Status SHOULD normally be Disabled or Error if there is a fault condition on the interface). When Enable is changed to true then Status SHOULD change to Enabled if and only if the interface is able to transmit and receive PDUs; it SHOULD change to Unknown if the state of the interface can not be determined for some reason. </description>

  <parameter name="LastChangeDate" type="dateTime" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The date and time at which this Connection entered into its current operational state. </description>

  <parameter name="Host" type="string" specSource="TR181" profile="Device2_STOMPConn:1" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="common" />
    <description source="TRx">The hostname or IP Address of the STOMP Server. </description>

  <parameter name="Port" type="unsignedInt" specSource="TR181" profile="Device2_STOMPConn:1" requirements="W" supportLevel="ReadWrite" defaultValue="61613" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The port number of the STOMP Server. </description>

  <parameter name="Username" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="common" />
    <description source="TRx">The username part of the credentials to be used when authenticating this Connection during connection establishment with the STOMP Server. </description>

  <parameter name="Password" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="256" isTr69Password="true" hideParameterFromAcs="false" isConfigPassword="true" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The password part of the credentials to be used when authenticating this Connection during connection establishment with the STOMP Server. When read, this parameter returns an empty string, regardless of the actual value. </description>

  <parameter name="VirtualHost" type="string" specSource="TR181" profile="Device2_STOMPConn:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="common" />
    <description source="TRx">The Virtual Host to use when establishing the connection. Some STOMP Server implementations utilize virtual hosts to place a context around credentials, permissions, and internal resources. </description>

  <parameter name="EnableHeartbeats" type="boolean" specSource="TR181" profile="Device2_STOMPHeartbeat:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Enable or disable the STOMP Heart-beating mechanism as described in STOMP (for this Connection). When the STOMP Heart-beat mechanism is enabled, OutgoingHeartbeat and IncomingHeartbeat determine how the heart-beat header within the CONNECT frame is formatted. When the STOMP Heart-beat mechanism is disabled, OutgoingHeartbeat and IncomingHeartbeat are ignored and the CONNECT frame MUST NOT contain a heart-beat header element. Any changes to this parameter will not take effect until the next connection. </description>

  <parameter name="OutgoingHeartbeat" type="unsignedInt" specSource="TR181" profile="Device2_STOMPHeartbeat:1" requirements="W" supportLevel="ReadWrite" defaultValue="0" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Represents the Outgoing heart-beat timing of the STOMP Heart-beating mechanism as described in STOMP (for this Connection). The Outgoing heart-beat represents what the sender of the frame can do. A value of 0 means that it cannot send heart-beats. Any changes to this parameter will not take effect until the next connection. </description>

  <parameter name="IncomingHeartbeat" type="unsignedInt" specSource="TR181" profile="Device2_STOMPHeartbeat:1" requirements="W" supportLevel="ReadWrite" defaultValue="0" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Represents the Incoming heart-beat timing of the STOMP Heart-beating mechanism as described in STOMP (for this Connection). The Incoming heart-beat represents what the sender of the frame would like to get. A value of 0 means that it does not want to receive heart-beats. Any changes to this parameter will not take effect until the next connection. </description>

  <parameter name="ServerRetryInitialInterval" type="unsignedInt" specSource="TR181" profile="Device2_STOMPConn:1" requirements="W" supportLevel="ReadWrite" defaultValue="60" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The maximum first reconnection wait interval, in seconds, as specified in [TR-369]. The Device MUST use a random value between 0 and ServerRetryInitialInterval as the first reconnection wait interval. </description>

  <parameter name="ServerRetryIntervalMultiplier" type="unsignedInt" specSource="TR181" profile="Device2_STOMPConn:1" requirements="W" supportLevel="ReadWrite" defaultValue="2000" minValue="1000" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The reconnection interval multiplier as specified in [TR-369]. This value is expressed in units of 0.001. Hence the values of the multiplier range between 1.000 and 65.535. For the nth reconnection wait interval, the Device MUST use a random value, in seconds, between 0 and ServerRetryInitialInterval * (ServerRetryIntervalMultiplier / 1000) ** (n - 1). The server retry mechanism reaches its upper limit at 10 reconnection attempts. Meaning, that if the number of reconnection attempts exceeds 10, then the Device MUST use a random value, in seconds, between 0 and ServerRetryInitialInterval * (ServerRetryIntervalMultiplier / 1000) ** (10 - 1). </description>

  <parameter name="ServerRetryMaxInterval" type="unsignedInt" specSource="TR181" profile="Device2_STOMPConn:1" requirements="W" supportLevel="ReadWrite" defaultValue="30720" minValue="1" maxValue="4294967295" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The maximum reconnection wait interval, in seconds. If the nth reconnection wait interval calculated from ServerRetryInitialInterval and ServerRetryIntervalMultiplier exceeds the value of this parameter, then the Agent MUST use the value of this parameter as the next reconnection wait interval. </description>

  <parameter name="EnableEncryption" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">When true, encryption MUST be used for this STOMP Connection. </description>




<object name="Device.MQTT." shortObjectName="Dev2MqttObject" specSource="TR181" profile="Device2_MQTTClientBase:1" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="common" oid="1935" lockZone="3" />
  <description source="TRx">MQTT Base object describing all MQTT related parameters and objects. </description>

  <parameter name="ClientNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientBase:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The number of entries in the Client table. </description>
    <description source="BROADCOM">REPORT_PROFILE: MQTTClientBase:1, MQTTClientCon:1 </description>

  <parameter name="BrokerNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_MQTTBrokerBase:1" requirements="R" supportLevel="NotSupported" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The number of entries in the Broker table. </description>




<object name="Device.MQTT.Capabilities." shortObjectName="Dev2MqttCapabilitiesObject" specSource="TR181" profile="Device2_MQTTClientBase:1" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="common" oid="1936" lockZone="3" />
  <description source="TRx">Indicates the MQTT capabilities of the device. </description>

  <parameter name="ProtocolVersionsSupported" type="string" specSource="TR181" profile="Device2_MQTTClientBase:1" requirements="R" supportLevel="ReadOnly" defaultValue="3.1,3.1.1,5.0" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Comma-separated list of strings. Indicates the supported protocol versions. Each list item is an enumeration of: 3.1 (Protocol according to [MQTT31]), 3.1.1 (Protocol according to [MQTT31]), or 5.0 (Protocol according to [MQTT50]). </description>
    <description source="BROADCOM">REPORT_PROFILE: MQTTClientBase:1, MQTTClientCon:1 </description>

  <parameter name="TransportProtocolSupported" type="string" specSource="TR181" profile="Device2_MQTTClientCon:1" requirements="R" supportLevel="ReadOnly" defaultValue="TCP/IP,TLS,WebSocket" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Comma-separated list of strings. Indicates the supported transport protocols. Each list item is an enumeration of: TCP/IP, TLS, or WebSocket. </description>

  <parameter name="MaxNumberOfClientSubscriptions" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Indicates the maximum number of subscriptions per MQTT client, which can be stored in the Client.{i}.Subscription table. A value of 0 means no limit. </description>

  <parameter name="MaxNumberOfBrokerBridges" type="unsignedInt" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="R" supportLevel="NotSupported" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Indicates the maximum number of bridges, which can be configured in the Broker.{i}.Bridge table. A value of 0 means no limit. </description>

  <parameter name="MaxNumberOfBrokerBridgeSubscriptions" type="unsignedInt" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="R" supportLevel="NotSupported" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Indicates the maximum number of subscriptions, which can be stored per bridge instance in the Broker.{i}.Bridge.{i}.Subscription table. A value of 0 means no limit. </description>




<object name="Device.MQTT.Client.{i}." shortObjectName="Dev2MqttClientObject" specSource="TR181" profile="Device2_MQTTClientBase:1" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="common" oid="1937" lockZone="3" />
  <description source="TRx">MQTT client table. Contains a list of configured MQTT clients. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-mqtt-client" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="common" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned.</description>

  <parameter name="Name" type="string" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="ReadWrite" maxLength="64" hideParameterFromAcs="false" uniqueKey="true" bbfProtocol="common" />
    <description source="TRx">The textual name of the MQTT client. </description>
    <description source="BROADCOM">REPORT_PROFILE: MQTTClientExtended:1, MQTTClientCon:1 </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_MQTTClientBase:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Allows to enable or disable the MQTT client. If a MQTT client gets enabled then the MQTT client has first to establish a MQTT broker session and then subscribe for all enabled topics in the Subscription. table. If the ProtocolVersion is set to 3.1 or 3.1.1 and CleanSession is set to false a subscription MUST only be sent for topics which haven't been subscribed before (see [Section 3.1.2.4/MQTT31]). If the ProtocolVersion is set to 5.0 and CleanStart is set to false a subscription MUST only be sent for topics which haven't been subscribed before (see [Section 3.1.2.4/MQTT50]). If a connected MQTT client gets disabled (Status is either Connecting or Connected) then the MQTT client has to send a MQTT DISCONNECT packet to disconnect from the MQTT broker ([Section 3.14/MQTT31],[Section 3.14/MQTT31]) or [Section 3.14/MQTT50]), before setting the Status to Disabled. </description>
    <description source="BROADCOM">REPORT_PROFILE: MQTTClientBase:1, MQTTClientCon:1 </description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_MQTTClientBase:1" requirements="R" supportLevel="ReadOnly" validValuesArray="mqttClientStatusValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Indicates the status of this MQTT client. Enumeration of: Disabled, Connecting, Connected, Error_Misconfigured, Error_BrokerUnreachable, or Error (OPTIONAL). The Error_Misconfigured value indicates that a necessary configuration value is undefined or invalid (e.g. The MQTT client can not use the defined port, because it is blocked). The Error_BrokerUnreachable value indicates that the connection to the MQTT broker could not be established. The Error value MAY be used by the CPE to indicate a locally defined error condition. </description>
    <description source="BROADCOM">REPORT_PROFILE: MQTTClientBase:1, MQTTClientCon:1 </description>

  <parameter name="ProtocolVersion" type="string" specSource="TR181" profile="Device2_MQTTClientBase:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The value MUST be a member of the list reported by the Capabilities.ProtocolVersionsSupported parameter. Specifies the MQTT protocol version used in the communication with the MQTT broker. </description>
    <description source="BROADCOM">REPORT_PROFILE: MQTTClientBase:1, MQTTClientCon:1 </description>

  <parameter name="EnableEncryption" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">When true, encryption MUST be used for this MQTT Client Connection. </description>

  <parameter name="BrokerAddress" type="string" specSource="TR181" profile="Device2_MQTTClientBase:1" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Host name or IP address of the MQTT Broker. </description>
    <description source="BROADCOM">REPORT_PROFILE: MQTTClientBase:1, MQTTClientCon:1 </description>

  <parameter name="BrokerPort" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientBase:1" requirements="W" supportLevel="ReadWrite" defaultValue="1883" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Port number of the MQTT broker. </description>
    <description source="BROADCOM">REPORT_PROFILE: MQTTClientBase:1, MQTTClientCon:1 </description>

  <parameter name="TransportProtocol" type="string" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="ReadWrite" defaultValue="TCP/IP" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The value MUST be a member of the list reported by the Capabilities.TransportProtocolSupported parameter. Indicates the transport protocol to be used for the MQTT broker connection. </description>
    <description source="BROADCOM">REPORT_PROFILE: MQTTClientExtended:1, MQTTClientCon:1 </description>

  <parameter name="CleanSession" type="boolean" specSource="TR181" profile="Device2_MQTTClientBase:1" requirements="W" supportLevel="ReadWrite" defaultValue="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The value of the MQTT clean session flag in the MQTT CONNECT packet (see [Section 3.1/MQTT31] and [Section 3.1.2.4/MQTT31]). If this flag is set to true (default), the MQTT broker will delete all subscription information after a Disconnect. A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If the change needs to be applied immediately, the command ForceReconnect() has to be executed. This parameter only applies if ProtocolVersion is set to 3.1 or 3.1.1. </description>
    <description source="BROADCOM">REPORT_PROFILE: MQTTClientBase:1, MQTTClientCon:1 </description>

  <parameter name="CleanStart" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The value of the MQTT Clean Start flag in the MQTT CONNECT packet (see [Section 3.1.2.4/MQTT50]. If this flag is set to true (default), the MQTT broker will delete all subscription information after a Disconnect. A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If the change needs to be applied immediately, the command ForceReconnect() has to be executed.. This parameter only applies if ProtocolVersion is set to 5.0. </description>

  <parameter name="WillEnable" type="boolean" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="NotSupported" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Enables or disables the will handling (see [Section 3.1/MQTT31], [Section 3.1.2.5/MQTT31]) or [Section 3.1.2.5/MQTT50]). If the connection gets enabled and this parameter is set to true and either the parameter WillTopic or WillValue are an empty string, the CPE MUST set the Status to Error_Misconfigured. A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If the change needs to be applied immediately, the command ForceReconnect() has to be executed. </description>

  <parameter name="WillQoS" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="NotSupported" minValue="0" maxValue="2" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The MQTT QoS level assigned with the will message (see [Section 3.1/MQTT31], [Section 3.1.2.6/MQTT31]) or [Section 3.1.2.6/MQTT50]). This parameter is only used if WillEnable is set to true. A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If will handling is enabled (Parameter WillEnable is set to true) and the change needs to be applied immediately, the command ForceReconnect() has to be executed. </description>

  <parameter name="WillRetain" type="boolean" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="NotSupported" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Indicate to the MQTT broker to retain the Will over a Disconnect (see [Section 3.1/MQTT31], [Section 3.1.2.7/MQTT31]) or [Section 3.1.2.7/MQTT50]). This parameter is only used if WillEnable is set to true. A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If will handling is enabled (Parameter WillEnable is set to true) and the change needs to be applied immediately, the command ForceReconnect() has to be executed. </description>

  <parameter name="KeepAliveTime" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientBase:1" requirements="W" supportLevel="ReadWrite" defaultValue="60" minValue="0" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Keep Alive Time in seconds defines the maximum wait time after which a packet has to be sent to the MQTT broker (see [Section 3.1/MQTT31], [Section 3.1.2.10/MQTT31]) or [Section 3.1.2.10/MQTT50]). If no regular packet can be sent a MQTT PINGREQ packet is sent. A value of zero (0) means no keep alive packets are sent and the MQTT client is not disconnected by the server. A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If the change needs to be applied immediately, the command ForceReconnect() has to be executed. </description>
    <description source="BROADCOM">REPORT_PROFILE: MQTTClientBase:1, MQTTClientCon:1 </description>

  <parameter name="SessionExpiryInterval" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="NotSupported" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Session expiry interval in seconds defines the wait time before a session expires after the connection has been closed by the MQTT client [Section 3.1.2.11.2/MQTT50]). This parameter only applies if ProtocolVersion is set to 5.0. </description>

  <parameter name="ReceiveMaximum" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="NotSupported" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The MQTT client uses this value to limit the number of QoS 1 and QoS 2 publications that it is willing to process concurrently (see [Section 3.1.2.11.3/MQTT50]). A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If the change needs to be applied immediately, the command ForceReconnect() has to be executed. This parameter only applies if ProtocolVersion is set to 5.0. </description>

  <parameter name="MaximumPacketSize" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="NotSupported" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The maximum packet size in byte the MQTT client can and will accept from the MQTT broker. A value of 0 means no limit. If the value is set to another value, the MQTT client will inform the broker in the next CONNECT packet [Section 3.1.2.11.4/MQTT50]). A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If the change needs to be applied immediately, the command ForceReconnect() has to be executed. This parameter only applies if ProtocolVersion is set to 5.0. </description>

  <parameter name="TopicAliasMaximum" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="NotSupported" minValue="0" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">This value indicates the highest value that the MQTT client will accept as a Topic Alias sent by the Server (see [Section 3.1.2.11.5/MQTT50]). The MQTT client uses this value to limit the number of Topic Aliases that it is willing to hold on this connection. A value of 0 indicates that Topic Alias is not supported. A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If the change needs to be applied immediately, the command ForceReconnect() has to be executed. This parameter only applies if ProtocolVersion is set to 5.0. </description>

  <parameter name="RequestResponseInfo" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The MQTT client uses this value in a MQTT CONNECT packet to request the Server to return Response Information in the MQTT CONNACK (see [Section 3.1.2.11.6/MQTT50]). A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If the change needs to be applied immediately, the command ForceReconnect() has to be executed. This parameter only applies if ProtocolVersion is set to 5.0. </description>

  <parameter name="RequestProblemInfo" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">This value indicates whether the Reason String or User Properties are sent in the case of failures.(see [Section 3.1.2.11.7/MQTT50]). A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If the change needs to be applied immediately, the command ForceReconnect() has to be executed. This parameter only applies if ProtocolVersion is set to 5.0. </description>

  <parameter name="AuthenticationMethod" type="string" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="NotSupported" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">This value defines the extended authentication method to be used (see [Section 3.1.2.11.9/MQTT50]). If the parameter is empty, no extended authentication is performed. A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If the change needs to be applied immediately, the command ForceReconnect() has to be executed. This parameter only applies if ProtocolVersion is set to 5.0. </description>

  <parameter name="ClientID" type="string" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="ReadWrite" maxLength="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The MQTT client identifier used in the MQTT CONNECT packet (see [Section 3.1/MQTT31], [Section 3.1.3.1/MQTT31]) or [Section 3.1.3.1/MQTT50]). If ProtocolVersion is set to 3.1 or 3.1.1, this parameter MUST NOT be an empty string. If ProtocolVersion is set to 5.0, an empty string is allowed. A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If the change needs to be applied immediately, the command ForceReconnect() has to be executed. </description>
    <description source="BROADCOM">REPORT_PROFILE: MQTTClientExtended:1, MQTTClientCon:1 </description>

  <parameter name="WillDelayInterval" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="NotSupported" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The delay in seconds after the session is disconnected, before sending the Will message [Section 3.1.3.2.2/MQTT50]). A value of 0 indicates that there is no delay. A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If will handling is enabled (Parameter WillEnable is set to true) and the change needs to be applied immediately, the command ForceReconnect() has to be executed. This parameter only applies if ProtocolVersion is set to 5.0. </description>

  <parameter name="WillMessageExpiryInterval" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="NotSupported" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The lifetime in seconds of a Will Message (see [Section 3.1.3.2.4/MQTT50]). A value of 0 indicates that no message expiry interval value is specified for in the will message properties of a CONNECT packet. This parameter only applies if ProtocolVersion is set to 5.0. </description>

  <parameter name="WillContentType" type="string" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="NotSupported" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Describes the type of the WillValue [Section 3.1.3.2.5/MQTT50]). A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If will handling is enabled (Parameter WillEnable is set to true) and the change needs to be applied immediately, the command ForceReconnect() has to be executed. This parameter only applies if ProtocolVersion is set to 5.0. </description>

  <parameter name="WillResponseTopic" type="string" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="NotSupported" maxLength="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Topic Name for a will response message. The presence of a Response Topic identifies the Will Message as a Request [Section 3.1.3.2.6/MQTT50]). If the WillResponseTopic is an empty string the will response topic will not be sent in a MQTT CONNECT packet. A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If will handling is enabled (Parameter WillEnable is set to true) and the change needs to be applied immediately, the command ForceReconnect() has to be executed. This parameter only applies if ProtocolVersion is set to 5.0. </description>

  <parameter name="WillTopic" type="string" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="NotSupported" maxLength="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The Topic sent in the Will Message (see [Section 3.1/MQTT31], [Section 3.1.3.3/MQTT31]) or [Section 3.1.3.3/MQTT50]). This parameter is only used if WillEnable is set to true. A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If will handling is enabled (Parameter WillEnable is set to true) and the change needs to be applied immediately, the command ForceReconnect() has to be executed. </description>

  <parameter name="WillValue" type="string" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="NotSupported" maxLength="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The value sent in the Will Message (see [Section 3.1/MQTT31], [Section 3.1.2.5/MQTT31]) or [Section 3.1.3.4/MQTT50]). This parameter is only used if WillEnable is set to true. A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If will handling is enabled (Parameter WillEnable is set to true) and the change needs to be applied immediately, the command ForceReconnect() has to be executed. </description>

  <parameter name="Username" type="string" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="common" />
    <description source="TRx">Username used to authenticate the MQTT client when making a connection to the MQTT broker. The value is sent in the MQTT CONNECT packet (see [Section 3.1/MQTT31], [Section 3.1.3.4/MQTT31] or [Section 3.1.3.5/MQTT50]). For MQTT 3.1 [Section 3.1/MQTT31] recommends that the user name has 12 characters or fewer, but this is not required. If this parameter is an empty string no authentication parameters are sent in the MQTT CONNECT packet. </description>
    <description source="BROADCOM">REPORT_PROFILE: MQTTClientExtended:1, MQTTClientCon:1 </description>

  <parameter name="Password" type="string" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="ReadWrite" maxLength="256" isTr69Password="true" hideParameterFromAcs="false" isConfigPassword="true" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Password used to authenticate the MQTT client when making a connection to the MQTT broker. The value is sent in the MQTT CONNECT packet (see [Section 3.1/MQTT31], [Section 3.1.3.5/MQTT31] or [Section 3.1.3.6/MQTT50]). This password is only sent in the MQTT CONNECT packet if Username is not an empty string. When read, this parameter returns an empty string, regardless of the actual value. </description>
    <description source="BROADCOM">REPORT_PROFILE: MQTTClientExtended:1, MQTTClientCon:1 </description>

  <parameter name="PublishMessageExpiryInterval" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="NotSupported" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The lifetime in seconds of a PUBLISH Message (see [Section 3.3.2.3.3/MQTT50]). A value of 0 indicates that no message expiry interval value is included in the PUBLISH packet. This parameter only applies if ProtocolVersion is set to 5.0. </description>

  <parameter name="MessageRetryTime" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="ReadWrite" defaultValue="5" minValue="1" maxValue="4294967295" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Message retry time in seconds defines the wait time before a MQTT message that expects a response (QoS value of message is > 0, or PUBLISH, PUBREL, SUBSCRIBE, UNSUBSCRIBE message) is resent, because the response is not received (see [Section 4.2/MQTT31]). This parameter only applies if ProtocolVersion is set to 3.1. </description>
    <description source="BROADCOM">REPORT_PROFILE: MQTTClientExtended:1, MQTTClientCon:1 </description>

  <parameter name="ConnectRetryTime" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="W" supportLevel="ReadWrite" defaultValue="30" minValue="1" maxValue="4294967295" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Connect retry time in seconds defines the wait time before a failed MQTT broker connection is retried. A failure can either be on the connection level (the TCP/IP or TLS can not be established) or on the Protocol level, the MQTT client does not receive a MQTT CONNACK packet on a MQTT CONNECT packet sent. If the parameter ConnectRetryIntervalMultiplier is defined, the MQTT client MUST use a random value between ConnectRetryTime*(ConnectRetryIntervalMultiplier/1000)^(n-1) and ConnectRetryTime*(ConnectRetryIntervalMultiplier/1000)^n for the connect retry time, with n equals the current retry number. The max number of n is 10, starting with the 11th retry always the value n = 10 is used. If the parameters ConnectRetryIntervalMultiplier and ConnectRetryMaxInterval are defined, the MQTT client MUST use the value of ConnectRetryMaxInterval if the calculated random value exceeds the value of ConnectRetryMaxInterval. </description>
    <description source="BROADCOM">REPORT_PROFILE: MQTTClientExtended:1, MQTTClientCon:1 </description>

  <parameter name="ConnectRetryIntervalMultiplier" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientCon:1" requirements="W" supportLevel="ReadWrite" defaultValue="2000" minValue="1000" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Configures the retry interval multiplier. This value is expressed in units of 0.001. Hence the values of the multiplier range between 1.000 and 65.535. </description>

  <parameter name="ConnectRetryMaxInterval" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientCon:1" requirements="W" supportLevel="ReadWrite" defaultValue="30720" minValue="1" maxValue="4294967295" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The maximum reconnection wait interval, in seconds. </description>

  <parameter name="ResponseInformation" type="string" specSource="TR181" profile="Device2_MQTTClientCon:1" requirements="R" supportLevel="ReadOnly" maxLength="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The value of the CONNACK Response Information property supplied by a MQTT 5.0 server. This value is used by a MQTT 5.0 client as the basis for the PUBLISH Response Topic property for all PUBLISH packets that expect a response. If the value of ResponseInformation is not a subset (wildcarded or precise match) of any of the Subscription.{i}.Topic values the MQTT client MUST subscribe to this Topic. </description>

  <parameter name="SubscriptionNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientSubscribe:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The number of entries in the Subscription table. </description>

  <parameter name="UserPropertyNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientUserProperty:1" requirements="R" supportLevel="NotSupported" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The number of entries in the UserProperty table. </description>




<object name="Device.MQTT.Client.{i}.Subscription.{i}." shortObjectName="Dev2MqttClientSubscriptionObject" specSource="TR181" profile="Device2_MQTTClientSubscribe:1" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="common" oid="1938" lockZone="3" />
  <description source="TRx">List of MQTT subscriptions handled by the MQTT client. The MQTT client MUST subscribe with the MQTT broker for all subscription instances, whose parameter Enable is set to true, when it establishes a new connection to the MQTT broker. Disabled subscription instances with Enable set to false will be ignored during connection establishment. At most one entry in this table can exist with a given value for Alias, or with a given value for Topic. On creation of a new table entry, the Agent MUST choose initial values for Alias and Topic such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="64" hideParameterFromAcs="false" uniqueKey="true" bbfProtocol="common" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_MQTTClientSubscribe:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">When a MQTT client connects to a MQTT server, it MUST send a SUBSCRIBE message including all instances with Enable set to true. If the MQTT client is already connected with the MQTT server (Status is Connected), a MQTT SUBSCRIBE or UNSUBSCRIBE message MUST be sent directly when Enable is changed to true or false, respectively. The actual status of the subscription is indicated with Status. </description>

  <parameter name="Status" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" validValuesArray="mqttClientSubscriptionStatusValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Indicates the status of this subscription. Enumeration of: Unsubscribed, Subscribed, Subscribing (OPTIONAL), Unsubscribing (OPTIONAL), or Error. The Subscribed value indicates that the topic was successfully subscribed with the MQTT broker, the MQTT client received the SUBACK message for this topic from the server. The Subscribing value MAY be used by the CPE to indicate that the a SUBSCRIBE message for this topic was sent, and the CPE is waiting for a SUBACK message. The Unsubscribed value indicates that the topic is not registered with the MQTT broker. The Unsubscribing value MAY be used by the CPE to indicate that the an UNSUBSCRIBE message for this topic was sent, and the CPE is waiting for an UNSUBACK message. If the Enable is set to false the status MUST be either Unsubscribed or if the unsubscription failed Error. </description>

  <parameter name="Topic" type="string" specSource="TR181" profile="Device2_MQTTClientSubscribe:1" requirements="W" supportLevel="ReadWrite" maxLength="65535" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="common" />
    <description source="TRx">Name of the subscribed topic. Topic names may contain wildcards according to the rules specified in [Section Appendix A/MQTT31], [Section 4.7/MQTT31] or [Section 4.7/MQTT50]. </description>

  <parameter name="QoS" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientSubscribe:1" requirements="W" supportLevel="ReadWrite" minValue="0" maxValue="2" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The MQTT QoS level assigned with the subscription (see [Section 4.1/MQTT31], [Section 4.3/MQTT31]) or [Section 4.3/MQTT50]. </description>




<object name="Device.MQTT.Client.{i}.UserProperty.{i}." shortObjectName="Dev2MqttClientUserPropertyObject" specSource="TR181" profile="Device2_MQTTClientUserProperty:1" requirements="PC" supportLevel="NotSupported" hideObjectFromAcs="false" bbfProtocol="common" oid="1939" lockZone="3" />
  <description source="TRx">List of user properties used by the MQTT client. This table only applies if ProtocolVersion is set to 5.0. At most one entry in this table can exist with a given value for Alias, or with a given value for Name. On creation of a new table entry, the Agent MUST choose initial values for Alias and Name such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-mqtt-client-userproperty" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="common" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_MQTTClientUserProperty:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Setting Enable to true means the user property is used in the indicated control packet(s). The user property will be applied to all control packets of the same control packet type (e.g PUBLISH). </description>

  <parameter name="Name" type="string" specSource="TR181" profile="Device2_MQTTClientUserProperty:1" requirements="W" supportLevel="ReadWrite" maxLength="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Name of the user property. </description>

  <parameter name="Value" type="string" specSource="TR181" profile="Device2_MQTTClientUserProperty:1" requirements="W" supportLevel="ReadWrite" maxLength="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Value of the user property. </description>

  <parameter name="PacketType" type="string" specSource="TR181" profile="Device2_MQTTClientUserProperty:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Comma-separated list of strings. Each entry defines the control packet type(s) in which the user property is included. Each list item is an enumeration of: AUTH (User property will be added in the AUTH control packet (see [Section 3.15.2.2.5/MQTT50])), CONNECT (User property will be added in the CONNECT packet (see [Section 3.1.3.2.8/MQTT50])), DISCONNECT (User property will be added in the DISCONNECT packet (see [Section 3.14.2.2.4/MQTT50])), PUBLISH (User property will be added in the PUBLISH packet (see [Section 3.3.2.3.7/MQTT50])), PUBACK (User property will be added in the PUBACK packet (see [Section 3.4.2.2.3/MQTT50])), PUBREC (User property will be added in the PUBREC packet (see [Section 3.5.2.2.3/MQTT50])), PUBREL (User property will be added in the PUBREL packet (see [Section 3.6.2.2.3/MQTT50])), PUBCOMP (User property will be added in the PUBCOMP packet (see [Section 3.7.2.2.3/MQTT50])), SUBSCRIBE (User property will be added in the SUBSCRIBE packet (see [Section 3.8.2.1.3/MQTT50])), UNSUBSCRIBE (User property will be added in the UNSUBSCRIBE packet (see [Section 3.10.2.1.2/MQTT50])), or WILL (User property will be added in the WILL properties (see [Section 3.1.3.2/MQTT50])). </description>




<object name="Device.MQTT.Client.{i}.Stats." shortObjectName="Dev2MqttClientStatsObject" specSource="TR181" profile="Device2_MQTTClientBase:1" requirements="P" supportLevel="NotSupported" hideObjectFromAcs="false" bbfProtocol="common" oid="1940" lockZone="3" />
  <description source="TRx">Contains the MQTT client statistics and usage information. The CPE MUST reset the Stats parameters after the MQTT client gets (re-)enabled or if the MQTT client connects with a new MQTT broker (e.g. BrokerAddress has changed). The CPE MAY retain the values across a reboot if it reconnects with the same MQTT broker. </description>

  <parameter name="BrokerConnectionEstablished" type="dateTime" specSource="TR181" profile="Device2_MQTTClientBase:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Time when the MQTT broker connection was established. </description>

  <parameter name="LastPublishMessageSent" type="dateTime" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Time when the last publish message was sent to the MQTT broker. </description>

  <parameter name="LastPublishMessageReceived" type="dateTime" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Time when the last publish message was received from the MQTT broker. </description>

  <parameter name="PublishSent" type="unsignedLong" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Number of publish messages sent to the MQTT broker. </description>

  <parameter name="PublishReceived" type="unsignedLong" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Number of publish messages received from to the MQTT broker. </description>

  <parameter name="SubscribeSent" type="unsignedLong" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Number of subscribe messages sent to the MQTT broker. </description>

  <parameter name="UnSubscribeSent" type="unsignedLong" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Number of unsubscribe messages sent to the MQTT broker. </description>

  <parameter name="MQTTMessagesSent" type="unsignedLong" specSource="TR181" profile="Device2_MQTTClientBase:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Total number of MQTT messages sent to the MQTT broker. </description>

  <parameter name="MQTTMessagesReceived" type="unsignedLong" specSource="TR181" profile="Device2_MQTTClientBase:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Total number of MQTT messages received from the MQTT broker. </description>

  <parameter name="ConnectionErrors" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientBase:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Number of connection errors. </description>

  <parameter name="PublishErrors" type="unsignedInt" specSource="TR181" profile="Device2_MQTTClientExtended:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Number of errors which prevented sending publish messages. </description>




<object name="Device.MQTT.Broker.{i}." shortObjectName="Dev2MqttBrokerObject" specSource="TR181" profile="Device2_MQTTBrokerBase:1" requirements="PC" supportLevel="NotSupported" hideObjectFromAcs="false" bbfProtocol="common" oid="1941" lockZone="3" />
  <description source="TRx">MQTT broker table. Contains a list of configured MQTT brokers. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-mqtt-broker" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="common" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned.</description>

  <parameter name="Name" type="string" specSource="TR181" profile="Device2_MQTTBrokerBase:1" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-mqtt-broker-name" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="common" />
    <description source="TRx">The textual name of the MQTT broker. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_MQTTBrokerBase:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Allows to enable or disable the MQTT broker. </description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_MQTTBrokerBase:1" requirements="R" supportLevel="ReadOnly" validValuesArray="mqttBrokerStatusValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Indicates the status of the MQTT broker. Enumeration of: Disabled, Enabled, Error_Misconfigured, or Error (OPTIONAL). The "Error_Misconfigured" value indicates that a necessary configuration value is undefined or invalid. The "Error" value MAY be used by the CPE to indicate a locally defined error condition. </description>

  <parameter name="Port" type="unsignedInt" specSource="TR181" profile="Device2_MQTTBrokerBase:1" requirements="W" supportLevel="ReadWrite" defaultValue="1883" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Port used by the MQTT Broker. </description>

  <parameter name="Interface" type="string" specSource="TR181" profile="Device2_MQTTBrokerBase:1" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The value MUST be the Path Name of a row in the IP.Interface table. If the referenced object is deleted, the parameter value MUST be set to an empty string. If an empty string is specified, the CPE MUST bind the MQTT broker to all available interfaces. </description>

  <parameter name="Username" type="string" specSource="TR181" profile="Device2_MQTTBrokerExtended:1" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">User name used to authenticate the MQTT clients, which connect to the MQTT broker. If this parameter is an empty string no authentication is used. </description>

  <parameter name="Password" type="string" specSource="TR181" profile="Device2_MQTTBrokerExtended:1" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Password used to authenticate the MQTT clients, which connect to the MQTT broker. This password is only used if Username is not an empty string. When read, this parameter returns an empty string, regardless of the actual value. </description>

  <parameter name="BridgeNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The number of entries in the Bridge table. </description>




<object name="Device.MQTT.Broker.{i}.Bridge.{i}." shortObjectName="Dev2MqttBrokerBridgeObject" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="PC" supportLevel="NotSupported" hideObjectFromAcs="false" bbfProtocol="common" oid="1942" lockZone="3" />
  <description source="TRx">Configures MQTT bridges, which are used to communicate with other MQTT brokers. At most one entry in this table can exist with a given value for Alias, or with a given value for Name. On creation of a new table entry, the Agent MUST choose initial values for Alias and Name such that the new entry does not conflict with any existing entries. The non-functional key parameters Alias and Name are immutable and therefore MUST NOT change once they've been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-mqtt-broker-bridge" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="common" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned.</description>

  <parameter name="Name" type="string" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-mqtt-broker-bridge-name" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="common" />
    <description source="TRx">The textual name of the MQTT bridge used for identification. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Allows to enable or disable the MQTT Bridge. </description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="R" supportLevel="ReadOnly" validValuesArray="mqttBridgeStatusValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Indicates the status of this MQTT Bridge. Enumeration of: Disabled, Connecting, Connected, Error_Misconfigured, Error_BrokerUnreachable, or Error (OPTIONAL). The Disabled value indicates that the MQTT bridge is not in service; parameter Enable is set to false. The Connecting value indicates that the MQTT bridge is currently established. The Connected value indicates that the MQTT bridge is currently active. The Error_Misconfigured value indicates that a necessary configuration value is undefined or invalid (e.g. No active Server entry, the MQTT broker can not use the defined bridge port, because it is blocked) The Error_BrokerUnreachable value indicates that the MQTT bridge connection to the remote MQTT broker could not be established. The Error value MAY be used to indicate a locally defined error condition. </description>

  <parameter name="ProtocolVersion" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The value MUST be a member of the list reported by the Capabilities.ProtocolVersionsSupported parameter. Specifies the MQTT protocol version used in the MQTT bridge connection. </description>

  <parameter name="TransportProtocol" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="TCP/IP" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The value MUST be a member of the list reported by the Capabilities.TransportProtocolSupported parameter. Indicates the transport protocol to be used for the MQTT bridge connection. </description>

  <parameter name="CleanSession" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The value of the MQTT clean session flag in the MQTT CONNECT packet (see [Section 3.1/MQTT31] and [Section 3.1.2.4/MQTT31]) to establish a MQTT bridge connection. If this flag is set to true (default), the remote MQTT broker will delete all subscription information after a Disconnect. A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If the change needs to be applied immediately, the command ForceReconnect() has to be executed. This parameter only applies if ProtocolVersion is set to 3.1 or 3.1.1. </description>

  <parameter name="CleanStart" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The value of the MQTT Clean Start flag in the MQTT CONNECT packet (see [Section 3.1.2.4/MQTT50] to establish a MQTT bridge connection. If this flag is set to true (default), the remote MQTT broker will delete all subscription information after a Disconnect. A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If the change needs to be applied immediately, the command ForceReconnect() has to be executed.. This parameter only applies if ProtocolVersion is set to 5.0. </description>

  <parameter name="KeepAliveTime" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="60" minValue="0" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Keep Alive Time in seconds defines the maximum wait time after which a packet has to be sent to the remote MQTT broker (see [Section 3.1/MQTT31], [Section 3.1.2.10/MQTT31]) or [Section 3.1.2.10/MQTT50]). If no regular packet can be sent a MQTT PINGREQ packet is sent. A value of zero (0) means no keep alive packets are sent and the bridge is not disconnected by the server. A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If the change needs to be applied immediately, the command ForceReconnect() has to be executed. </description>

  <parameter name="ClientID" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The MQTT client identifier used in the CONNECT packet (see [Section 3.1/MQTT31], [Section 3.1.3.1/MQTT31]) or [Section 3.1.3.1/MQTT50]). If ProtocolVersion is set to 3.1 or 3.1.1, this parameter MUST NOT be an empty string. If ProtocolVersion is set to 5.0, an empty string is allowed. A change of this parameter is only communicated to the MQTT server with the next MQTT CONNECT packet. If the change needs to be applied immediately, the command ForceReconnect() has to be executed. </description>

  <parameter name="Username" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">User name used to authenticate the MQTT broker when making a connection over the MQTT bridge. The value is sent in the MQTT CONNECT packet (see [Section 3.1/MQTT31], [Section 3.1.3.4/MQTT31] or [Section 3.1.3.5/MQTT50]). For MQTT 3.1 [Section 3.1/MQTT31] recommends that the user name has 12 characters or fewer, but this is not required. If this parameter is an empty string no authentication parameters are sent in the MQTT CONNECT packet. </description>

  <parameter name="Password" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Password used to authenticate the MQTT broker when making a connection over the MQTT bridge. The value is sent in the MQTT CONNECT packet (see [Section 3.1/MQTT31], [Section 3.1.3.5/MQTT31] or [Section 3.1.3.6/MQTT50]). This password is only sent in the MQTT CONNECT packet if Username is not an empty string. When read, this parameter returns an empty string, regardless of the actual value. </description>

  <parameter name="MessageRetryTime" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="5" minValue="1" maxValue="4294967295" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Message retry time in seconds defines the wait time before a MQTT message that expects a response (QoS value of message is > 0, or PUBLISH, PUBREL, SUBSCRIBE, UNSUBSCRIBE message) is resent, because the response is not received (see [Section 4.2/MQTT31]. This parameter only applies if ProtocolVersion is set to 3.1. </description>

  <parameter name="ConnectRetryTime" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="30" minValue="1" maxValue="4294967295" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Connect retry time in seconds defines the wait time before a failed bridge connection is retried. A failure can either be on the connection level (e.g. the TCP/IP or TLS connection can not be established) or on the Protocol level, the MQTT client does not receive a MQTT CONNACK packet on a MQTT CONNECT packet sent. </description>

  <parameter name="ServerSelectionAlgorithm" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" validValuesArray="mqttServerSelectionAlgorithmValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The algorithm used to select a server entry from the Server table. Enumeration of: Priority (Select the server from the Server. table according to the sequence defined with the Server.{i}.Priority and Server.{i}.Weight values), RoundRobin (Select the servers round robin), or Random (Select the servers randomly). </description>

  <parameter name="ServerConnection" type="string" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The value MUST be the Path Name of the Server. instance that is used for this Bridge, while the Status is Connecting or Connected. If the MQTT bridge is not connected the value MUST be an empty string. If the referenced object is deleted, the parameter value MUST be set to an empty string. </description>

  <parameter name="ServerNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The number of entries in the Server table. </description>

  <parameter name="SubscriptionNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The number of entries in the Subscription table. </description>




<object name="Device.MQTT.Broker.{i}.Bridge.{i}.ForceReconnectCommand." shortObjectName="Dev2MqttBrokerBridgeForcereconnectcommandObject" specSource="TR181" profile="Device2_MQTTBrokerExtended:1" requirements="P" supportLevel="NotSupported" hideObjectFromAcs="false" bbfProtocol="common" oid="1943" lockZone="3" />
  <description source="TRx">Disconnects the MQTT bridge to the remote MQTT broker and reconnects it again (toggle connection). It is only effective if the MQTT bridge is currently connected to the remote MQTT broker (Parameter Status is Connected). If the MQTT bridge is in a different state, the command has no effect. This command may be used to immediately apply changes in the MQTT connection settings. </description>




<object name="Device.MQTT.Broker.{i}.Bridge.{i}.Server.{i}." shortObjectName="Dev2MqttBrokerBridgeServerObject" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="PC" supportLevel="NotSupported" hideObjectFromAcs="false" bbfProtocol="common" oid="1944" lockZone="3" />
  <description source="TRx">Each Server instance represents a MQTT bridge server to be used for a Bridge. A remote MQTT broker, which is connected by a MQTT bridge can be reachable via several host addresses each represented by its own Server table entry. For an active MQTT bridge at least one enabled entry has to exist. If a MQTT bridge gets enabled by setting the parameter Bridge.{i}.Enable to true, which either has an empty Server table or the Server table only contains instances whose Enable is set to false, the Bridge.{i}.Status has to be set to Error_Misconfigured. Any attempt to delete an instance, which is currently in use (Bridge.{i}.ServerConnection refers to the instance to be deleted), has to be rejected. At most one entry in this table can exist with a given value for Alias, or with the same values for Address and Port. On creation of a new table entry, the Agent MUST choose initial values for Alias and Address such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Enables or disables this Server. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-mqtt-broker-bridge-server" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="common" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned.</description>

  <parameter name="Priority" type="unsignedInt" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="W" supportLevel="ReadWrite" minValue="0" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The priority of this Server that is used by the Bridge when determining the Server to connect to. The Bridge MUST contact the Server with the lowest-numbered priority that the Bridge can reach as defined in [RFC2782]. The selection of Servers with the same Priority value utilizes the Weight parameter to determine which Server is selected by the Bridge. This value is only used if Bridge.{i}.ServerSelectionAlgorithm is set to Priority. </description>

  <parameter name="Weight" type="long" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" minValue="-1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">This parameter specifies a relative weight for entries with the same Priority. The mechanism is defined in [RFC2782]. A value of -1 indicates that the implementation of this parameter is specific to the Vendor. This value is only used if Bridge.{i}.ServerSelectionAlgorithm is set to Priority. </description>

  <parameter name="Address" type="string" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="common" />
    <description source="TRx">Fully Qualified Domain Name (FQDN) or IP address of the MQTT broker server this Bridge connects to. If the value of this parameter is a FQDN that resolves to multiple addresses then each address SHOULD be attempted (in an implementation-specific order) until a connection can be made or all addresses are exhausted, in which case the next Server instance (based on rules defined over the selected Bridge.{i}.ServerSelectionAlgorithm) SHOULD be used. </description>

  <parameter name="Port" type="unsignedInt" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="W" supportLevel="ReadWrite" defaultValue="1883" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="common" />
    <description source="TRx">Port number of the MQTT broker server this Bridge connects to. </description>




<object name="Device.MQTT.Broker.{i}.Bridge.{i}.Subscription.{i}." shortObjectName="Dev2MqttBrokerBridgeSubscriptionObject" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="PC" supportLevel="NotSupported" hideObjectFromAcs="false" bbfProtocol="common" oid="1945" lockZone="3" />
  <description source="TRx">List of MQTT subscriptions handled over the bridge. At most one entry in this table can exist with a given value for Alias, or with the same values for Topic and Direction. On creation of a new table entry, the Agent MUST choose initial values for Alias, Topic and Direction such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-mqtt-broker-bridge-subscription" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="common" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Setting Enable to true activates the handling of this subscription instance. In case of incoming directions (Direction is either in or both) the topic is subscribed over the bridge at the remote MQTT broker with a MQTT SUBSCRIBE message if Enable is set to true or unsubscribed from the remote MQTT broker with a MQTT UNSUBSCRIBE message if the value is set to false. The actual status of the subscription is indicated with Status. </description>

  <parameter name="Status" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" validValuesArray="mqttBridgeSubscriptionStatusValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Indicates the status of this subscription. Enumeration of: Enabled, Disabled, or Error. The Enabled value indicates that the this subscription is active. In case of incoming directions (Direction is either in or both) the topic was successfully subscribed with the remote MQTT broker. The Disabled value indicates that this subscription is not used. The Error value indicates that an error occurred (e.g. an subscription could not be made with the remote MQTT broker) and the subscription is not in use. </description>

  <parameter name="Topic" type="string" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="W" supportLevel="ReadWrite" maxLength="65535" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="common" />
    <description source="TRx">Name of the subscribed topic. Topic names may contain wildcards according to the rules specified in [Section Appendix A/MQTT31], [Section 4.7/MQTT31] or [Section 4.7/MQTT50]. </description>

  <parameter name="Direction" type="string" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="W" supportLevel="ReadWrite" validValuesArray="mqttSubscriptionDirectionValues" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="common" />
    <description source="TRx">The direction of the subscription. Enumeration of: out (Indicates that all matching topics will be sent over the bridge to the next MQTT broker), in (Indicates that all matching topics will be received over the bridge from the next MQTT broker), or both (Indicates that all matching topics will be sent and received over the bridge). </description>

  <parameter name="QoS" type="unsignedInt" specSource="TR181" profile="Device2_MQTTBrokerBridgeBase:1" requirements="W" supportLevel="ReadWrite" minValue="0" maxValue="2" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The MQTT QoS level assigned with the subscription (see [Section 4.1/MQTT31], [Section 4.3/MQTT31]) or [Section 4.3/MQTT50]. </description>

  <parameter name="LocalPrefix" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The local prefix is used for remapping received topics to the local topics of the MQTT broker and to select the topics to be sent over bridge to the remote MQTT broker. In incoming direction (Direction is either in or both): For remote topics received over the bridge the MQTT broker adds the LocalPrefix in front of the received topic, before processing it. Example: Topic is "/bus/+", LocalPrefix is "/local", Direction is "in". MQTT broker receives message with topic "/bus/tr181" over bridge => MQTT broker uses topic "/local/bus/tr181" for internal processing. In outgoing direction (Direction is either out or both): For selection of the topics to be sent over the bridge the MQTT broker uses the combination of LocalPrefix and Topic to match the topics to be sent over bridge, and removes the LocalPrefix from the selected topic before sending it over the bridge.. Example: Topic is "/bus/+", LocalPrefix is "/local", Direction is "out". MQTT broker receives message with topic "/local/bus/tr181" from a MQTT client => MQTT broker sends topic "/bus/tr181" to remote MQTT broker  </description>

  <parameter name="RemotePrefix" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">The remote prefix is used for remapping topics to the remote MQTT broker topic lists. In incoming direction (Direction is either in or both): For remote topics received over the bridge the MQTT broker removes the remote prefix topic from the received topic (before handling the LocalPrefix), before processing it. Example: Topic is "/bus/+", LocalPrefix is "/local", RemotePrefix is "/remote", Direction is "in". MQTT broker receives message with topic "/remote/bus/tr181" over bridge => MQTT broker uses topic "/local/bus/tr181" for internal processing. During activation of the bridge, the MQTT broker prepends the Topic with RemotePrefix topic and subscribes to the remote MQTT broker with it, in order to receive all applicable remote topics. Example: Topic is "/bus/+", RemotePrefix is "/remote", Direction is "in". MQTT broker sends a subscription to the remote MQTT broker with the topic "/remote/bus/+". In outgoing direction (Direction is either out or both): For all topics to be sent over the bridge (Direction is either out or both), the RemotePrefix will be prepended to the topic after the LocalPrefix has been processed and before sending the message over the bridge.. Example: Topic is "/bus/+", LocalPrefix is "/local", RemotePrefix is "/remote" Direction is "out". MQTT broker receives message with topic "/local/bus/tr181" from a MQTT client => MQTT broker sends topic "/remote/bus/tr181" to remote MQTT broker. </description>




<object name="Device.MQTT.Broker.{i}.Stats." shortObjectName="Dev2MqttBrokerStatsObject" specSource="TR181" profile="Device2_MQTTBrokerBase:1" requirements="P" supportLevel="NotSupported" hideObjectFromAcs="false" bbfProtocol="common" oid="1946" lockZone="3" />
  <description source="TRx">The MQTT broker statistics values. These will reset with each MQTT broker start, either after reboot or if the MQTT broker gets (re-)enabled. </description>

  <parameter name="TotalNumberOfClients" type="unsignedInt" specSource="TR181" profile="Device2_MQTTBrokerBase:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Total number of MQTT clients registered with the MQTT broker. </description>

  <parameter name="NumberOfActiveClients" type="unsignedInt" specSource="TR181" profile="Device2_MQTTBrokerBase:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Number of MQTT clients, which have a connection with the MQTT broker established. </description>

  <parameter name="NumberOfInactiveClients" type="unsignedInt" specSource="TR181" profile="Device2_MQTTBrokerExtended:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Number of MQTT clients, which have no connection with the MQTT broker established. </description>

  <parameter name="Subscriptions" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Number of subscriptions held by the MQTT broker. </description>

  <parameter name="PublishSent" type="unsignedLong" specSource="TR181" profile="Device2_MQTTBrokerExtended:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Number of publish messages sent by the MQTT broker. </description>

  <parameter name="PublishReceived" type="unsignedLong" specSource="TR181" profile="Device2_MQTTBrokerExtended:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Number of publish messages received by the MQTT broker. </description>

  <parameter name="MQTTMessagesSent" type="unsignedLong" specSource="TR181" profile="Device2_MQTTBrokerBase:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Total number of MQTT messages sent by the MQTT broker. </description>

  <parameter name="MQTTMessagesReceived" type="unsignedLong" specSource="TR181" profile="Device2_MQTTBrokerBase:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Total number of MQTT messages received by the MQTT broker. </description>

  <parameter name="ConnectionErrors" type="unsignedInt" specSource="TR181" profile="Device2_MQTTBrokerBase:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Number of connection errors. </description>

  <parameter name="PublishErrors" type="unsignedInt" specSource="TR181" profile="Device2_MQTTBrokerExtended:1" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="common" />
    <description source="TRx">Number of errors which prevented sending publish messages </description>




<object name="Device.USPAgent." shortObjectName="Dev2USPAgentObject" specSource="TR181" profile="USPAgent:1" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2700" lockZone="8" />
  <description source="TRx">This object contains general information about the USP Agent itself.  For information related to the Device that hosts the Agent, please reference the DeviceInfo object.         NOTE: The Vendor Log File table (DeviceInfo.VendorLogFile) details are located on the DeviceInfo object. </description>

  <parameter name="EndpointID" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The unique USP identifier for this USP Agent. </description>

  <parameter name="SoftwareVersion" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" maxLength="64" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The current USP Agent software version; not the version of the overall device firmware, which is located in DeviceInfo.SoftwareVersion. To allow version comparisons, this element SHOULD be in the form of dot-delimited integers, where each successive integer represents  a more minor category of variation.  For example, 3.0.21 where the components mean: Major.Minor.Build. </description>

  <parameter name="UpTime" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Time in seconds since the USP Agent was last restarted (either via a reset of the software or reboot of the underlying device). </description>

  <parameter name="SupportedProtocols" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Comma-separated list (at least 1 items) of strings. USP Message Transfer Protocols supported by this USP Agent.  The USP Agent MUST support at least one Protocol.  Each list item is an enumeration of: WebSocket, STOMP, MQTT</description>

  <parameter name="SupportedFingerprintAlgorithms" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Comma-separated list of strings, each entry is an algorithm for calculating firgerprints that is supported by the Agent. Each list item is an enumeration of SHA-1, SHA-224, SHA-256, SHA-384, SHA-512 </description>

  <parameter name="AdvertisedDeviceSubtypes" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Comma-separted list of strings, each entry is a subtype component of the service type that is advertised for the device using mDNS as defined in RFC6762 </description>

  <parameter name="MaxSubscriptionChangeAdoptionTime" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" minValue="5" maxValue="4294967295" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The acceptable amount of time in seconds between the alteration of the Agent's Subscriptions (e.g. updated subscription, new subscription, removed subscription, etc.) and the notifications related to those subscriptions being delivered. For example, if this parameter is set to 30 seconds, then once a Subscription has been updated, the Agent has 30 seconds before it needs to start delivering notifications based on the updated version of the Subscription (instead of the old version of the Subscription). </description>

  <parameter name="X_BROADCOM_COM_DualStackPreference" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="IPv4" validValuesArray="DualStackValues" hideParameterFromAcs="true" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="cwmp" />
  <description source="BROADCOM">This parameter specifies the preference of layer 3 protocol for local agent. </description>

  <parameter name="MTPNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The number of entries in the MTP table. </description>

  <parameter name="ControllerNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The number of entries in the Controller table. </description>

  <parameter name="CertificateNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The numbe of entries in the Certificate table. </description>

  <parameter name="AddCertificate" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Provides a mechanism to allow an ACS to add a new certificate to Certificate.{i}. This does not automatically produce a trust relationship with the host identified by the Certificate. To produce a trust relationship, an entry is required to exist in Controller.{i}.Credential or ControllerTrust.Credential.{i}.Credential that references the new Certificate.{i} entry. The Agent will use the Serial Number and Issuer fields from the content provided in this parameter to populate the Certificate.{i}.SerialNumber and Certificate.{i}.Issuer parameters. If Certificate already has an instance with the same Certificate.{i}.SerialNumber and Certificate.{i}.Issuer parameters, this command will fail. To replace an instance with the same Certificate.{i}.SerialNumber and Certificate.{i}.Issuer, the existing instance must first be deleted. The value of this parameter is the X.509 certificate in Privacy-enhanced Electronic Mail (PEM) [RFC7468] format. The value of this parameter is not part of the device configuration and is always an empty string when read.</description>




<object name="Device.USPAgent.MTP.{i}." shortObjectName="Dev2USPAgentMtpObject" specSource="TR181" profile="Unspecified" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2701" lockZone="8" />
  <description source="TRx">Each instance of this table represents a MTP used by the local Agent. At most one entry in this table can exist with a given value for Alias. On creation of a new table entry, the Agent MUST choose an initial value for Alias such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therfore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-agent-mtp" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="cwmp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constaints MUST be enforced: MUST NOT be empty. MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Enable/Disable this MTP instance. If this MTP instance is to be disabled and currently used for communication with the requesting controller, the agent has to send the request response first, before disabling it. </description>

  <parameter name="Status" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" validValuesArray="uspMtpStatusValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The current operational state of the MTP instance. Enumeration of: Up, Down (when this MTP instance cannot establish communication), Error (when this MTP instance is misconfigured, OPTIONAL). </description>

  <parameter name="Protocol" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="STOMP" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The value MUST be a member of the list reported by the Device.Local.Agent.SupportedProtocols parameter. The Message Transport Protocol (MTP) to be used for communications by a USP Endpoint. </description>

  <parameter name="EnableMDNS" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">This parameter, when true, enables the advertisement of DNS-SD services defined for this MTP instance using mDNS as defined in RFC6762. This parameter cannot be set to true if there are multiple MTP instances with the same value of the Protocol parameter. When true, the hostname advertised in the SRV record MUST be a Fully Qualified Domain Name (FQDN). The interfaces that advertise these DNS-SD services are restriced to the set of interfaces associated with this MTP instance and the interfaces defined by the DNS.SD.AdvertisedInterfaces parameter. </description>




<object name="Device.USPAgent.MTP.{i}.CoAP." shortObjectName="Dev2USPAgentMtpCoapObject" specSource="TR181" profile="Unspecified" requirements="P" supportLevel="NotSupported" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2702" lockZone="8" />
  <description source="TRx">If the USP Endpoint uses the CoAP Message Transport Protocol (MTP), then this object contains CoAP specific configuration parameters. </description>

  <parameter name="Interfaces" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Comma-separated list of strings. Each list item MUST be the Path Name of the IP.Interface object instance that this server will use as its host address to receive USP messages. If the referenced object is deleted, the corresponding item MUST be removed from the list. An empty string will bind this server to all interfaces for this device. </description>

  <parameter name="Port" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="5683" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The port number used by the CoAP Server to receive USP messages. </description>

  <parameter name="Path" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The path that is used by the CoAP Server in order to receive USP messages. </description>

  <parameter name="IsEncrypted" type="boolean" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">This parameter represents whether or not communications that utilize this CoAP object instance are encrypted. </description>

  <parameter name="EnableEncryption" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">When true, encryption is used for this MTP instance. </description>




<object name="Device.USPAgent.MTP.{i}.STOMP." shortObjectName="Dev2USPAgentMtpStompObject" specSource="TR181" profile="Unspecified" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2703" lockZone="8" />
  <description source="TRx">If the USP Endpoint uses the STOMP Message Transport Protocol (MTP), then this object contains STOMP Client specific configuration parameters related to how the Agent communicates with the STOMP Server. </description>

  <parameter name="Reference" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The value MUST be the Path Name of a row in the STOMP.Connection table. If the referenced object is deleted, the parameter value MUST be set to an empty string. A reference to the STOMP Connection used by this Agent when communicating via the STOMP MTP. </description>

  <parameter name="Destination" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The STOMP destination where the Agent will be listening to incoming USP messages. </description>

  <parameter name="DestinationFromServer" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The STOMP destination contained in the subscribe-dest header of the CONNECTED STOMP Frame. If the Agent doesn't receive a subscribe-dest header in the CONNECTED STOMP Frame, then the value of this Parameter is empty. If this parameter's value is not empty then this is the STOMP destination address for this Agent, but if the value is empty the Destination Parameter contains the STOMP destination address for this Agent. </description>




<object name="Device.USPAgent.MTP.{i}.WebSocket." shortObjectName="Dev2USPAgentMtpWebsocketObject" specSource="TR181" profile="Unspecified" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2704" lockZone="8" />
  <description source="TRx">If the USP Endpoint uses the WebSocket Message Transport Protocol (MTP) as a WebSocket server, then this object contains WebSocket specific configuration parameters. </description>

  <parameter name="Interfaces" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Comma-separated list of strings. Each list item MUST be the Path Name of the IP.Interface object instance that this server will use as its host address to receive USP messages. An empty string will bind this server to all interfaces for this device. </description>

  <parameter name="Port" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="5683" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The port number used by the WebSocket Server to receive USP messages. </description>

  <parameter name="Path" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The path that is used by the WebSocket Server in order to receive USP messages. </description>

  <parameter name="EnableEncryption" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">When true, encryption MUST be used for all connections to this MTP instance. </description>

  <parameter name="KeepAliveInterval" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="60" minValue="1" maxValue="4294967295" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The duration in seconds between when WebSocket ping control frames are transmitted by the Agent's WebSocket server to the Controller's WebSocket client.</description>




<object name="Device.USPAgent.MTP.{i}.MQTT." shortObjectName="Dev2USPAgentMtpMqttObject" specSource="TR181" profile="Unspecified" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2705" lockZone="8" />
  <description source="TRx">If the USP Endpoint uses the MQTT Message Transport Protocol (MTP), then this object contains MQTT Client specific configuration parameters related to how the Agent communicates with the MQTT broker. </description>

  <parameter name="Reference" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The value MUST be the Path Name of a row in the MQTT.Client table. A reference to the MQTT Client used by this Agent when communicating via the MQTT MTP. </description>

  <parameter name="ResponseTopicConfigured" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The Agent's configured "reply to" topic. When MQTT 5.0 is being used, this value is put in the PUBLISH Response Topic property for all PUBLISH packets with a USP Record, if no Response Information (value recorded in ResponseTopicDiscovered) is included in the CONNACK. When MQTT 3.1.1 is being used, this value is put at the end of the PUBLISH Topic Name property (as specified in [Section "MQTT Binding"/TR-369]. If the value of ResponseTopicConfigured is not a subset (wildcarded or precise match) of any of the Reference MQTT.Client.{i}.Subscription.{i}.Topic values the Agent MUST subscribe to this Topic. The value MUST NOT contain any wild card characters ("+", "#"). </description>

  <parameter name="ResponseTopicDiscovered" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" maxLength="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Duplicate of Reference MQTT.Client.{i}.ResponseInformation. This is the value of the CONNACK Response Information property supplied by a MQTT 5.0 server and is used by a MQTT 5.0 client as the basis for the PUBLISH Response Topic property for all PUBLISH packets that expect a response. If a value is received from the MQTT 5.0 server, it will be used instead of any value configured in ResponseTopicConfigured. </description>

  <parameter name="PublishQoS" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" minValue="0" maxValue="2" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The Agent MUST use this QoS value when sending a USP Record on this MTP. If the referenced MQTT Client uses MQTT 5.0 and the MQTT server only indicates support for a QoS value in the CONNACK Maximum QoS property lower than this QoS value, the Agent MUST use the highest QoS value that is supported by the server. </description>




<object name="Device.USPAgent.Controller.{i}." shortObjectName="Dev2USPAgentControllerObject" specSource="TR181" profile="Unspecified" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2706" lockZone="8" />
  <description source="TRx">Each instance of this table represents a USP Controller that has access to this USP Agent. At most one entry in this table can exist with a given value for EndpointID, or with a given value for Alias. On creation of a new table entry, the Agent MUST choose an initial value for Alias sucah that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's bee assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-controller" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="cwmp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constaints MUST be enforced: MUST NOT be empty. MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned. </description>

  <parameter name="EndpointID" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="cwmp" />
    <description source="TRx">The unique USP identifier for this USP Controller. </description>

  <parameter name="ControllerCode" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="128" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Information about the configuration state of an Agent as it pertains to the Controller instance. This is not information related to an operator's installation or usage of the protocol, that information is maintained in ProvisioningCode. This parameter could be used in scenarios where the Controller needs to perform some kind of initialization or periodic configuration monitoring. For example, a Controller might perform some initial configuration of an Agent on first contact (perhaps to configure the Subscriptions).  The Controller could inspect this parameter to determine the current state of the Agent's configuration, allowing the Controller to streamline the configuration process. </description>

  <parameter name="ProvisioningCode" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="64" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Identifying information which MAY be used by the Controller instance to determine Controller instance specific customization and provisioning parameters. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Enable/Disable this Controller instance.  When false, messages (notifications) are not sent to the remote endpoint represented by this Controller instance. </description>

  <parameter name="AssignedRole" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Eeach list item MUST be the Path Name of a row in the Device.USPAgent.ControllerTrust.Role table. If the referenced object is deleted, the corresponding item MUST be removed from the list. Comma-separated list of strings, each entry is a Role that has been assigned to this Controller instance by means other than the USPAgent.ControllerTrust.Credential.{i}.Role parameter. </description>

  <parameter name="InheritedRole" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Each list item MUST be the Path Name of a row in the Device.USPAgent.ControllerTrust.Role table. If the referenced object is deleted, the corresponding item MUST be removed from the list. Comma-separated list of strings, each entry is a Role that has been assigned to this Controller instance from the USPAgent.ControllerTrust.Credential.{i}.Role parameter associated with the CA credential (USPAgent.ControllerTrust.Credential.{i}.Credential) used to validate the Controller certificate. </description>

  <parameter name="Credential" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The value MUST be the Path Name of a row in the Certificate table. If the referenced object is deleted, the parameter value MUST be set to an empty string.  Comma-separated list of strings, the set of certificates from Certificate.{i} that a Controller can present for use in authenticating the identity of this Controller instance. </description>

  <parameter name="PeriodicNotifInterval" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="10" minValue="1" maxValue="4294967295" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">If a Periodic Event Notification Subscription instance is associated with this USP Controller, then this is the duration in seconds of the interval for which the USP Agent MUST attempt to issue a Periodic Notification to the USP Controller. </description>

  <parameter name="PeriodicNotifTime" type="dateTime" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="0001-01-01T00:00:00Z" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">If a Periodic Event Notification Subscription instance is associated with this USP Controller, then this is an absolute time reference in UTC to determine when the USP Agent will issue a Periodic Notification. Each Periodic Notification MUST occur at this reference time plus or minus an integer multiple of the PeriodicNotifInterval. PeriodicNotifTime is used only to set the phase of the Periodic Event Notifications. The actual value of PeriodicNotifTime can be arbitrarily far into the  past or future. For example, if PeriodicNotifInterval is 86400 (a day) and if PeriodicNotifTime is set to UTC midnight on some day (in the past,  present, or future) then Periodic Notifications will be sent every day at UTC midnight. These MUST begin on the very next midnight, even if PeriodicNotifTime refers to a day in the future. The Unknown Time value defined in [Section 3.2/TR-106a2] indicates that no particular time reference is specified.  That is, the USP Agent MAY locally choose the time reference, and needs only to adhere to the specified PeriodicNotifInterval.   If absolute time is not available to the USP Agent, its Periodic Notification behavior MUST be the same as if the PeriodicNotifTime parameter was set to the Unknown Time value. </description>

  <parameter name="USPNotifRetryMinimumWaitInterval" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="5" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">This parameter is related to the retry mechanism for Notifications.    Configures the first retry wait interval, in seconds, as specified in [Section "Responses to Notifications and Notification Retry"/TR-369]. A value of 5 corresponds to the default behavior. The USP Agent MUST use a random value between USPNotifRetryMinimumWaitInterval and (USPNotifRetryMinimumWaitInterval * USPNotifRetryIntervalMultiplier / 1000) as the first retry wait interval.  Other values in the retry pattern MUST be calculated using this value as a starting point. </description>

  <parameter name="USPNotifRetryIntervalMultiplier" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="2000" minValue="1000" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">This parameter is related to the retry mechanism for Notifications.   Configures the retry interval multiplier as specified in [Section "Responses to Notifications and Notification Retry"/TR-369].This value is expressed in units of 0.001.  Hence the values of the multiplier range between 1.000 and 65.535. A value of 2000 corresponds to the default behavior.The USP Agent MUST use a random value between USPNotifRetryMinimumWaitInterval and (USPNotifRetryMinimumWaitInterval * USPNotifRetryIntervalMultiplier / 1000) as the first retry wait interval.  Other values in the retry pattern MUST be calculated using this value as a  starting point. </description>

  <parameter name="MTPNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The number of entries in the MTP table. </description>

  <parameter name="SendOnBoardRequest" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">When set to true, requests the Agent to send a USP OnBoardRequest notification to this Controller. The value of this parameter is not part of the device configuration and is always false when read.</description>




<object name="Device.USPAgent.Controller.{i}.MTP.{i}." shortObjectName="Dev2USPAgentControllerMtpObject" specSource="TR181" profile="Unspecified" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2707" lockZone="8" />
  <description source="TRx">Each instance of this table represents a MTP used by this Controller. At most one entry in this table can exist with a given value for Alias, or with a given value for Protocol. On creation of a new table entry, the Agent MUST choose an initial value for Alias such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="64" hideParameterFromAcs="false" uniqueKey="true" bbfProtocol="cwmp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constaints MUST be enforced: MUST NOT be empty. MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Enable/Disable this MTP instance. If this MTP instance is to be disabled and currently used for communication with the requesting controller, the agent has to send the request response first, before disabling it. </description>

  <parameter name="Protocol" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="STOMP" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="cwmp" />
    <description source="TRx">The value MUST be a member of the list reported by the Device.USPAgent.SupportedProtocols parameter. The Message Transport Protocol (MTP) to be used for communications by a USP Endpoint. </description>

  <parameter name="Order" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The order (relative priority) to use when determining which MTP to use for communicating to the Controller. A value of 1 indicates the highest precedence. For each configured MTP, the instance with the lowest value is attempted first. When more than one MTP instance has the same value, then each instance with the same value SHOULD be attempted at the same time. The value of Order on creation of a MTP table entry MUST be one greater than the largest current value (initially assigned the lowest precedence).</description>




<object name="Device.USPAgent.Controller.{i}.MTP.{i}.CoAP." shortObjectName="Dev2USPAgentControllerMtpCoapObject" specSource="TR181" profile="Unspecified" requirements="P" supportLevel="NotSupported" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2708" lockZone="8" />
  <description source="TRx">If the USP Endpoint uses the CoAP Message Transport Protocol (MTP), then this object contains CoAP specific configuration parameters. </description>

  <parameter name="Host" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The hostname or IP Address of the Controller's CoAP server. </description>

  <parameter name="Port" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The port number used by the Controller's CoAP Server to receive USP messages. </description>

  <parameter name="Path" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The path that is used by the Controller's CoAP Server in order to receive USP messages. </description>

  <parameter name="EnableEncryption" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">When true, encryption is used as specified in [Section "MTP Message Encryption"/TR-369]. </description>




<object name="Device.USPAgent.Controller.{i}.MTP.{i}.STOMP." shortObjectName="Dev2USPAgentControllerMtpStompObject" specSource="TR181" profile="Unspecified" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2709" lockZone="8" />
  <description source="TRx">If the USP Endpoint uses the STOMP Message Transport Protocol (MTP), then this object contains STOMP Client specific configuration parameters related to how this Controller communicates with the STOMP Server. </description>

  <parameter name="Reference" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The value MUST be the Path Name of a row in the STOMP.Connection table. If the referenced object is deleted, the parameter value MUST be set to an empty string. A reference to the STOMP Connection used by this Controller when communicating via the STOMP MTP. </description>

  <parameter name="Destination" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The STOMP destination where the Controller will be listening to incoming USP messages. </description>




<object name="Device.USPAgent.Controller.{i}.MTP.{i}.WebSocket." shortObjectName="Dev2USPAgentControllerMtpWebsocketObject" specSource="TR181" profile="Unspecified" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2710" lockZone="8" />
  <description source="TRx">If the USP Endpoint uses the WebSocket Message Transport Protocol (MTP) as a WebSocket client, then this object contains WebSocket specific configuration parameters. </description>

  <parameter name="Host" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="256" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The hostname or IP Address of the Controller's WebSocket server. </description>

  <parameter name="Port" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The port number used by the Controller's WebSocket server to receive USP messages. </description>

  <parameter name="Path" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The path that is used by the Controller's WebSocket server in order to receive USP messages. </description>

  <parameter name="EnableEncryption" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="true" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">When true, encryption MUST be used for this MTP instance. </description>

  <parameter name="KeepAliveInterval" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" minValue="1" maxValue="4294967295" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The duration in seconds between when WebSocket ping control frames are transmitted by the Agent to the WebSocket server for the USP Controller. </description>

  <parameter name="CurrentRetryCount" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The current retry count of the session. When zero (0), the session is not in a retry state. </description>

  <parameter name="SessionRetryMinimumWaitInterval" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="5" minValue="1" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Configures the first retry wait interval, in seconds, as specified in [Section "WebSocket Session Retry"/TR-369]. The USP Agent MUST use a random value between SessionRetryMinimumWaitInterval and (SessionRetryMinimumWaitInterval * SessionRetryIntervalMultiplier / 1000) as the first retry wait interval. Other values in the retry pattern MUST be calculated using this value as a starting point. </description>

  <parameter name="SessionRetryIntervalMultiplier" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="2000" minValue="1000" maxValue="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Configures the retry interval multiplier as specified in [Section "WebSocket Session Retry"/TR-369]. This value is expressed in units of 0.001. Hence the values of the multiplier range between 1.000 and 65.535. The USP Agent MUST use a random value between SessionRetryMinimumWaitInterval and (SessionRetryMinimumWaitInterval * SessionRetryIntervalMultiplier / 1000) as the first retry wait interval. Other values in the retry pattern MUST be calculated using this value as a starting point. </description>




<object name="Device.USPAgent.Controller.{i}.MTP.{i}.MQTT." shortObjectName="Dev2USPAgentControllerMtpMqttObject" specSource="TR181" profile="Unspecified" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2711" lockZone="8" />
  <description source="TRx">If the USP Endpoint uses the MQTT Message Transport Protocol (MTP), then this object contains MQTT Client specific configuration parameters related to how this Controller communicates with the MQTT broker. </description>

  <parameter name="Reference" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The value MUST be the Path Name of a row in the MQTT.Client table. A reference to the MQTT Client used by this Controller when communicating via the MQTT MTP. </description>

  <parameter name="Topic" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="65535" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The topic name the USP Controller has subscribed to, to be used for Notify messages send by the USP Agent. </description>

  <parameter name="PublishRetainResponse" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">If set to true the Agent MUST set the RETAIN flag in MQTT PUBLISH messages carrying a USP Response Message to 1, unless the MQTT server sent Retain Available = 0 (MQTT 5.0) in its CONNACK (in which case, the Agent MUST set the RETAIN flag to 0). </description>

  <parameter name="PublishRetainNotify" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">If set to true the Agent MUST set the RETAIN flag in MQTT PUBLISH messages carrying a USP Notify Message to 1, unless the MQTT server sent Retain Available = 0 (MQTT 5.0) in its CONNACK (in which case, the Agent MUST set the RETAIN flag to 0). </description>




<object name="Device.USPAgent.Certificate.{i}." shortObjectName="Dev2USPAgentCertificateObject" specSource="TR181" profile="Unspecified" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2712" lockZone="8" />
  <description source="TRx">Each instance of this table represents information related to a X.509 certificate (see [RFC5280]) of a Controller or Certificate Authority. Instances are referenced from USPAgent.Controller.{i}.Credential and USPAgent.ControllerTrust.Credential.{i}.Credential. At most one entry in this table can exist with the same values for SerialNumber and Issuer, or with a given value for Alias. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="64" hideParameterFromAcs="false" uniqueKey="true" bbfProtocol="cwmp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Enable/Disable this Certificate instance. </description>

  <parameter name="SerialNumber" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" maxLength="64" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="cwmp" />
    <description source="TRx">The Serial Number field in an X.509 certificate, see [RFC5280]. </description>

  <parameter name="Issuer" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" maxLength="256" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="cwmp" />
    <description source="TRx">The Issuer field in an X.509 certificate, see [RFC5280], i.e. the Distinguished Name (DN) of the entity who has signed the certificate. </description>

  <parameter name="X_BROADCOM_COM_AltName" type="string" specSource="Broadcom" profile="Unspecified" requirements="R" supportLevel="ReadOnly" maxLength="256" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The subjectaltName with a type uniformResourceIdentifier field in an X.509 certificate, see [RFC5280]. Its value should be matched with endpoint ID of controller that certificate authorizes. Controller uses it to look for its inherited role. </description>




<object name="Device.USPAgent.ControllerTrust." shortObjectName="Dev2USPAgentControllertrustObject" specSource="TR181" profile="Unspecified" requirements="P" supportLevel="Present" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2713" lockZone="8" />
  <description source="TRx">This object contains information that an Agent applies when establishing a trust relationship with a Controller. </description>

  <parameter name="UntrustedRole" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Each list item MUST be the Path Name of a row in the Role table. If the referenced object is deleted, the corresponding item MUST be removed from the list. Comma-separated list (up to 1 items) of strings, each entry is a Role that is associated with Controllers whose identity cannot be authenticated. The value of the UntrustedRole parameter is appended to the USPAgent.Controller.{i}.AssignedRole parameter. In some instances, this policy is set by the Agent and cannot be modified by Controllers. If the Agent does not allow modification of this parameter, the Agent MUST respond with an error to the request to set this parameter. </description>

  <parameter name="BannedRole" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The value MUST be the Path Name of a row in the Role table. If the referenced object is deleted, the parameter value MUST be set to an empty string. The Role that is associated with Controllers indicate banned access. When assigned to a Controller or associated with an entry in the Credential table, this MUST be the only value of the BannedRole parameter of the USPAgent.Controller.{i}.AssignedRole parameter. The Agent SHOULD refuse to accept USP messages from, or send USP messages to, any Controller that has this Role. </description>

  <parameter name="TOFUAllowed" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">When true, Agent has active policy that allows for self-signed certificates and certificates from unknown Certificate Authorities (CAs) to be trusted on first use (TOFU). </description>

  <parameter name="TOFUInactivityTimer" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Inactivity timer in seconds. This timer is started when trust on first use (TOFU) policy is used to accept a Controller certificate. If no USP Message is received before this timer elapses, the Agent MUST tear down the MTP connection and underlying (D)TLS session. A value of 0 means that the TOFU inactivity timer is effectively disabled. </description>

  <parameter name="RoleNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The number of entries in the Role table. </description>

  <parameter name="CredentialNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The number of entries in the Credential table. </description>

  <parameter name="ChallengeNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The number of entries in the Challenge table. </description>




<object name="Device.USPAgent.ControllerTrust.Role.{i}." shortObjectName="Dev2USPAgentControllertrustRoleObject" specSource="TR181" profile="Unspecified" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2714" lockZone="8" />
  <description source="TRx">Each instance of this table represents a Role that can be assigned to or inherited by a Controller via the Controller Trust mechanism. The Role contains a set of permissions that determine how the Controller can interact with the data model. If multiple permission entries associated with this table contain a Target that evaluates to the same instantiated Object/Parameter for multiple Roles, then the permissions to be used are a union of the identified permissions. At most one entry in this table can exist with a given value for Alias, or with a given value for Name. On creation of a new table entry, the Agent MUST choose initial values for Alias and Name such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-role" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="cwmp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Enable/Disable this Role instance. </description>

  <parameter name="Name" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="cwmp" />
    <description source="TRx">The Role assigned to this Role instance. </description>

  <parameter name="PermissionNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" hideParameterFromAcs="false" alwaysWriteToConfigFile="true" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The number of entries in the Permission table. </description>




<object name="Device.USPAgent.ControllerTrust.Role.{i}.Permission.{i}." shortObjectName="Dev2USPAgentControllertrustRolePermissionObject" specSource="TR181" profile="Unspecified" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2715" lockZone="8" />
  <description source="TRx">Each instance of this table represents the permissions that are extended to a set of Targets for a specified Role. If there are multiple entries in this table for a specific Role where the Targets overlap, the permissions for the entry with the highest value takes priority over all others. At most one entry in this table can exist with a given value for Alias, or with a given value for Order. On creation of a new table entry, the Agent MUST choose an initial value for Alias such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="64" hideParameterFromAcs="false" uniqueKey="true" bbfProtocol="cwmp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Enable/Disable this Permission instance. </description>

  <parameter name="Order" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="0" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="cwmp" />
    <description source="TRx">The order (relative priority) to use when determining the permissions for overlapping Targets that are contained within the same Role. The larger value of this parameter takes priority over a permission with a smaller value (i.e., 0 has the lowest priority). </description>

  <parameter name="Targets" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Comma-separated list of strings, each entry is a target to which the value of the permissions parameters are assigned. When an entry is a value of a Partial Path, the permissions are associated to that Object and any child Object/Parameter. When the value of an entry is an Object instance then the permissions are associated to all Parameters of the Object instance. When an entry is a value of a Search Path as defined in [TR-369] that resolves to zero or more Parameter Paths, then all Parameter Paths that result from the evaluation of the Search Path are subject to the permissions assigned by this Permission instance. </description>

  <parameter name="Param" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="----" maxLength="4" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The permissions of a Role for the specified Targets. A string of 4 characters where each character represents a permission ("r" for Read, "w" for Write, "x" for Execute", and "n" for Notify). The string is always in the same order (rwxn) and the lack of a permission is signified by a "-" character (e.g., r–n). The following describes the meaning of the permissions for Parameter type of Targets: Read: Grants the capability to read the value of the Parameter via Get and read the meta-information of the Parameter via GetSupportedDM. - Write: Grants the capability to update the value of the Parameter via Add or Set. - Execute: Grants no capabilities; Parameters can not be executed. - Notify: Grants the capability to use this Parameter in the ReferenceList of a ValueChange Subscription. </description>

  <parameter name="Obj" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="----" maxLength="4" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The permissions of a Role for the specified Targets. A string of 4 characters where each character represents a permission ("r" for Read, "w" for Write, "x" for Execute", and "n" for Notify). The string is always in the same order (rwxn) and the lack of a permission is signified by a "-" character (e.g., r–n). The following describes the meaning of the permissions for Parameter type of Targets: Read: Grants the capability to read the value of the Parameter via Get and read the meta-information of the Parameter via GetSupportedDM. - Write: Grants the capability to update the value of the Parameter via Add or Set. - Execute: Grants no capabilities; Parameters can not be executed. - Notify: Grants the capability to use this Parameter in the ReferenceList of a ValueChange Subscription. </description>

  <parameter name="InstantiatedObj" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="----" maxLength="4" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The permissions of a Role for the specified Targets. A string of 4 characters where each character represents a permission ("r" for Read, "w" for Write, "x" for Execute", and "n" for Notify). The string is always in the same order (rwxn) and the lack of a permission is signified by a "-" character (e.g., r–n). The following describes the meaning of the permissions for Parameter type of Targets: Read: Grants the capability to read the value of the Parameter via Get and read the meta-information of the Parameter via GetSupportedDM. - Write: Grants the capability to update the value of the Parameter via Add or Set. - Execute: Grants no capabilities; Parameters can not be executed. - Notify: Grants the capability to use this Parameter in the ReferenceList of a ValueChange Subscription. </description>

  <parameter name="CommandEvent" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="----" maxLength="4" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The permissions of a Role for the specified Targets. A string of 4 characters where each character represents a permission ("r" for Read, "w" for Write, "x" for Execute", and "n" for Notify). The string is always in the same order (rwxn) and the lack of a permission is signified by a "-" character (e.g., r–n). The following describes the meaning of the permissions for Parameter type of Targets: Read: Grants the capability to read the value of the Parameter via Get and read the meta-information of the Parameter via GetSupportedDM. - Write: Grants the capability to update the value of the Parameter via Add or Set. - Execute: Grants no capabilities; Parameters can not be executed. - Notify: Grants the capability to use this Parameter in the ReferenceList of a ValueChange Subscription. </description>




<object name="Device.USPAgent.ControllerTrust.Credential.{i}." shortObjectName="Dev2USPAgentControllertrustCredentialObject" specSource="TR181" profile="Unspecified" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2716" lockZone="8" />
  <description source="TRx">Each instance of this table represents a trusted credential. The credential can be that of a certificate authority (CA) for a Controller whose EndpointID is unknown. When a credential is supplied to the Agent by a Controller during authentication, the credentials in this table are used to determine if any of the supplied certificates (including those in the chain of trust) are considered "trusted". If the Controller authenticated via an entry in this table is not previously known to the Agent, the associated Role entry is automatically applied to the Controller. At most one entry in this table can exist with a given value for Alias, or with a given value for Credential. On creation of a new table entry, the Agent MUST choose initial values for Alias and Credential such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="64" hideParameterFromAcs="false" uniqueKey="true" bbfProtocol="cwmp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Enable/Disable this Credential instance. </description>

  <parameter name="Role" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Each list item MUST be the Path Name of a row in the Role table. If the referenced object is deleted, the corresponding item MUST be removed from the list. Comma-separated list of strings, the (set of) Role(s) applied to a Controller authenticated through this Credential instance. The roles are added to the Controller's current list of Roles by replacing the value of the USPAgent.Controller.{i}.InheritedRole parameter. If the Controller is already known to the Agent, with an associated Role, this parameter has no impact. </description>

  <parameter name="Credential" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="true" uniqueKeyFunctional="true" bbfProtocol="cwmp" />
    <description source="TRx">The value MUST be the Path Name of a row in the Certificate table. If the referenced object is deleted, the parameter value MUST be set to an empty string. A reference to the Certificate.{i} instance for use in the authentication of certificates provided by a Controller and authorization of Controllers, and for authentication of certificates used for MTP encryption. </description>

  <parameter name="AllowedUses" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" validValuesArray="uspCredentialAllowedUseValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Identifies what usages the Certificate Authority (CA) authenticated by the associated credential is trusted to authorize. Enumeration of: MTP-only (The CA can only authorize MTP (domain) connectivity, and cannot authenticate Controllers), MTP-and-USP (The CA can authorize MTP (domain) connectivity and authenticate Controllers), or MTP-and-broker (The CA can authorize MTP (domain) connectivity and the presenter of this certificate is trusted to have authenticated the identity of Endpoints whose Records it transmits such that the from_id can be trusted without additional authentication. See ["Authentication and Authorization"/TR-369] for additional description of the Trusted Broker function)  </description>




<object name="Device.USPAgent.ControllerTrust.Challenge.{i}." shortObjectName="Dev2USPAgentControllertrustChallengeObject" specSource="TR181" profile="Unspecified" requirements="PC" supportLevel="DynamicInstances" hideObjectFromAcs="false" bbfProtocol="cwmp" oid="2717" lockZone="8" />
  <description source="TRx">Each instance of this table represents information that is used to challenge a Controller in order to assign a Role to the Controller or to determine the authenticity of a Certificate. The Controller requests a type of challenge from an Agent using the RequestChallenge command. The Agent returns the value of the Instruction for that type of challenge to the Controller which the Controller then provides a third-party. The third-party responds to the Instruction which the Controller then sends to the Agent using the ChallengeResponse command. The Agent verifies the response to the Challenges and executes an implementation specific Agent logic in order to establish trust with the Controller. This could include (but is not limited to): 1. Assignment of roles to the Controller is done by appending the non-duplicate roles of the Role parameter to the value of the USPAgent.Controller.{i}.AssignedRole parameter. 2. Use the Controller's certificate to which the challenge response was received in order to authenticate the identity of the Controller. At most one entry in this table can exist with a given value for Alias. On creation of a new table entry, the Agent MUST choose an initial value for Alias such that the new entry does not conflict with any existing entries. The non-functional key parameter Alias is immutable and therefore MUST NOT change once it's been assigned. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-challenge" maxLength="64" hideParameterFromAcs="false" autoGenerateAlias="true" uniqueKey="true" bbfProtocol="cwmp" />
    <description source="TRx">A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference. The following mandatory constraints MUST be enforced: The value MUST NOT be empty. The value MUST start with a letter. If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix. The value MUST NOT change once it's been assigned.</description>

  <parameter name="Description" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The description of this Challenge instance. </description>

  <parameter name="Role" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Each list item MUST be the Path Name of a row in the Role table. If the referenced object is deleted, the corresponding item MUST be removed from the list. Comma-separated list of strings, the (set of) role(s) appended (non-duplicate values only) to the value of the USPAgent.Controller.{i}.AssignedRole parameter. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">Enable/Disable this Challenge instance. </description>

  <parameter name="Type" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="Passphrase" validValuesArray="uspChallengeTypeValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The type of challenge that will be verified from the challenge response provided by the third-party through the Controller. Enumeration of: Passphrase (The challenge uses a passphrase the third-party is expected to match). </description>

  <parameter name="Value" type="base64" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" isTr69Password="true" hideParameterFromAcs="false" isConfigPassword="true" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The value of the challenge that is specific to the type of challenge. When read, this parameter returns an empty string, regardless of the actual value. </description>

  <parameter name="ValueType" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" validValuesArray="uspChallengeValueTypeValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The media type with a format as defined by [RFC6838] of the content of the Value parameter. Enumeration of: text/plain, or image/jpeg. </description>

  <parameter name="Instruction" type="base64" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The instruction that is provided to the external party by the Controller requesting the challenge. </description>

  <parameter name="InstructionType" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" validValuesArray="uspChallengeInstructionTypeValues" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The media type with a format as defined by [RFC6838] of the content of the Instruction parameter. Enumeration of: text/plain, image/jpeg, or text/html. </description>

  <parameter name="Retries" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The number of times a challenge is retried before the challenge procedure is terminated. </description>

  <parameter name="LockoutPeriod" type="int" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="30" minValue="0" maxValue="2147483647" hideParameterFromAcs="false" uniqueKey="false" bbfProtocol="cwmp" />
    <description source="TRx">The time, in seconds that a Controller that has failed the challenge is locked out (based on the value of the Retries parameter) prior to being provided the challenge again. A value of zero means that a LockoutPeriod doesn't apply and the challenge can be provided indefinitely. </description>




<vsaInfo>

<validstringarray name="minimumSingleVsaValues" />
  <element>IgnoreThis</element>

<validstringarray name="ponTypeValues" />
  <element>GPON</element>
  <element>EPON</element>
  <element>BPON</element>
  <element>GEPON</element>
  <element>PONTYPE_NONE</element>
  <element>AE</element>
  <element>XGPON</element>
  <element>XGS-PON</element>
  <element>NGPON2</element>

<validstringarray name="ponRateValues" />
  <element>1010</element>
  <element>2510</element>
  <element>1025</element>
  <element>0202</element>
  <element>1001</element>
  <element>0101</element>
  <element>0201</element>
  <element>2501</element>

<validstringarray name="uspTransferDirectionValues" />
  <element>Download</element>
  <element>Upload</element>

<validstringarray name="uspProtocolValues" />
  <element>WebSocket</element>
  <element>STOMP</element>
  <element>MQTT</element>

<validstringarray name="uspMtpStatusValues" />
  <element>Up</element>
  <element>Down</element>
  <element>Error</element>

<validstringarray name="uspTransferResultValues" />
  <element>Success</element>
  <element>Failure</element>
  <element>BOTH</element>

<validstringarray name="uspNotifyTypeValues" />
  <element>ValueChange</element>
  <element>ObjectCreation</element>
  <element>ObjectDeletion</element>
  <element>OperationComplete</element>
  <element>Event</element>

<validstringarray name="uspRequestStatusValues" />
  <element>Requested</element>
  <element>Active</element>
  <element>Canceling</element>
  <element>Success</element>
  <element>Error</element>

<validstringarray name="uspFingerprintAlgorithmValues" />
  <element>SHA-1</element>
  <element>SHA-224</element>
  <element>SHA-256</element>
  <element>SHA-384</element>
  <element>SHA-512</element>

<validstringarray name="uspCredentialAllowedUseValues" />
  <element>MTP-only</element>
  <element>MTP-and-USP</element>
  <element>MTP-and-broker</element>

<validstringarray name="uspChallengeTypeValues" />
  <element>Passphrase</element>

<validstringarray name="uspChallengeValueTypeValues" />
  <element>text/plain</element>
  <element>image/jpeg</element>

<validstringarray name="uspChallengeInstructionTypeValues" />
  <element>text/plain</element>
  <element>image/jpeg</element>
  <element>text/html</element>

<validstringarray name="uspE2ESessionModeValues" />
  <element>Require</element>
  <element>Allow</element>
  <element>Forbid</element>

<validstringarray name="uspE2ESessionStatusValues" />
  <element>Up</element>
  <element>Negotiating</element>
  <element>Down</element>

<validstringarray name="uspDualStackValues" />
  <element>IPv4</element>
  <element>IPv6</element>

<validstringarray name="ipdrEncodingValues" />
  <element>XML</element>
  <element>XDR</element>
  <element>CSV</element>
  <element>JSON</element>

<validstringarray name="ipdrProtocolValues" />
  <element>Streaming</element>
  <element>File</element>
  <element>HTTP</element>
  <element>USPEventNotif</element>

<validstringarray name="status3eValues" />
  <element>Disabled</element>
  <element>Enabled</element>
  <element>Error</element>

<validstringarray name="CSVReportFormatValues" />
  <element>ParameterPerRow</element>
  <element>ParameterPerColumn</element>

<validstringarray name="ReportFormatValues" />
  <element>ObjectHierarchy</element>
  <element>NameValuePair</element>

<validstringarray name="ReportTimestampValues" />
  <element>Unix-Epoch</element>
  <element>ISO-8601</element>
  <element>None</element>

<validstringarray name="stompConnectionStatusValues" />
  <element>Enabled</element>
  <element>Disabled</element>
  <element>Unknown</element>
  <element>Connecting</element>
  <element>ServerNotPresent</element>
  <element>Error_Misconfigured</element>
  <element>Error_AuthenticationFailure</element>
  <element>Error</element>

<validstringarray name="mqttClientStatusValues" />
  <element>Disabled</element>
  <element>Connecting</element>
  <element>Connected</element>
  <element>Error_Misconfigured</element>
  <element>Error_BrokerUnreachable</element>
  <element>Error</element>

<validstringarray name="mqttClientSubscriptionStatusValues" />
  <element>Unsubscribed</element>
  <element>Subscribed</element>
  <element>Subscribing</element>
  <element>Unsubscribing</element>
  <element>Error</element>

<validstringarray name="mqttBrokerStatusValues" />
  <element>Enabled</element>
  <element>Disabled</element>
  <element>Error_Misconfigured</element>
  <element>Error</element>

<validstringarray name="mqttBridgeStatusValues" />
  <element>Disabled</element>
  <element>Connecting</element>
  <element>Connected</element>
  <element>Error_Misconfigured</element>
  <element>Error_BrokerUnreachable</element>
  <element>Error</element>

<validstringarray name="mqttServerSelectionAlgorithmValues" />
  <element>Priority</element>
  <element>RoundRobin</element>
  <element>Random</element>

<validstringarray name="mqttBridgeSubscriptionStatusValues" />
  <element>Enabled</element>
  <element>Disabled</element>
  <element>Error</element>

<validstringarray name="mqttSubscriptionDirectionValues" />
  <element>OUT</element>
  <element>IN</element>
  <element>BOTH</element>

<validstringarray name="DualStackValues" />
  <element>IPv4</element>
  <element>IPv6</element>

<validstringarray name="LoggingLevelValues" />
  <element>Error</element>
  <element>Notice</element>
  <element>Debug</element>

</vsaInfo>

<profileInfo>
<profile name="Device2_Baseline:1" />
<profile name="Device2_Baseline:2" />
<profile name="Device2_Baseline:3" />
<profile name="Device2_Reboot:1" />
<profile name="Unspecified" />
<profile name="Device2_Firmware:1" />
<profile name="Device2_CoAPAgent:1" />
<profile name="Device2_STOMPAgent:1" />
<profile name="Device2_WebSocketAgent:1" />
<profile name="Device2_MQTTAgent:1" />
<profile name="Device2_CoAPController:1" />
<profile name="Device2_STOMPController:1" />
<profile name="Device2_WebSocketController:1" />
<profile name="Device2_MQTTController:1" />
<profile name="Device2_LocalAgent:1" />
<profile name="Device2_Controllers:1" />
<profile name="Device2_Subscriptions:1" />
<profile name="Device2_Challenge:1" />
<profile name="Device2_ControllerTrust:1" />
<profile name="Device2_BulkDataColl:1" />
<profile name="Device2_BulkDataReports:1" />
<profile name="Device2_BulkDataJSONEncoding:1" />
<profile name="Device2_BulkDataCSVEncoding:1" />
<profile name="Device2_BulkDataHTTP:1" />
<profile name="Device2_BulkDataFileTransfer:1" />
<profile name="Device2_BulkDataStreaming:1" />
<profile name="Device2_STOMPConn:1" />
<profile name="Device2_STOMPHeartbeat:1" />
<profile name="Device2_MQTTClientBase:1" />
<profile name="Device2_MQTTClientCon:1" />
<profile name="Device2_MQTTClientExtended:1" />
<profile name="Device2_MQTTClientSubscribe:1" />
<profile name="Device2_MQTTClientUserProperty:1" />
<profile name="Device2_MQTTBrokerBase:1" />
<profile name="Device2_MQTTBrokerBridgeBase:1" />
<profile name="Device2_MQTTBrokerExtended:1" />
<profile name="USPAgent:1" />
<profile name="Baseline:1" />
<profile name="X_BROADCOM_COM_Baseline:1" />
<profile name="X_BROADCOM_COM_USP:1" />
</profileInfo>


</xmlMandatorySingleRootNode>
