/dts-v1/;

#include <dt-bindings/interrupt-controller/arm-gic.h>
#include <dt-bindings/interrupt-controller/irq.h>

#include "linux_autoconf.h"

#include "../../boot_rsvdmem.dtsi"
#include "../../bcm_thermal.dtsi"

/ {
	/* memory reservations */
	#include "../../bcm_rsvdmem.dtsi"

	/* memc */
	memory_controller {
		#define MEMC_REG_NAMES	"memc-int-clear-reg", \
					"memc-int-mask-clear-reg", \
					"phyctl_idle_pad_ctl",  \
					"phyctl_idle_pad_en0",  \
					"phyctl_idle_pad_en1",  \
					"phybl0_idle_pad_ctl",  \
					"phybl1_idle_pad_ctl",  \
					"phybl2_idle_pad_ctl",  \
					"phybl3_idle_pad_ctl",  \
					"phybl0_clock_idle",    \
					"phybl1_clock_idle",    \
					"phybl2_clock_idle",    \
					"phybl3_clock_idle",    \
					"auto_self_refresh",    \
					"glb_gcfg"

		#define MEMC_REG	<0 0x80180E08 0 4>, \
					<0 0x80180E14 0 4>, \
					<0 0x801A0034 0 4>, \
					<0 0x801A0038 0 4>, \
					<0 0x801A003C 0 4>, \
					<0 0x801A04AC 0 4>, \
					<0 0x801A06AC 0 4>, \
					<0 0x801A08AC 0 4>, \
					<0 0x801A0AAC 0 4>, \
					<0 0x801A04E0 0 4>, \
					<0 0x801A06E0 0 4>, \
					<0 0x801A08E0 0 4>, \
					<0 0x801A0AE0 0 4>, \
					<0 0x8018025C 0 4>, \
					<0 0x80180004 0 4>

		#define MEMC_CPU_INT_LINE		18

		#include "../../ip/memc.dtsi"
	};

	aliases {
		serial0 = &uart0;
		serial1 = &uart1;
		spi1 = &hsspi; /* 0 = legacy, 1 = high speed */
		hs_serial0 = &hs_uart0;
		spinand0 = &spinand;
		nand0 = &nand;
	};

	chosen {
		stdout-path = "serial0:115200n8";
		/* increase coherent_pool size */
		bootargs = "coherent_pool=4M cpuidle_sysfs_switch pci=pcie_bus_safe console=ttyS0,115200 earlyprintk  rootwait rng_core.default_quality=1024";
	};

	/* clocks */
	#define PERIPH_CLK			200000000
	#define HS_SPI_PLL_CLK		400000000
	#include "../../ip/bcm_clocks.dtsi"

	misc_io {
		compatible = "brcm,misc-io";
		misc-periph-chip-id-rev = <0x0 0xff800000 0x0 0x4>;
		misc-periph-chip-id-mask = <0xffff0000>;
		misc-periph-chip-id-shift = <16>;
		misc-periph-chip-rev-mask = <0xff>;
	};

	/* PMC */
	pmc: pmc {
		#define PMC_REG_OFFSET              0x0 0x80201000
		#define PMC_REG_SIZE                0x0 0x3800
		#define PROCMON_REG_OFFSET          0x0 0x80280000
		#define PROCMON_REG_SIZE            0x0 0x184
		#include "../../ip/bcm_pmc_1_x.dtsi"
	};

	cci: cci {
		#define CCI_OFFSET					0x0 0x81090000 
		#define CCI_SIZE					0x0 0x6000
		#define SLAVEINTF_CPU_NUM			3
		#include "../../ip/bcm_arm_cci400.dtsi"
	};

	/* wan type auto detect */
	wantype_detect {
		#define GPON_GENERAL_CONFIG_ADDR	0x0 0x80150000
		#define GPON_GENERAL_CONFIG_SIZE	0x0 0x10
		#define EPON_TOP_ADDR			0x0 0x80140000
		#define EPON_TOP_SIZE			0x0 0x1C
		#define EPON_LIF_ADDR			0x0 0x80141800
		#define EPON_LIF_SIZE			0x0 0x110
		#define EPON_XPCSR_ADDR			0x0 0x80143000
		#define EPON_XPCSR_SIZE			0x0 0x124
		#define NGPON_RXGEN_ADDR		0x0 0x80160000
		#define NGPON_RXGEN_SIZE		0x0 0x80
		#include "../../ip/bcm_wantype_detect.dtsi"
	};

#if (defined(CONFIG_BCM_PDC) || defined(CONFIG_BCM_PDC_MODULE)) && \
    (defined(CONFIG_BCM_SPU) || defined(CONFIG_BCM_SPU_MODULE))
	/* spu */
	#define SPU_DMA_ADDR			0x00000000 0x8001c000
	#define SPU_DMA_SIZE			0x00000000 0x448
	#define SPU_DMA_NUM_CHAN		1
	#define SPU_DMA_NUM_AE			1
	#define SPU_CRYPTO_ADDR			0x00000000 0x8001d000
	#define SPU_CRYPTO_SIZE			0x00000000 0x64
	#define SPU_GMAC_SPI			118
	#include "../../ip/bcm_spu.dtsi"
#endif

	sata0: sata {
		#define AHCI_ADDR		0x0 0x8000a000
		#define AHCI_SIZE		0x0 0x2c
		#define SATA_CTRL_ADDR	0x0 0x80008000
		#define SATA_CTRL_SIZE	0x0 0x2000
		#define AHCI_SS_ADDR	0x0 0x8000a100
		#define AHCI_SS_SIZE	0x0 0x80
		#define AHCI_IRQ		45
		#include "../../ip/bcm_sata.dtsi"
	};

	/* UBUS */
	ubus: ubus {
		compatible = "simple-bus";
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		ubus_sys: ubus_sys {
			#address-cells = <2>;
			#size-cells = <2>;
			ranges;
			#define UBUS_SYSTOP_OFFSET         0x0 0x83000000
			#define UBUS_SYSTOP_SIZE           0x0 0x80
			#define UBUS_REGISTRATION_OFFSET   0x0 0x83000200
			#define UBUS_REGISTRATION_SIZE     0x0 0x80
			#define UBUS_COHERENCY_PORT_OFFSET 0x0 0x810A0400
			#define UBUS_COHERENCY_PORT_SIZE   0x0 0x400
			#define UBUS_MODULE_XRDP           0x0
			#include "../../ip/bcm_ubus4.dtsi"
			ubus_mst_sys: ubus_mst {
				reg-names = "BIU", "PER", "USB", "PERDMA",
					"SPU", "PCIE0", "PCIE2", "PMC",
					"TOP_BUFF";
				reg = <0x0 0x83020000 0x0 0x1000>,
					<0x0 0x83058000 0x0 0x1000>,
					<0x0 0x83038000 0x0 0x1000>,
					<0x0 0x83060000 0x0 0x1000>,
					<0x0 0x83030000 0x0 0x1000>,
					<0x0 0x8300C000 0x0 0x1000>,
					<0x0 0x83014000 0x0 0x1000>,
					<0x0 0x83044000 0x0 0x1000>,
					<0x0 0x830e0000 0x0 0x1000>;
			};
		};

		ubus_xrdp: ubus_xrdp {
			#address-cells = <2>;
			#size-cells = <2>;
			ranges;
			#define UBUS_SYSTOP_OFFSET        0x0 0x834d4000
			#define UBUS_SYSTOP_SIZE          0x0 0x80
			#define UBUS_REGISTRATION_OFFSET  0x0 0x834d4200
			#define UBUS_REGISTRATION_SIZE    0x0 0x80
			#define UBUS_MODULE_XRDP          0x1
			#include "../../ip/bcm_ubus4.dtsi"
			ubus_mst_xrdp: ubus_mst {
				reg-names = "QM", "DQM", "DMA0", "DMA1",
					"NATC", "RQ0", "RQ1", "RQ2",
					"RQ3", "XRDP_BUFF";
				reg = <0x0 0x834AC000 0x0 0x1000>,
					<0x0 0x834A4000 0x0 0x1000>,
					<0x0 0x83464000 0x0 0x1000>,
					<0x0 0x83468000 0x0 0x1000>,
					<0x0 0x834A0000 0x0 0x1000>,
					<0x0 0x83480000 0x0 0x1000>,
					<0x0 0x83488000 0x0 0x1000>,
					<0x0 0x83490000 0x0 0x1000>,
					<0x0 0x83498000 0x0 0x1000>,
					<0x0 0x834e4000 0x0 0x1000>;
			};
		};

		ubus_dcm_sys: ubus_dcm_sys {
			#define UBUS_DCM_CLK_OFFSET  0x0 0x83000080
			#define UBUS_DCM_CLK_SIZE    0x0 0x80
			#define UBUS_MODULE_XRDP     0x0
			#include "../../ip/bcm_ubus4_dcm.dtsi"
		};
		ubus_dcm_xrdp: ubus_dcm_xrdp {
			#define UBUS_DCM_CLK_OFFSET  0x0 0x834d4080
			#define UBUS_DCM_CLK_SIZE    0x0 0x80
			#define UBUS_MODULE_XRDP     0x1
			#include "../../ip/bcm_ubus4_dcm.dtsi"
		};
	};

	periph {
		compatible = "simple-bus";
		#address-cells = <2>;
		#size-cells = <2>;
		ranges = <0x0 0x0 0x0 0xff800000 0x0 0x62000>;

		strap: strap {
			#define STRAP_REG_OFFSET            0x0 0x2600
			#define STRAP_REG_SIZE              0x0 0x4
			#include "../../ip/bcm_strap.dtsi"
			boot-select-0=<5 1>;
			boot-select-1=<6 1>;
			boot-select-2=<7 1>;
			boot-select-3=<8 1>;
			boot-select-4=<9 1>;
			boot-select-5=<11 1>;
			bootrom-boot=<10 0>;
			sata-strap-enable-bit=<3 0>;
			strap-cpu-slow-freq=<14 1>;
		};

		dying_gasp: dying_gasp {
			#define DG_PERIPH_REG_OFFSET	0x0 0x26D8
			#define DG_PERIPH_REG_SIZE	0x0 0x4
			#define DG_UART_DR_OFFSET	0x0 0x654
			#define DG_UART_DR_SIZE		0x0 0x4
			#include "../../ip/bcm_dgasp_periph.dtsi"
			interrupts = <GIC_SPI 29 IRQ_TYPE_LEVEL_HIGH>;
		};

		otp: otp {
			#define OTP_REG_OFFSET            0x0 0xe00 
			#define OTP_REG_SIZE              0x0 0x3c
			#include "../../ip/bcm_otp.dtsi"
			sec-additional-validation;
		};

    	/* boot state */
		boot_state: boot_state {
			#define RESET_REASON_OFFSET  0x0 0x2624
			#define RESET_REASON_SIZE    0x0 0x4
			#define RESET_STATUS_OFFSET  0x0 0x2748
			#define RESET_STATUS_SIZE    0x0 0x4
			#include "../../ip/bcm_boot_state_v2.dtsi"
		};

		/* NAND controller */
		nand: nand {
			pinctrl-0 = <&data_pins &nand_ctrl_pins>;
			pinctrl-names = "default";
			#define NAND_CTRL_OFFSET		0x0 0x1800
			#define NAND_CTRL_SIZE			0x0 0x400
			#define NAND_INTR_OFFSET		0x0 0x2000
			#define NAND_INTR_SIZE			0x0 0x10
			#define NAND_CACHE_OFFSET		0x0 0x1C00
			#define NAND_CACHE_SIZE			0x0 0x200
			#include "../../ip/bcm_nand7_1.dtsi"
		};

	   	/* EMMC */
		sdhci: sdhci {
			pinctrl-0 = <&emmc_ctrl_pins>;
			pinctrl-names="default";
			#define SDHCI_OFFSET			0x00000000 0x58000
			#define SDHCI_SIZE			0x00000000 0x100
			#define SDHCI_TOPCFG_OFFSET		0x00000000 0x58100
			#define SDHCI_TOPCFG_SIZE		0x00000000 0x100
			#define SDHCI_BOOT_OFFSET		0x00000000 0x58200
			#define SDHCI_BOOT_SIZE			0x00000000 0x40
			#define SDHCI_AHBSS_CTRL_OFFSET		0x00000000 0x58300
			#define SDHCI_AHBSS_CTRL_SIZE		0x00000000 0x100
			#define SDIO_EMMC_SPI			95
			#include "../../ip/bcm_sdhci.dtsi"
		};

#if defined (CONFIG_MMC_OOPS) || (CONFIG_MMC_OOPS_MODULE)
		mmcoops {
			#define MMC_OOPS_DUMP_OFFSET    1536 /* 768KB */
			#define MMC_OOPS_DUMP_SIZE      512  /* 256KB */	
			#define MMC_OOPS_DUMP_RECSIZE   128  /* 64KB  */
			#include "../../ip/bcm_mmc_oops.dtsi"
		};
#endif

		hs_uart0: hs_serial0 {
			#define UART_OFFSET			0x0 0x58400
			#define UART_SIZE			0x0 0x1E0
			#define UART_SPI 			93
			#include "../../ip/bcm_hs_uart.dtsi"
		};

		/* UART 1*/
		uart0: serial0 {
			#define UART_OFFSET			0x0 0x640
			#define UART_SIZE			0x0 0x18
			#define UART_SPI 			32
			#include "../../ip/bcm_uart.dtsi"
		};

		/* UART 2*/
		uart1: serial1 {
			#define UART_OFFSET			0x0 0x660
			#define UART_SIZE			0x0 0x18
			#define UART_SPI 			33
			#include "../../ip/bcm_uart.dtsi"
		};

		/* HS SPI */
		hsspi: spi {
			pinctrl-0 = <&spim_group_pins>;
			pinctrl-names = "default";
			#define HS_SPI_OFFSET			0x0 0x1000
			#define HS_SPI_SIZE			0x0 0x600
			#define HS_SPI_MAX_FREQ			50000000
			/* #define HS_SPIM_SPI			37 */
			#include "../../ip/bcm_hsspi.dtsi"
			spinand: spi-nand@0 {
				pinctrl-0 = <&spim_ss0_b_pin_105>;
				pinctrl-names = "default";
				#define SPINAND_MAX_FREQ	50000000
				#include "../../ip/bcm_spinand.dtsi"
			};
			voice7 {
				pinctrl-0 = <&a_pcm_sdin_pin_0 &a_pcm_sdout_pin_1 &a_pcm_clk_pin_2 &a_pcm_fs_pin_3>;
				pinctrl-names = "default";
				compatible = "bcm-spi-voice";
				reg = <7>; /* chip select 7 */
				spi-index = <7>;/* ZSI/ISI header position index */
				spi-max-frequency = <1024000>;
			};
		};

		bcm63xx-apm-pcm {
			compatible = "brcm,bcm63xx-apm-pcm";
			reg = <0x0 0x60000 0x0 0x1c60>;
			interrupts = <GIC_SPI 114 IRQ_TYPE_LEVEL_HIGH>;
		};		

		rng: rng {
			#define RNG200_OFFSET			0x0 0x00000b80
			#define RNG200_SIZE			0x0 0x28
			#include "../../ip/bcm_rng200.dtsi"
		};

		i2c0: i2c0 {
			#define I2C_OFFSET			0x0 0x2100
			#define I2C_SIZE			0x0 0x60
			#include "../../ip/bcm_i2c_bus.dtsi"
		};

		/* use second i2c bus for pon sfp i2c device */
		i2c1: i2c1 {
			#define I2C_OFFSET			0x0 0x5a800
			#define I2C_SIZE			0x0 0x60
			#include "../../ip/bcm_i2c_bus.dtsi"
		};

		/* watchdog */
		wdt: watchdog {
			#define WATCHDOG_OFFSET			0x0 0x2780
			#define WATCHDOG_SIZE			0x0 0x10
			#define WATCHDOG_TIMEOUT		80
			#include "../../ip/bcm_wdt.dtsi"
			interrupts = <GIC_SPI 14 IRQ_TYPE_LEVEL_HIGH>;
		};

		/* periph timers */
		timers: timers {
			#define TIMERS_OFFSET		0x0 0x2700
			#define TIMERS__SIZE		0x0 0x48
			#define TIMER0_SPI			64
			#define TIMER1_SPI			65
			#define TIMER2_SPI			66
			#define TIMER3_SPI			67
			#include "../../ip/bcm_timer.dtsi"
		};

		/* watchdog reboot */
		wdt-reboot {
			compatible = "wdt-reboot";
			wdt = <&wdt>;
		};
		
		/* sotp */
		sotp {
			#define SOTP_OFFSET			0x0 0xc00
			#define SOTP_SIZE			0x0 0x84
			#include "../../ip/bcm_sotp.dtsi"
		};
		
		/* pinctrl */
		pincontroller: pinctrl {
			#define PINCTRL_OFFSET       0x0 0x554
			#define PINCTRL_SIZE         0x0 0xc
			#define PINCTRL_NUM_PINS     118
			#define PINCTRL_NUM_FUNC     8
			#define PINCTRL_GPIO_FUNC    5
			#include "../../ip/bcm_bca_pinctrl.dtsi"
			#include "6858_pinctrl.dtsi"
		};

		/* gpio */
		gpioc: gpioc {
			#define GPIO_DIR_OFFSET      0x0 0x500
			#define GPIO_DIR_SIZE        0x0 0x20
			#define GPIO_DATA_OFFSET     0x0 0x520
			#define GPIO_DATA_SIZE       0x0 0x20
			#define NUM_OF_GPIOS         118
			#include "../../ip/bcm_bca_gpio.dtsi"
		};

		/* external interrups */
		bca_extintr: bca_extintr0 {
			#define EXTINTR_OFFSET       0x0 0x4
			#define EXTINTR_SIZE         0x0 0x48
			#define MAX_EXT_INTR         8
			#include "../../ip/bcm_bca_extintr.dtsi"
			external_interrupts = <105 106 107 108 109 110 48 49>;
			clear_workarround;
		};
			
		/* Led Controller */
		led_ctrl: led_ctrl {
			#define LED_GLBL_CTRL_OFFSET     0x0 0x800
			#define LED_GLBL_CTRL_SIZE       0x0 0x4 
			#define LED_HW_EN_OFFSET         0x0 0x808
			#define LED_HW_EN_SIZE           0x0 0x4
			#define LED_SER_SHIFT_OFFSET     0x0 0x80c
			#define LED_SER_SHIFT_SIZE       0x0 0x4
			#define LED_FLASH_RATE_OFFSET    0x0 0x810
			#define LED_FLASH_RATE_SIZE      0x0 0x10
			#define LED_BRIGHTNESS_OFFSET    0x0 0x820
			#define LED_BRIGHTNESS_SIZE      0x0 0x10
			#define LED_POWER_LED_CFG_OFFSET 0x0 0x830
			#define LED_POWER_LED_CFG_SIZE   0x0 0x4
			#define LED_POWER_LUT_OFFSET     0x0 0x834
			#define LED_POWER_LUT_SIZE       0x0 0x80
			#define LED_HW_POLARITY_OFFSET   0x0 0x8b4
			#define LED_HW_POLARITY_SIZE     0x0 0x4
			#define LED_SW_DATA_OFFSET       0x0 0x8b8
			#define LED_SW_DATA_SIZE         0x0 0x4
			#define LED_SW_POLARITY_OFFSET   0x0 0x8bc
			#define LED_SW_POLARITY_SIZE     0x0 0x4
			#define LED_PAR_POLARITY_OFFSET  0x0 0x8c0
			#define LED_PAR_POLARITY_SIZE    0x0 0x4
			#define LED_SER_POLARITY_OFFSET  0x0 0x8c4
			#define LED_SER_POLARITY_SIZE    0x0 0x4
			#define LED_MASK_OFFSET          0x0 0x804
			#define LED_MASK_SIZE            0x0 0x4
			#define MAX_SUPPORTED_LEDS       32

			hw-polarity-quirk = <0xc0000000>;
			status = "okay";
			#include "../../ip/bcm_led_ctrl.dtsi"
			#include "6858_leds.dtsi"
		};
	};

	legacy_leds: legacy_leds {
		compatible = "brcm,legacy-led";
	};

	/* network configuration */
    egphy: egphy {
		compatible = "brcm,egphy";
        reg = <0x0 0x8013c040 0x0 0x0c>;
    };

    serdes {
		compatible = "brcm,serdes1";
        reg = <0x0 0x8013c00c 0x0 0x50>;
    };

    mdio1 {
        compatible = "brcm,mdio1";
        reg = <0x0 0x8013d400 0x0 0x10>;
    };

	lport {
		compatible = "brcm,lport";
        reg = <0x0 0x80138000 0x0 0x8000>,
              <0x0 0xff802600 0x0 0xe4>,
              <0x0 0x82d2b000 0x0 0xe80>;
        interrupts = <GIC_SPI 28 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 26 IRQ_TYPE_LEVEL_HIGH>;
    };

		mdio_lport: mdio_lport {
			compatible = "simple-bus";

			#address-cells = <1>;
			#size-cells = <0>;
			bus-type = "MDIO_V1";

			lportphy1:1 {
				compatible = "brcm,bcaphy";
				phy-type = "EGPHY";
				reg = <1>;
				caps-no-hdx;
				status = "disabled";
			};

			lportphy2:2 {
				compatible = "brcm,bcaphy";
				phy-type = "EGPHY";
				reg = <2>;
				caps-no-hdx;
				status = "disabled";
			};

			lportphy3:3 {
				compatible = "brcm,bcaphy";
				phy-type = "EGPHY";
				reg = <3>;
				caps-no-hdx;
				status = "disabled";
			};

			lportphy4:4 {
				compatible = "brcm,bcaphy";
				phy-type = "EGPHY";
				reg = <4>;
				caps-no-hdx;
				status = "disabled";
			};

			lportphy1e:1e {
				compatible = "brcm,bcaphy";
				phy-type = "EXT3";
				reg = <0x1e>;
				caps-no-hdx;
				status = "disabled";
			};

			lportphy1b:1b {
				compatible = "brcm,bcaphy";
				phy-type = "EXT3";
				reg = <0x1b>;
				caps-no-hdx;
				status = "disabled";
			};

			lportphy18:18 {
				compatible = "brcm,bcaphy";
				phy-type = "EXT2";
				reg = <0x18>;
				caps-no-hdx;
				status = "disabled";
			};

			lportphy19:19 {
				compatible = "brcm,bcaphy";
				phy-type = "EXT2";
				reg = <0x19>;
				caps-no-hdx;
				status = "disabled";
			};

			lportphy5:5 {
				compatible = "brcm,bcaphy";
				phy-type = "EXT1";
				reg = <0x5>;
				caps-no-hdx;
				status = "disabled";
			};

			lportphy6:6 {
				compatible = "brcm,bcaphy";
				phy-type = "EXT1";
				reg = <0x6>;
				caps-no-hdx;
				status = "disabled";
			};

			lportphy7:7 {
				compatible = "brcm,bcaphy";
				phy-type = "EXT1";
				reg = <0x7>;
				caps-no-hdx;
				status = "disabled";
			};
		};

		serdes_lport: serdes_lport {
			compatible = "simple-bus";

			#address-cells = <1>;
			#size-cells = <0>;
			bus-type = "MDIO_V1";

			lportsrds0:0 {
				compatible = "brcm,bcaphy";
				phy-type = "MPTWO";
				reg = <0x10>;
                serdes-core = <0>;
                serdes-lane = <0>;
				caps-no-hdx;
				status = "disabled";
			};

			lportsrds1:1 {
				compatible = "brcm,bcaphy";
				phy-type = "MPTWO";
				reg = <0x11>;
                serdes-core = <0>;
                serdes-lane = <1>;
				caps-no-hdx;
				status = "disabled";
			};

			lportsrds2:2 {
				compatible = "brcm,bcaphy";
				phy-type = "MPTWO";
				reg = <0x14>;
                serdes-core = <1>;
                serdes-lane = <0>;
				caps-no-hdx;
				status = "disabled";
			};

			lportsrds3:3 {
				compatible = "brcm,bcaphy";
				phy-type = "MPTWO";
				reg = <0x15>;
                serdes-core = <1>;
                serdes-lane = <1>;
				caps-no-hdx;
				status = "disabled";
			};

			lportsrds4:4 {
				compatible = "brcm,bcaphy";
				phy-type = "MPTWO";
				reg = <0x11>;
                serdes-core = <0>;
                serdes-lane = <1>;
				caps-no-hdx;
				status = "disabled";
			};

			lportsrds5:5 {
				compatible = "brcm,bcaphy";
				phy-type = "MPTWO";
				reg = <0x14>;
                serdes-core = <1>;
                serdes-lane = <0>;
				caps-no-hdx;
				status = "disabled";
			};

			lportsrds6:6 {
				compatible = "brcm,bcaphy";
				phy-type = "MPTWO";
				reg = <0x15>;
                serdes-core = <1>;
                serdes-lane = <1>;
				caps-no-hdx;
				status = "disabled";
			};

			lportsrds7:7 {
				compatible = "brcm,bcaphy";
				phy-type = "MPTWO";
				reg = <0x10>;
                serdes-core = <0>;
                serdes-lane = <0>;
				caps-no-hdx;
				status = "disabled";
			};
		};

    wan_serdes_bus {
        compatible = "simple-bus";

        #address-cells = <1>;
        #size-cells = <0>;

        phy_wan_serdes: phy_wan_serdes {
            compatible = "brcm,bcaphy";
            phy-type = "PON";
            reg = <0>;
            status = "disabled";
        };
    };

	switch0: switch0 {
        pinctrl-names = "default", "rgmii1", "rgmii2", "rgmii3";
        pinctrl-0 = <>;
        pinctrl-1 = <&rgmii1_pins>;
        pinctrl-2 = <&rgmii2_pins>;
        pinctrl-3 = <&rgmii3_pins>;

		compatible = "brcm,enet";
		label = "bcmsw";
		sw-type = "RUNNER_SW";

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port_gphy0 {
				reg = <4>;
				mac-type = "LPORT";
				mac-index = <0>;
				phy-handle = <&lportphy1>;
				phy-mode = "gmii";
				status = "disabled";
			};

			port_hsgmii0 {
				reg = <4>;
				mac-type = "LPORT";
				mac-index = <0>;
				phy-mode = "hsgmii";
				phy-handle = <&lportsrds0>;
				status = "disabled";
			};

			port_gphy1 {
				reg = <1>;
				mac-type = "LPORT";
				phy-handle = <&lportphy2>;
				phy-mode = "gmii";
				status = "disabled";
			};

			port_xfi_hsgmii1@hsgmii1 {
				reg = <1>;
				mac-type = "LPORT";
				phy-mode = "hsgmii";
 				phy-handle = <&lportsrds1>;
				status = "disabled";
			};

			port_gphy2 {
				reg = <2>;
				mac-type = "LPORT";
				phy-handle = <&lportphy3>;
				phy-mode = "gmii";
				status = "disabled";
			};

			port_hsgmii2 {
				reg = <2>;
				mac-type = "LPORT";
				phy-mode = "hsgmii";
                phy-handle = <&lportsrds2>;
				status = "disabled";
			};

			port_gphy3 {
				reg = <3>;
				mac-type = "LPORT";
				phy-handle = <&lportphy4>;
				phy-mode = "gmii";
				status = "disabled";
			};

			port_hsgmii3 {
				reg = <3>;
				mac-type = "LPORT";
				phy-mode = "hsgmii";
                phy-handle = <&lportsrds3>;
				status = "disabled";
			};

			port_xfi_hsgmii1@xfi4 {
				reg = <0>;
				mac-type = "LPORT";
				mac-index = <4>;
				phy-mode = "xfi";
                phy-handle = <&lportsrds4>;
				status = "disabled";
			};

			port_rgmii1 {
				reg = <0>;
				mac-type = "LPORT";
				mac-index = <4>;
				phy-mode = "rgmii";
				tx-delay;
				mii-pinctrl-state = "rgmii3";
				status = "disabled";
			};

			port_rgmii2 {
				reg = <5>;
				mac-type = "LPORT";
				phy-mode = "rgmii";
				tx-delay;
				mii-pinctrl-state = "rgmii1";
				status = "disabled";
			};

			port_rgmii3 {
				reg = <6>;
				mac-type = "LPORT";
				phy-mode = "rgmii";
				tx-delay;
				mii-pinctrl-state = "rgmii2";
				status = "disabled";
			};

			port_wan {
				reg = <8>;
				phy-handle = <&phy_wan_serdes>;
				phy-mode = "serdes";
				detect;
				is-wan;
				is-wanconf-mux-ae;
				is-wanconf-mux-pon;
				status = "disabled";
			};
		};
	};

#if defined(CONFIG_BCM_CPUIDLE_CLK_DIVIDER)
	biucfg {
		compatible = "brcm,bcm-biucfg";
		reg-names = "cluster_clk_ctrl0",
				"cluster_clk_pattern0";
		reg = <0x0 0x81060710 0x0 0x4>,
				<0x0 0x81060718 0x0 0x4>;
	};
#endif

    gpon_drv {
        compatible = "brcm,gpon-drv";
        reg = <0x0 0x80148000 0x0 0x9000>;
        interrupts = <GIC_SPI 99  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_WAN_GPON_RX */
                     <GIC_SPI 98  IRQ_TYPE_LEVEL_HIGH>; /* INTERRUPT_WAN_GPON_TX */
        interrupt-names = "gpon_rx", "gpon_tx";
    };
    ngpon_drv {
        compatible = "brcm,ngpon-drv";
        reg = <0x0 0x80160000 0x0 0xd100>;
        interrupts = <GIC_SPI 86  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_WAN_XGRX */
                     <GIC_SPI 88  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_WAN_XGTX_INTR0 */
                     <GIC_SPI 87  IRQ_TYPE_LEVEL_HIGH>; /* INTERRUPT_WAN_XGTX_INTR1 */
        interrupt-names = "ngpon_rx", "ngpon_tx0", "ngpon_tx1";
    };
   
    /* xrdp,wan_bbh */
    rdpa_drv {
        compatible = "brcm,rdpa";
        reg = <0x0 0x82000000 0x0 0xE51000>, 
        <0x0 0x80170000 0x0 0x4000>;
        interrupts = <GIC_SPI 161 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_FPM */
                     <GIC_SPI 128 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_0 */
                     <GIC_SPI 129 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_1 */
                     <GIC_SPI 130 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_2 */
                     <GIC_SPI 131 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_3 */
                     <GIC_SPI 132 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_4 */
                     <GIC_SPI 133 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_5 */
                     <GIC_SPI 134 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_6 */
                     <GIC_SPI 135 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_7 */
                     <GIC_SPI 136 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_8 */
                     <GIC_SPI 137 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_9 */
                     <GIC_SPI 138 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_10 */
                     <GIC_SPI 139 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_11 */
                     <GIC_SPI 140 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_12 */
                     <GIC_SPI 141 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_13 */
                     <GIC_SPI 142 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_14 */
                     <GIC_SPI 143 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_15 */
                     <GIC_SPI 144 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_16 */
                     <GIC_SPI 145 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_17 */
                     <GIC_SPI 146 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_18 */
                     <GIC_SPI 147 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_19 */
                     <GIC_SPI 148 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_20 */
                     <GIC_SPI 149 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_21 */
                     <GIC_SPI 150 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_22 */
                     <GIC_SPI 151 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_23 */
                     <GIC_SPI 152 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_24 */
                     <GIC_SPI 153 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_25 */
                     <GIC_SPI 154 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_26 */
                     <GIC_SPI 155 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_27 */
                     <GIC_SPI 156 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_28 */
                     <GIC_SPI 157 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_29 */
                     <GIC_SPI 158 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_30 */
                     <GIC_SPI 159 IRQ_TYPE_LEVEL_HIGH>; /* INTERRUPT_XRDP_QUEUE_31 */
        interrupt-names = "fpm", "queue0", "queue1", "queue2", "queue3", "queue4", "queue5",
                          "queue6", "queue7", "queue8", "queue9", "queue10", "queue11", 
                          "queue12", "queue13", "queue14", "queue15", "queue16", "queue17",
                          "queue18", "queue19", "queue20", "queue21", "queue22", "queue23",
                          "queue24", "queue25", "queue26", "queue27", "queue28", "queue29",
                          "queue30", "queue31";
    };
    wan_serdes {
        compatible = "brcm,pon-drv";
        status = "disabled";
        reg = <0x0 0x80144000 0x0 0x0100>;
    };
    epon_drv {
        compatible = "brcm,epon-drv";
        reg = <0x0 0x80140000 0x0 0x4000>;
    };
};

&uart0 {
	status = "okay";
};
#if (defined(CONFIG_BCM_PDC) || defined(CONFIG_BCM_PDC_MODULE)) && \
    (defined(CONFIG_BCM_SPU) || defined(CONFIG_BCM_SPU_MODULE))
&spu_pdc {
	status = "okay";
};
&spu_crypto {
	status = "okay";
};

#endif
