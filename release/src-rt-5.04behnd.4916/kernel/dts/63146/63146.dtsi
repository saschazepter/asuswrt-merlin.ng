/dts-v1/;

#include "linux_autoconf.h"

/* bootstrap reserved memory */
#include "../boot_rsvdmem.dtsi"

/ {
	/* arch */
	#define PMU_CORE0_SPI	7
	#define PMU_CORE1_SPI	8
	#include "../ip/bcm_b53_dual.dtsi"

	/* clocks */
	#define PERIPH_CLK		200000000
	#define HS_SPI_PLL_CLK	200000000
	#include "../ip/bcm_clocks.dtsi"

	rdpa_drv {
		compatible = "brcm,rdpa";
		reg = <0x0 0x82000000 0x0 0xCAF004>;
                interrupts = <GIC_SPI 107 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_FPM */
                             <GIC_SPI 75  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_0 */
                             <GIC_SPI 76  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_1 */
                             <GIC_SPI 77  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_2 */
                             <GIC_SPI 78  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_3 */
                             <GIC_SPI 79  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_4 */
                             <GIC_SPI 80  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_5 */
                             <GIC_SPI 81  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_6 */
                             <GIC_SPI 82  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_7 */
                             <GIC_SPI 83  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_8 */
                             <GIC_SPI 84  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_9 */
                             <GIC_SPI 85  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_10 */
                             <GIC_SPI 86  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_11 */
                             <GIC_SPI 87  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_12 */
                             <GIC_SPI 88  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_13 */
                             <GIC_SPI 89  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_14 */
                             <GIC_SPI 90  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_15 */
                             <GIC_SPI 91  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_16 */
                             <GIC_SPI 92  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_17 */
                             <GIC_SPI 93  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_18 */
                             <GIC_SPI 94  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_19 */
                             <GIC_SPI 95  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_20 */
                             <GIC_SPI 96  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_21 */
                             <GIC_SPI 97  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_22 */
                             <GIC_SPI 98  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_23 */
                             <GIC_SPI 99  IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_24 */
                             <GIC_SPI 100 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_25 */
                             <GIC_SPI 101 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_26 */
                             <GIC_SPI 102 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_27 */
                             <GIC_SPI 103 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_28 */
                             <GIC_SPI 104 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_29 */
                             <GIC_SPI 105 IRQ_TYPE_LEVEL_HIGH>, /* INTERRUPT_XRDP_QUEUE_30 */
                             <GIC_SPI 106 IRQ_TYPE_LEVEL_HIGH>; /* INTERRUPT_XRDP_QUEUE_31 */
                interrupt-names = "fpm", "queue0", "queue1", "queue2", "queue3", "queue4", "queue5",
                          "queue6", "queue7", "queue8", "queue9", "queue10", "queue11", 
                          "queue12", "queue13", "queue14", "queue15", "queue16", "queue17",
                          "queue18", "queue19", "queue20", "queue21", "queue22", "queue23",
                          "queue24", "queue25", "queue26", "queue27", "queue28", "queue29",
                          "queue30", "queue31";
	};

	/* broadcom memory reservations */
	#include "../bcm_rsvdmem.dtsi"

	/* memc */
	memory_controller {
		#define BP_DDR_63146_DEFAULT	BP_DDR_SSC_CONFIG_1

		#define MEMC_REG_NAMES	"memc-int-clear-reg",	\
					"memc-int-mask-clear-reg",\
					"phyctl_idle_pad_ctl",	\
					"phyctl_idle_pad_en0",	\
					"phyctl_idle_pad_en1",	\
					"phybl0_idle_pad_ctl",	\
					"phybl1_idle_pad_ctl",	\
					"phybl0_clock_idle",	\
					"phybl1_clock_idle",	\
					"auto_self_refresh",	\
					"glb_gcfg"

		#define MEMC_REG	<0 0x80040E28 0 4>,	\
					<0 0x80040E34 0 4>,	\
					<0 0x80060200 0 4>,	\
					<0 0x80060204 0 4>,	\
					<0 0x80060208 0 4>,	\
					<0 0x8006071c 0 4>,	\
					<0 0x8006091c 0 4>,	\
					<0 0x8006073c 0 4>,	\
					<0 0x8006093c 0 4>,	\
					<0 0x8004000c 0 4>,	\
					<0 0x80040008 0 4>

		#define MEMC_CPU_INT_LINE	19

		#include "../ip/memc.dtsi"
	};

	aliases {
		serial0 = &uart0;
		serial1 = &uart1;
		spi1 = &hsspi; /* 0 = legacy, 1 = high speed */
		spinor0 = &spinor;		
		spinand0 = &spinand;
		nand0 = &nand;
		hs_serial0 = &hs_uart0;
	};

	chosen {
		stdout-path = "serial0:115200n8";
		/* increase coherent_pool size */
		bootargs = "coherent_pool=4M cpuidle_sysfs_switch pci=pcie_bus_safe console=ttyAMA0,115200  rootwait rng_core.default_quality=1024";
	};


	misc_io {
		compatible = "brcm,misc-io";
		misc-periph-int-ctrl = <0x0 0xFF80260C 0x0 0x4>;
		sdio-emmc-clk-sel-mask = <0x00010000>;
		misc-emmc-cktap-ctrl = <0x0 0xFF80264C 0x0 0x18>;

		misc-periph-chip-id-rev = <0x0 0xff800000 0x0 0x4>;
		misc-periph-chip-id-mask = <0xfffff000>;
		misc-periph-chip-id-shift = <12>;
		misc-periph-chip-rev-mask = <0xfff>;
	};

	/* PMC */
	pmc: pmc {
		#define PMC_REG_OFFSET              0x0 0xffb01018
		#define PMC_REG_SIZE                0x0 0x5080
		#define PROCMON_REG_OFFSET          0x0 0xffb20000
		#define PROCMON_REG_SIZE            0x0 0x240
		#define MAESTRO_REG_OFFSET          0x0 0xffb00400
		#define MAESTRO_REG_SIZE            0x0 0x5d0
		#define MAESTRO_DTCM_REG_OFFSET     0x0 0xffb80000
		#define MAESTRO_DTCM_REG_SIZE       0x0 0x1000
		#define MAESTRO_ITCM_REG_OFFSET     0x0 0xffbc0000
		#define MAESTRO_ITCM_REG_SIZE       0x0 0x4000
		#include "../ip/bcm_pmc_3_2.dtsi"
		interrupt-names = "pmc-temp-irq";
		interrupts = <GIC_SPI 29 IRQ_TYPE_LEVEL_HIGH>;
	};

	cci: cci {
		#define CCI_OFFSET					0x0 0x81100000
		#define CCI_SIZE					0x0 0x8000
		#define SLAVEINTF_CPU_NUM			1
		#include "../ip/bcm_arm_cci500.dtsi"
	};

#if defined(CONFIG_BCM_PCIE_HCD) || defined(CONFIG_BCM_PCIE_HCD_MODULE)
	/* pcie common */
	pcie: pcie {
		compatible = "brcm,bcm-pcie";
		device_type = "cpci";
		brcm,pllclkid = <0x210>;
	};

	/* pcie core 0 */
	pcie0: pcie@0 {
		#define PCIE_ID				0
		#define PCIE_SPI			69
		#define PCIE_ADDR			0x80110000
		#define PCIE_SIZE			0x0000A000
		#define PCIE_RANGE_ADDR		0xC0000000
		#define PCIE_RANGE_SIZE		0x10000000
		#include "../ip/bcm_pcie_core.dtsi"
		brcm,strap-pcie-rc-mode=<6 1>;
	};
	/* pcie core 1 */
	pcie1: pcie@1 {
		#define PCIE_ID			 	1
		#define PCIE_SPI			70
		#define PCIE_ADDR			0x80120000
		#define PCIE_SIZE			0x0000A000
		#define PCIE_RANGE_ADDR		0xD0000000
		#define PCIE_RANGE_SIZE		0x10000000
		#include "../ip/bcm_pcie_core.dtsi"
	};
	/* pcie core 2 */
	pcie2: pcie@2 {
		#define PCIE_ID			 	2
		#define PCIE_SPI			71
		#define PCIE_ADDR			0x80130000
		#define PCIE_SIZE			0x0000A000
		#define PCIE_RANGE_ADDR		0xE0000000
		#define PCIE_RANGE_SIZE		0x10000000
		#include "../ip/bcm_pcie_core.dtsi"
	};
#endif /* defined(CONFIG_BCM_PCIE_HCD) || defined(CONFIG_BCM_PCIE_HCD_MODULE) */

	/* usb */
	usb_ctrl: usb_ctrl {
		#define USB_CTRL_ADDR       0x0 0x8010f200
		#define USB_CTRL_SIZE       0x0 0x128
		#include "../ip/bcm_usb_ctrl.dtsi"
	};

	usb0_xhci: usb0_xhci {
		#define USB_ADDR            0x0 0x80100000
		#define USB_SIZE            0x0 0x484
		#define GBL_ADDR            0x0 0x8010C100
		#define GBL_SIZE            0x0 0x544
		#define USB_IRQ             73
		#include "../ip/bcm_usb_xhci.dtsi"
		xhci-no-companion;
	};

	serdes {
		compatible = "brcm,serdes1";
		reg = <0x0 0x837ff500 0x0 0x200>;
	};

	swblks {
		compatible = "brcm,swblks";
		reg-names = "bcast-ctrl",
					"qphy-ctrl",
					"sphy-ctrl";

		reg = 	<0 0x837ff000 0 0x4>,
				<0 0x837ff014 0 0x4>,
				<0 0x837ff024 0 0x4>;
		phy_base = <0x1>;
	};

	unimac {
		compatible = "brcm,unimac3";
		reg = <0x0 0x828a8000 0x0 0x8000>,
		      <0x0 0x828b0000 0x0 0x2000>;
		conf_offset = <0x1000>;
		mib_offset = <0x400>;
		top_offset = <0x400>;
	};

	egphy {
		compatible = "brcm,egphy";
		reg = <0x0 0x837FF00C 0x0 0x20>;
	};

	mdiosf2 {
		compatible = "brcm,mdio-sf2";
		reg = <0x0 0x837FFD00 0x0 0x10>,
		      <0x0 0xff85a024 0x0 0x4>;
	};

	rgmii: rgmii {
		compatible = "brcm,rgmii2";
		reg = <0x0 0x837ff184 0x0 0x44>,
		      <0x0 0xff800500 0x0 0x78>;
	};

	mpm {
		#define MPM_REG_OFFSET	0x80020000
		#define MPM_REG_SIZE	0x4000
		#include "../ip/bcm_mpm.dtsi"
	};

	xrdp {
		compatible = "simple-bus";
		#address-cells = <2>;
		#size-cells = <2>;
		ranges = <0x0 0x0 0x0 0x82000000 0x0 0xcd0000
			  0x1 0x0 0x0 0xff800000 0x0 0x62000>;

		mdio: mdio {
			compatible = "simple-bus";
			bus-type = "DSL_ETHSW";

			#address-cells = <1>;
			#size-cells = <0>;

			/* Port PHY mapping:
			 * port_gphy0 <----> phy_gphy0
			 * port_gphy1 <----> phy_gphy1
			 * port_gphy2 <----> phy_gphy2
			 * port_gphy3 <----> phy_gphy3
			 * port_gphy4 <----> phy_gphy4
			 * port_rgmii <----> phy_rgmii
			 * port_sgmii0 <---> phy_serdes0
			 * port_sgmii1 <---> phy_serdes1
			 */
			phy_gphy0:phy_gphy0 {
				compatible = "brcm,bcaphy";
				phy-type = "EGPHY";
				reg = <1>;
				status = "disabled";
			};

			phy_gphy1:phy_gphy1 {
				compatible = "brcm,bcaphy";
				phy-type = "EGPHY";
				reg = <2>;
				status = "disabled";
			};

			phy_gphy2:phy_gphy2 {
				compatible = "brcm,bcaphy";
				phy-type = "EGPHY";
				reg = <3>;
				status = "disabled";
			};

			phy_gphy3:phy_gphy3 {
				compatible = "brcm,bcaphy";
				phy-type = "EGPHY";
				reg = <4>;
				status = "disabled";
			};

			phy_gphy4:phy_gphy4 {
				compatible = "brcm,bcaphy";
				phy-type = "EGPHY";
				reg = <5>;
				status = "disabled";
			};

			phy_rgmii:phy_rgmii {
				compatible = "brcm,bcaphy";
				phy-type = "EGPHY";
				reg = <25>;
				status = "disabled";
				phy-external;
			};

			phy_cascade0:phy_cascade0 {
				compatible = "brcm,bcaphy";
				phy-type = "EXT3";
				reg = <11>;
				status = "disabled";
				phy-external;
			};

			phy_serdes0:phy_serdes0 {
				compatible = "brcm,bcaphy";
				phy-type = "2.5GAE";
				reg = <6>;
				serdes-core = <0>;
				serdes-lane = <0>;
				status = "disabled";
			};

			phy_cascade1:phy_cascade1 {
				compatible = "brcm,bcaphy";
				phy-type = "EXT3";
				reg = <12>;
				status = "disabled";
				phy-external;
			};

			phy_serdes1:phy_serdes1 {
				compatible = "brcm,bcaphy";
				phy-type = "2.5GAE";
				reg = <7>;
				serdes-core = <1>;
				serdes-lane = <0>;
				status = "disabled";
			};
		};

		switch0: switch0 {
		};
	};

	/* UBUS */
	ubus: ubus {
		compatible = "simple-bus";
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		ubus_sys: ubus_sys {
			#address-cells = <2>;
			#size-cells = <2>;
			ranges;
			#define UBUS_SYSTOP_OFFSET         0x0 0x83000000
			#define UBUS_SYSTOP_SIZE           0x0 0x80
			#define UBUS_REGISTRATION_OFFSET   0x0 0x83000200
			#define UBUS_REGISTRATION_SIZE     0x0 0x80
			#define UBUS_COHERENCY_PORT_OFFSET 0x0 0x810A0400
			#define UBUS_COHERENCY_PORT_SIZE   0x0 0x400
			#define UBUS_MODULE_XRDP           0x0
			#include "../ip/bcm_ubus4.dtsi"
			ubus_mst_sys: ubus_mst {
				reg-names = "BIU", "PER", "USB", "DSL",
					"DSLCPU", "PCIE0", "PCIE1", "PCIE2",
					"DMA0", "DMA1", "RQ0", "QM",
					"MPM";
				reg = <0x0 0x83020000 0x0 0x4000>,
					<0x0 0x83010000 0x0 0x4000>,
					<0x0 0x83018000 0x0 0x4000>,
					<0x0 0x83048000 0x0 0x4000>,
					<0x0 0x83050000 0x0 0x4000>,
					<0x0 0x83028000 0x0 0x4000>,
					<0x0 0x83030000 0x0 0x4000>,
					<0x0 0x83038000 0x0 0x4000>,
					<0x0 0x83060000 0x0 0x4000>,
					<0x0 0x83068000 0x0 0x4000>,
					<0x0 0x83058000 0x0 0x4000>,
					<0x0 0x83070000 0x0 0x4000>,
					<0x0 0x83080000 0x0 0x4000>;
			};
		};

		ubus_dcm_sys: ubus_dcm_sys {
			#define UBUS_DCM_CLK_OFFSET  0x0 0x83000080
			#define UBUS_DCM_CLK_SIZE    0x0 0x80
			#define UBUS_MODULE_XRDP     0x0
			#include "../ip/bcm_ubus4_dcm.dtsi"
		};
	};

	/* Legacy UBUS base */
	periph {
		compatible = "simple-bus";
		#address-cells = <2>;
		#size-cells = <2>;
		ranges = <0x0 0x0 0x0 0xff800000 0x0 0x62000>;

		/* boot state */
		boot_state: boot_state {
			#define RESET_REASON_OFFSET	0x0 0x2628
			#define RESET_REASON_SIZE	0x0 0x4
			#define RESET_STATUS_OFFSET	0x0 0x5a01c
			#define RESET_STATUS_SIZE	0x0 0x4
			#include "../ip/bcm_boot_state_v2.dtsi"
		};

		nand: nand {
			pinctrl-0 = <&data_pins &nand_ctrl_pins>;
			pinctrl-names = "default";	
			#define NAND_CTRL_OFFSET		0x0 0x1800
			#define NAND_CTRL_SIZE			0x0 0x400
			#define NAND_INTR_OFFSET		0x0 0x2000
			#define NAND_INTR_SIZE			0x0 0x10
			#define NAND_CACHE_OFFSET		0x0 0x1C00
			#define NAND_CACHE_SIZE			0x0 0x200
			#include "../ip/bcm_nand7_1.dtsi"
		};
		/* EMMC */
		sdhci: sdhci {
			pinctrl-0 = <&emmc_ctrl_pins>;
			pinctrl-names="default";
			#define SDHCI_OFFSET			0x00000000 0x10000
			#define SDHCI_SIZE			0x00000000 0x100
			#define SDHCI_TOPCFG_OFFSET		0x00000000 0x10100
			#define SDHCI_TOPCFG_SIZE		0x00000000 0x100
			#define SDHCI_BOOT_OFFSET		0x00000000 0x10200
			#define SDHCI_BOOT_SIZE			0x00000000 0x40
			#define SDHCI_AHBSS_CTRL_OFFSET		0x00000000 0x10300
			#define SDHCI_AHBSS_CTRL_SIZE		0x00000000 0x100
			#define SDHCI_HS200_BASE_CLOCK_FREQ	180000000
			#define SDIO_EMMC_SPI			38
			#include "../ip/bcm_sdhci.dtsi"
			mmc-ddr-3_3v;
			sdhci-pll-baseclk-mhz = <5000>;
			sdhci-pll-valid-op-mhz = <100 125 147 180 185 200>;
		};

#if defined (CONFIG_MMC_OOPS) || (CONFIG_MMC_OOPS_MODULE)
		mmcoops {
			#define MMC_OOPS_DUMP_OFFSET    1536 /* 768KB */
			#define MMC_OOPS_DUMP_SIZE      512  /* 256KB */	
			#define MMC_OOPS_DUMP_RECSIZE   128  /* 64KB  */
			#include "../ip/bcm_mmc_oops.dtsi"
		};
#endif

		rng: rng {
			#define RNG200_OFFSET                   0x00000000 0xb80
			#define RNG200_SIZE                     0x00000000 0x30
			#include "../ip/bcm_rng200.dtsi"
		};

		trng: trng {
			#define TRNG_OFFSET                   0x00000000 0x3800
			#define TRNG_SIZE                     0x00000000 0x0800
			#include "../ip/bcm_trng.dtsi"
			status = "disabled";
		};

		strap: strap {
			#define STRAP_REG_OFFSET            0x0 0x2600
			#define STRAP_REG_SIZE              0x0 0x4
			#include "../ip/bcm_strap.dtsi"
			boot-select-0=<0 1>;
			boot-select-1=<1 1>;
			boot-select-2=<2 1>;
			boot-select-3=<3 1>;
			boot-select-4=<4 1>;
			boot-select-5=<5 1>;
			bootrom-boot=<12 1>;
		};

		dying_gasp: dying_gasp {
			#define DG_IRQ_MASK_REG_OFFSET	0x0 0x5A004
			#define DG_IRQ_MASK_REG_SIZE	0x0 0x4
			#define DG_UART_DR_OFFSET	0x0 0x12000
			#define DG_UART_DR_SIZE		0x0 0x4
			#include "../ip/bcm_dgasp_pmc.dtsi"
			reinit-hw-irqenable = <1>;
			interrupts = <GIC_SPI 28 IRQ_TYPE_LEVEL_HIGH>;
		};

		otp: otp {
			#define OTP_REG_OFFSET            0x0 0x2800
			#define OTP_REG_SIZE              0x0 0x64
			#include "../ip/bcm_otp.dtsi"
		};

		/* pinctrl */
		pincontroller: pinctrl {
			#define PINCTRL_OFFSET       0x0 0x554
			#define PINCTRL_SIZE         0x0 0xc
			#define PINCTRL_NUM_PINS     126
			#define PINCTRL_NUM_FUNC     8
			#define PINCTRL_GPIO_FUNC    4
			#include "../ip/bcm_bca_pinctrl.dtsi"
			#include "63146_pinctrl.dtsi"
		};

		/* gpio */
		gpioc: gpioc {
			#define GPIO_DIR_OFFSET      0x0 0x500
			#define GPIO_DIR_SIZE        0x0 0x20
			#define GPIO_DATA_OFFSET     0x0 0x520
			#define GPIO_DATA_SIZE       0x0 0x20
			#define NUM_OF_GPIOS         88
			#include "../ip/bcm_bca_gpio.dtsi"
		};

		/* external interrups */
		bca_extintr: bca_extintr0 {
			#define EXTINTR_OFFSET       0x0 0x4
			#define EXTINTR_SIZE         0x0 0x48
			#define MAX_EXT_INTR         8
			#include "../ip/bcm_bca_extintr.dtsi"
			external_interrupts = <47 48 49 50 51 52 53 54>;
		};

		/* UART 1*/
		uart0: serial0 {
			#define UART_OFFSET			0x0 0x12000
			#define UART_SIZE			0x0 0x1000
			#define UART_SPI			32
			#define UART_CLK_LABEL			refclk50mhz
			#define UART_CLK			50000000
			#include "../ip/bcm_arm_uart.dtsi"
		};

		uart1: serial1 {
			#define UART_OFFSET			0x0 0x13000
			#define UART_SIZE			0x0 0x1000
			#define UART_SPI			33
			#define UART_CLK_LABEL			refclk50mhz
			#define UART_CLK			50000000
			#include "../ip/bcm_arm_uart.dtsi"
		};


		hs_uart0: hs_serial0 {
			#define UART_OFFSET			0x0 0x10400
			#define UART_SIZE			0x0 0x1E0
			#define UART_SPI 			34
			#include "../ip/bcm_hs_uart.dtsi"
		};

		/* HS SPI */
		hsspi: spi {
			pinctrl-0 = <&spim_group_pins>;
			pinctrl-names = "default";
			#define HS_SPI_OFFSET			0x0 0x1000
			#define HS_SPI_SIZE			0x0 0x600
			#define HS_SPI_MAX_FREQ			50000000
			/* #define HS_SPIM_SPI			36 */
			#include "../ip/bcm_hsspi.dtsi"
			spinand: spi-nand@0 {
				pinctrl-0 = <&hs_spim_ss_0_b_pin_36>;
				pinctrl-names = "default";
				#define SPINAND_MAX_FREQ	50000000
				#include "../ip/bcm_spinand.dtsi"
			};
			spinor: spi-nor@0 {
				pinctrl-0 = <&hs_spim_ss_0_b_pin_36>;
				pinctrl-names = "default";
				#define SPINOR_MAX_FREQ	50000000
				#include "../ip/bcm_spinor.dtsi"
			};
			voice7 {
				pinctrl-0 = <&pcm_sdin_pin_80 &pcm_sdout_pin_81 &pcm_clk_pin_85 &pcm_fs_pin_82>;
				pinctrl-names = "default";
				compatible = "bcm-spi-voice";
				reg = <7>; /* chip select 7 */
				spi-index = <7>;/* ZSI/ISI header position index */
				spi-max-frequency = <1024000>;
			};
		};

		bcm63xx-apm-pcm {
			compatible = "brcm,bcm63xx-apm-pcm";
			reg = <0x0 0x60000 0x0 0x1c60>;
			interrupts = <GIC_SPI 41 IRQ_TYPE_LEVEL_HIGH>;
		};

		i2c0: i2c0 {
			#define I2C_OFFSET			0x0 0x2100
			#define I2C_SIZE			0x0 0x60
			#include "../ip/bcm_i2c_bus.dtsi"
		};

		i2c1: i2c1 {
			#define I2C_OFFSET			0x0 0x5a800
			#define I2C_SIZE			0x0 0x60
			#include "../ip/bcm_i2c_bus.dtsi"
		};

		i2s: bcm63xx-i2s {
			compatible = "brcm,bcm63xx-i2s";
			reg = <0x0 0x2080 0x0 0x7f>;
			interrupts = <GIC_SPI 44 IRQ_TYPE_LEVEL_HIGH>;
			clocks = <&i2stxclk>,<&i2srxclk>,<&osc>;
			clock-names = "i2stxclk","i2srxclk","i2sosc";
		};

		/* periph timers */
		timers: timers {
			#define TIMERS_OFFSET		0x0 0x400
			#define TIMERS__SIZE		0x0 0x48
			#define TIMER0_SPI			11
			#define TIMER1_SPI			12
			#define TIMER2_SPI			13
			#define TIMER3_SPI			14
			#include "../ip/bcm_timer.dtsi"
		};

		/* watchdog */
		wdt: watchdog {
			#define WATCHDOG_OFFSET			0x0 0x480
			#define WATCHDOG_SIZE			0x0 0x10
			#define WATCHDOG_TIMEOUT		80
			#include "../ip/bcm_wdt.dtsi"
			interrupts = <GIC_SPI 16 IRQ_TYPE_LEVEL_HIGH>;
		};

		/* watchdog reboot */
		wdt-reboot {
			compatible = "wdt-reboot";
			wdt = <&wdt>;
		};

		/* Led Controller */
		led_ctrl: led_ctrl {
			#define CLED_GLBL_CTRL_OFFSET           0x0 0x3000
			#define CLED_GLBL_CTRL_SIZE             0x0 0x4
			#define CLED_HW_EN_OFFSET               0x0 0x3004
			#define CLED_HW_EN_SIZE                 0x0 0x4
			#define CLED_SER_SHIFT_OFFSET           0x0 0x3008
			#define CLED_SER_SHIFT_SIZE             0x0 0x4
			#define CLED_HW_POLARITY_OFFSET         0x0 0x300c
			#define CLED_HW_POLARITY_SIZE           0x0 0x4
			#define CLED_SW_SET_OFFSET              0x0 0x3010
			#define CLED_SW_SET_SIZE                0x0 0x4
			#define CLED_SW_POLARITY_OFFSET         0x0 0x3014
			#define CLED_SW_POLARITY_SIZE           0x0 0x4
			#define CLED_CH_ACTIVATE_OFFSET         0x0 0x301c
			#define CLED_CH_ACTIVATE_SIZE           0x0 0x4
			#define CLED_XX_CONFIG_OFFSET           0x0 0x3020
			#define CLED_XX_CONFIG_SIZE             0x0 0x200
			#define CLED_SW_CLEAR_OFFSET            0x0 0x3444
			#define CLED_SW_CLEAR_SIZE              0x0 0x4
			#define CLED_SW_STATUS_OFFSET           0x0 0x3448
			#define CLED_SW_STATUS_SIZE             0x0 0x4
			#define CLED_OUT_MUX_OFFSET             0x0 0x3460
			#define CLED_OUT_MUX_SIZE               0x0 0x20
			#define CLED_SERIAL_POLARITY_OFFSET     0x0 0x3454
			#define CLED_SERIAL_POLARITY_SIZE       0x0 0x4
			#define CLED_PARALLEL_POLARITY_OFFSET   0x0 0x3018
			#define CLED_PARALLEL_POLARITY_SIZE     0x0 0x4
			#define MAX_SUPPORTED_LEDS              32

			status = "okay";
			#include "../ip/bcm_cled_ctrl.dtsi"
			#include "63146_leds.dtsi"
		};

		/* sotp */
		sotp {
			#define SOTP_OFFSET			0x0 0x5000
			#define SOTP_SIZE			0x0 0x500
			#include "../ip/bcm_sotp_skp.dtsi"
		};

		i2s_clkmclk_syscon: i2s_clkmclk_syscon@0xFF802080 {
			compatible = "brcm,i2s-audio-clkmclk-syscon", "syscon";
			reg = <0x0 0x2080 0x0 0x80>;
		};

	};

	legacy_leds: legacy_leds {
		compatible = "brcm,legacy-led";
	};

	vreg_sync: vreg_sync {
		compatible = "brcm,vreg-sync";
	};
		
	therm0: brcm-therm {
		compatible = "brcm,therm";
		reg-names="bac_cpu_therm_temp";
		reg = <0 0x8106037c 0 0x04>;
		status = "okay";
	};

	ephyled {
		compatible = "brcm,ephy-led";
		led_reg_max = <0x8>;
		reg-names = "aggregate_ctrl", "led_reg_0", "led_reg_1", "led_reg_2", "led_reg_3", "led_reg_4", "led_reg_5", "led_reg_6", "led_reg_7";
		reg = <0 0x837FF17C  0 0x4>, <0 0x837FF108 0 0xc>, <0 0x837FF114 0 0xc>, <0 0x837FF120 0 0xc>, <0 0x837FF12C 0 0xc>, <0 0x837FF138 0 0xc>, <0 0x837FF144 0 0xc>, <0 0x837FF150 0 0xc>, <0 0x837FF15C 0 0xc>;
	};

	dsl:dsl {
		#define DSL_LINE_0
		#define DSL_LINE_1
		#include "../ip/bcm_dsl.dtsi"
	};

	sar:sar {
		#define SAR_OFFSET   0x0 0x80600000
		#define SAR_SIZE     0x0 0x4000
		#define TXPAF_OFFSET 0x0 0x80757800
		#define TXPAF_SIZE   0x0 0x4
		#define SAR_CLK_FREQ "500000000"
		#include "../ip/bcm_sar.dtsi"
	};

	dsl_ctrl: dsl_ctrl {
		#define DSL_PHY_OFFSET		0x0 0x80750000
		#define DSL_PHY_SIZE		0x0 0x20000
		#define DSL_LMEM_OFFSET		0x0 0x80800000
		#define DSL_LMEM_SIZE		0x0 0xe0000
		#define DSL_XMEM_OFFSET		0x0 0x809A0000
		#define DSL_XMEM_SIZE		0x0 0x660000
		#define DSL_SPI				67
		#include "../ip/bcm_dsl_ctrl.dtsi"
	};
};

&nand {
	status = "okay";
};
&uart0 {
	status = "okay";
};
&wdt {
	status = "okay";
};
&sdhci {
	status = "okay";
};
&hsspi {
	status = "okay";
};
&spinand {
	status = "okay";
};
&rgmii {
	status = "okay";
};
&sar {
   status = "okay";
};
&dsl_ctrl {
	status = "okay";
};
&switch0 {
	compatible = "brcm,enet";
	label = "bcmsw";
	sw-type = "RUNNER_SW";

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port_gphy0 {
			reg = <0>;
			mac-type = "UNIMAC";
			phy-handle = <&phy_gphy0>;
			phy-mode = "gmii";
			gmii-direct;
			status = "disabled";
		};

		port_gphy1 {
			reg = <1>;
			mac-type = "UNIMAC";
			phy-handle = <&phy_gphy1>;
			phy-mode = "gmii";
			gmii-direct;
			status = "disabled";
		};

		port_gphy2 {
			reg = <2>;
			mac-type = "UNIMAC";
			phy-handle = <&phy_gphy2>;
			phy-mode = "gmii";
			gmii-direct;
			status = "disabled";
		};

		port_gphy3 {
			reg = <3>;
			mac-type = "UNIMAC";
			phy-handle = <&phy_gphy3>;
			phy-mode = "gmii";
			gmii-direct;
			status = "disabled";
		};

		port_gphy4 {
			reg = <4>;
			mac-type = "UNIMAC";
			phy-handle = <&phy_gphy4>;
			phy-mode = "gmii";
			gmii-direct;
			status = "disabled";
		};

		port_rgmii {
			reg = <5>;
			mac-type = "UNIMAC";
			phy-handle = <&phy_rgmii>;
			phy-mode = "rgmii";
			status = "disabled";
		};

		port_sgmii0 {   /* aka LAN */
			reg = <6>;
			mac-type = "UNIMAC";
			phy-handle = <&phy_serdes0>;
			phy-mode = "serdes";
			status = "disabled";
		};

		port_sgmii1 {   /* aka AE/WAN */
			reg = <7>;
			mac-type = "UNIMAC";
			phy-handle = <&phy_serdes1>;
			phy-mode = "serdes";
			status = "disabled";
		};
	};
};
&clocks {
	osc: oscillator {
		#clock-cells = <0>;
		compatible = "fixed-clock";
		clock-frequency = <200000000>; /* xpon 200MHz output */
	};
	i2stxclk: i2stxclk@0x80158000 {
		#clock-cells = <0>;
		compatible = "brcm,i2s-tx-clock";
		clocks = <&osc>;
		clk-mclk-syscon        = <&i2s_clkmclk_syscon>;
		clock-tx-output-names  = "i2s_tx_clk";
	};

	i2srxclk: i2srxclk@0x80158000 {
		#clock-cells = <0>;
		compatible = "brcm,i2s-rx-clock";
		clocks = <&osc>;
		clk-mclk-syscon        = <&i2s_clkmclk_syscon>;
		clock-rx-output-names  = "i2s_rx_clk";
	};
};


