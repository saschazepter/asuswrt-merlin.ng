/*
 *  Copyright: (c) 2020 Broadcom.
 *  All rights reserved.
 *
 * This file contains structure and routine declarations for the
 * Switch-on-a-Chip Driver.
 *
 * This file also includes the more common include files so the
 * individual driver files don't have to include as much.
 *
 * <:label-BRCM:2022:DUAL/GPL:standard
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License, version 2, as published by
 * the Free Software Foundation (the "GPL").
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * 
 * A copy of the GPL is available at http://www.broadcom.com/licenses/GPLv2.php, or by
 * writing to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 * 
 * :>
 *
 */

#ifndef _SOC_DRV_H
#define _SOC_DRV_H

#include "soc/mem.h"
#include "soc/memory.h"
#include "soc/mcm/enum_types.h"


/*
 * Typedef: soc_driver_t
 * Purpose: Chip driver.  All info about a particular device type.
 * Notes: These structures are automatically generated by mcm.
 *        Used in soc/mcm/bcm*.c files.
 */
typedef struct soc_driver_s {
    soc_mem_info_t          **mem_info;          /* memory array */
} soc_driver_t;

/*
 * Typedef: soc_control_t
 * Purpose: SOC Control Structure.  All info about a device instance.
 */

typedef struct soc_control_s {
    soc_driver_t *chip_driver;
} soc_control_t;

extern int soc_attach(int unit);
extern soc_control_t *soc_control[SOC_MAX_NUM_DEVICES];
extern int soc_macsec_hw_init(int unit, int macsec_ing_byp, int macsec_egr_byp);

#endif  /* !_SOC_DRV_H */
